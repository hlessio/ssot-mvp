
> ssot-3005@1.0.0 start
> node src/backend/server.js

🎯 Avvio Server SSOT Dinamico Evoluto - Fase 1 Frontend
============================================================
[AttributeSpace] AttributeSpace Evoluto inizializzato {
  enableBatching: true,
  batchDelay: 30,
  maxLoopDetection: 5,
  enableLogging: true
}
🌱 AttributeDiscoveryManager inizializzato - Schema Organico
🔗 ImplicitRelationManager inizializzato - Relazioni Organiche
🤖 SoftValidationEngine inizializzato - Validazione Intelligente
🔗 RelationEngine inizializzato
🚀 EntityEngine Evoluto inizializzato
🎯 ModuleRelationService inizializzato
📄 DocumentService inizializzato per SSOT-4000
[AttributeSpace] Nuova sottoscrizione registrata: sub_1 {
  type: 'entity',
  entityType: '*',
  entityId: '*',
  attributeName: '*',
  attributeNamePattern: undefined,
  attributeType: undefined,
  changeType: '*',
  relationType: '*',
  sourceEntityType: undefined,
  targetEntityType: undefined,
  custom: undefined
}
[AttributeSpace] Nuova sottoscrizione registrata: sub_2 {
  type: 'relation',
  entityType: '*',
  entityId: '*',
  attributeName: '*',
  attributeNamePattern: undefined,
  attributeType: undefined,
  changeType: '*',
  relationType: '*',
  sourceEntityType: undefined,
  targetEntityType: undefined,
  custom: undefined
}
[AttributeSpace] Nuova sottoscrizione registrata: sub_3 {
  type: 'schema',
  entityType: '*',
  entityId: '*',
  attributeName: '*',
  attributeNamePattern: undefined,
  attributeType: undefined,
  changeType: '*',
  relationType: '*',
  sourceEntityType: undefined,
  targetEntityType: undefined,
  custom: undefined
}
[AttributeSpace] Nuova sottoscrizione registrata: sub_4 {
  type: 'entity',
  entityType: '*',
  entityId: '*',
  attributeName: '*',
  attributeNamePattern: '*password*',
  attributeType: undefined,
  changeType: '*',
  relationType: '*',
  sourceEntityType: undefined,
  targetEntityType: undefined,
  custom: undefined
}
[AttributeSpace] Nuova sottoscrizione registrata: sub_5 {
  type: 'entity',
  entityType: '*',
  entityId: '*',
  attributeName: '*',
  attributeNamePattern: undefined,
  attributeType: undefined,
  changeType: '*',
  relationType: '*',
  sourceEntityType: undefined,
  targetEntityType: undefined,
  custom: [Function: custom]
}
✅ AttributeSpace Evoluto configurato con 5 sottoscrizioni pattern-based
🔌 Connessione a Neo4j...
Connessione a Neo4j in corso...
✅ Connessione a Neo4j stabilita con successo (Pool: 10 connections)
🚀 Inizializzazione componenti evoluti...
🔄 Inizializzazione SchemaManager evoluto...
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType)
            RETURN s.entityType as entityType
            ORDER BY s.entityType
        
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: ' Giannino',
  version: 1,
  mode: 'flexible',
  created: 1749507773348,
  modified: '2025-06-09T22:22:53.349Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: eta',
      name: 'eta',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'integer',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: attivo',
      name: 'attivo',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'boolean',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: sito_web',
      name: 'sito_web',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: telefono',
      name: 'telefono',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: email',
      name: 'email',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'email',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: nome',
      name: 'nome',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: 'CompositeDocument',
  version: 1,
  mode: 'strict',
  created: 1749909968946,
  modified: '2025-06-14T14:06:08.947Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Stato del documento',
      name: 'status',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'select',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Metadati aggiuntivi del documento',
      name: 'metadata',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'json',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Layout e configurazione dei moduli nel documento',
      name: 'layout',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'json',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'ID del proprietario del documento',
      name: 'ownerId',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: true,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Descrizione del documento',
      name: 'description',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'text',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Nome del documento composito',
      name: 'name',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: true,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Progetto di appartenenza del documento',
      name: 'projectId',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'reference',
      required: false,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: 'Contact',
  version: 1,
  mode: 'flexible',
  created: 1749949111009,
  modified: '2025-06-15T00:58:31.009Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Contact name',
      name: 'nome',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: true,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Phone number',
      name: 'telefono',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Email address',
      name: 'email',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'email',
      required: false,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: 'FilmProject',
  version: 1,
  mode: 'flexible',
  created: 1749507549685,
  modified: '2025-06-09T22:19:09.685Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: budget',
      name: 'budget',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'integer',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: anno',
      name: 'anno',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'integer',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: regista',
      name: 'regista',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: nome',
      name: 'nome',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: 'ModuleInstance',
  version: 1,
  mode: 'flexible',
  created: 1749507550328,
  modified: '2025-06-09T22:19:10.328Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: version',
      name: 'version',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'integer',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: description',
      name: 'description',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: targetEntityId',
      name: 'targetEntityId',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: targetEntityType',
      name: 'targetEntityType',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: templateModuleId',
      name: 'templateModuleId',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: instanceName',
      name: 'instanceName',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: 'Project',
  version: 1,
  mode: 'strict',
  created: 1749909968557,
  modified: '2025-06-14T14:06:08.558Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Budget del progetto',
      name: 'budget',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'number',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Data di fine del progetto',
      name: 'endDate',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'date',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Data di inizio del progetto',
      name: 'startDate',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'date',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Nome del progetto',
      name: 'name',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: true,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Stato del progetto',
      name: 'status',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'select',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Descrizione del progetto',
      name: 'description',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'text',
      required: false,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: 'TestDiscovery',
  version: 1,
  mode: 'flexible',
  created: 1749507550668,
  modified: '2025-06-09T22:19:10.668Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: attivo',
      name: 'attivo',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'boolean',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: telefono',
      name: 'telefono',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: email',
      name: 'email',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'email',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: nome',
      name: 'nome',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: 'TestEvoluzione',
  version: 1,
  mode: 'flexible',
  created: 1749538026273,
  modified: '2025-06-10T06:47:06.273Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: nome',
      name: 'nome',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaEntityType {entityType: $entityType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s, 
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description,
                       referencesEntityType: a.referencesEntityType,
                       relationTypeForReference: a.relationTypeForReference,
                       displayAttributeFromReferencedEntity: a.displayAttributeFromReferencedEntity,
                       cardinalityForReference: a.cardinalityForReference
                   } END) as attributes
        
✅ Schema entità caricato: {
  entityType: 'TestOrganico',
  version: 1,
  mode: 'flexible',
  created: 1749661496032,
  modified: '2025-06-11T17:04:56.032Z',
  constraints: [],
  attributes: [
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: attivo',
      name: 'attivo',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'boolean',
      required: false,
      validationRules: null
    },
    {
      referencesEntityType: null,
      displayAttributeFromReferencedEntity: null,
      description: 'Auto-discovered attribute: nome',
      name: 'nome',
      relationTypeForReference: null,
      cardinalityForReference: null,
      defaultValue: null,
      type: 'string',
      required: false,
      validationRules: null
    }
  ]
}
✅ Trovati 9 schemi entità
✅ Schema entità caricato:  Giannino
✅ Schema entità caricato: CompositeDocument
✅ Schema entità caricato: Contact
✅ Schema entità caricato: FilmProject
✅ Schema entità caricato: ModuleInstance
✅ Schema entità caricato: Project
✅ Schema entità caricato: TestDiscovery
✅ Schema entità caricato: TestEvoluzione
✅ Schema entità caricato: TestOrganico
🔍 Esecuzione query: 
            MATCH (s:SchemaRelationType)
            RETURN s.relationType as relationType
            ORDER BY s.relationType
        
🔍 Esecuzione query: 
            MATCH (s:SchemaRelationType {relationType: $relationType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s,
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description
                   } END) as attributes
        
✅ Schema relazione caricato: {
  relationType: 'CONTAINS_MODULE',
  version: 1,
  cardinality: '1:N',
  sourceTypes: [],
  targetTypes: [],
  created: 1749909969268,
  modified: '2025-06-14T14:06:09.269Z',
  constraints: [],
  attributes: [
    {
      description: 'Configurazione specifica per questo modulo nel documento',
      name: 'config',
      defaultValue: null,
      type: 'json',
      required: false,
      validationRules: null
    },
    {
      description: 'Stato di collasso del modulo',
      name: 'collapsed',
      defaultValue: null,
      type: 'boolean',
      required: false,
      validationRules: null
    },
    {
      description: 'Dimensione del modulo nel layout',
      name: 'size',
      defaultValue: null,
      type: 'json',
      required: false,
      validationRules: null
    },
    {
      description: 'Posizione del modulo nel layout',
      name: 'position',
      defaultValue: null,
      type: 'json',
      required: false,
      validationRules: null
    },
    {
      description: 'Ordine del modulo nel documento',
      name: 'order',
      defaultValue: null,
      type: 'number',
      required: true,
      validationRules: null
    }
  ]
}
🔍 Esecuzione query: 
            MATCH (s:SchemaRelationType {relationType: $relationType})
            OPTIONAL MATCH (s)-[:HAS_ATTRIBUTE]->(a:AttributeDefinition)
            RETURN s,
                   COLLECT(CASE WHEN a IS NOT NULL THEN {
                       name: a.name,
                       type: a.type,
                       required: a.required,
                       defaultValue: a.defaultValue,
                       validationRules: a.validationRules,
                       description: a.description
                   } END) as attributes
        
✅ Schema relazione caricato: {
  relationType: 'Knows',
  version: 1,
  cardinality: 'N:M',
  sourceTypes: [ 'Contact' ],
  targetTypes: [ 'Contact' ],
  created: 1749949111079,
  modified: '2025-06-15T00:58:31.079Z',
  constraints: [],
  attributes: [
    {
      description: 'Relationship strength (1-10)',
      name: 'strength',
      defaultValue: null,
      type: 'number',
      required: false,
      validationRules: null
    },
    {
      description: 'Since when they know each other',
      name: 'since',
      defaultValue: null,
      type: 'date',
      required: false,
      validationRules: null
    }
  ]
}
✅ Trovati 2 schemi relazione
✅ Schema relazione caricato: CONTAINS_MODULE
✅ Schema relazione caricato: Knows
✅ SchemaManager inizializzato con 9 schemi entità e 2 schemi relazione
✅ SchemaManager evoluto inizializzato
📋 Inizializzazione schemi base del sistema...
📋 Tutti gli schemi base inizializzati con successo
✅ Schemi base del sistema inizializzati
🔍 Esecuzione query: 
                MATCH (source:Entity)-[:HAS_RELATION]->(r:Relation)-[:TO_ENTITY]->(target:Entity)
                RETURN r, source, target
                ORDER BY r.created
            
✅ Caricate 2 relazioni dal database
✅ RelationEngine caricato con relazioni esistenti
🎯 Tutti i componenti evoluti inizializzati con successo
🚀 Server SSOT Dinamico Evoluto (Fase 4 - AttributeSpace) avviato su porta 3000
📱 Dashboard: http://localhost:3000/
🔌 WebSocket: ws://localhost:3000/
🧠 Componenti attivi: AttributeSpace Evoluto, EntityEngine Evoluto, RelationEngine, SchemaManager Evoluto
✅ Server pronto per frontend evoluto Fase 1
📋 Servizi disponibili:
   - API MVP compatibili per fallback
   - API evolute per SchemaService
   - File statici frontend da /frontend/
   - WebSocket per real-time updates
   - Template test page: http://localhost:3000/views/template-test.html
============================================================
2025-06-15T01:12:54.128Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T01:13:00.870Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T01:13:00.886Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:00.882Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:00.882Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:00.887Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:00.882Z"}',
  modifiedAt: '2025-06-15T01:13:00.887Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'd493841e-1dda-4a13-a908-d679c32a84b3',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: d493841e-1dda-4a13-a908-d679c32a84b3 (tipo: CompositeDocument)
✅ CompositeDocument creato: d493841e-1dda-4a13-a908-d679c32a84b3 - Test Workspace Document
2025-06-15T01:13:00.904Z - GET /api/documents/d493841e-1dda-4a13-a908-d679c32a84b3
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: d493841e-1dda-4a13-a908-d679c32a84b3 con 0 moduli
2025-06-15T01:13:00.920Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T01:13:00.920Z',
  updatedAt: '2025-06-15T01:13:00.920Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T01:13:00.920Z',
  updatedAt: '2025-06-15T01:13:00.920Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T01:13:00.920Z',
  instanceName: 'Test Contact Card',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T01:13:00.920Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test per contatti',
  id: '932c3ebc-e783-4bca-b53c-93860aeb9b80',
  version: 1,
  updatedAt: '2025-06-15T01:13:00.920Z'
}
✅ Entità creata: 932c3ebc-e783-4bca-b53c-93860aeb9b80 (tipo: ModuleInstance)
2025-06-15T01:13:00.930Z - PUT /api/documents/d493841e-1dda-4a13-a908-d679c32a84b3/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd493841e-1dda-4a13-a908-d679c32a84b3',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd493841e-1dda-4a13-a908-d679c32a84b3',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '932c3ebc-e783-4bca-b53c-93860aeb9b80',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '932c3ebc-e783-4bca-b53c-93860aeb9b80',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità d493841e-1dda-4a13-a908-d679c32a84b3
✅ ModuleInstance 932c3ebc-e783-4bca-b53c-93860aeb9b80 aggiunto al documento d493841e-1dda-4a13-a908-d679c32a84b3 con ordine 1
2025-06-15T01:13:00.953Z - GET /api/documents/d493841e-1dda-4a13-a908-d679c32a84b3
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: d493841e-1dda-4a13-a908-d679c32a84b3 con 1 moduli
2025-06-15T01:13:00.956Z - PUT /api/documents/d493841e-1dda-4a13-a908-d679c32a84b3/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'd493841e-1dda-4a13-a908-d679c32a84b3',
  targetEntityId: '932c3ebc-e783-4bca-b53c-93860aeb9b80',
  changeType: 'created'
}
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità d493841e-1dda-4a13-a908-d679c32a84b3
✅ ModuleInstance 932c3ebc-e783-4bca-b53c-93860aeb9b80 aggiornato nel documento d493841e-1dda-4a13-a908-d679c32a84b3
2025-06-15T01:13:01.019Z - GET /api/documents/d493841e-1dda-4a13-a908-d679c32a84b3
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: d493841e-1dda-4a13-a908-d679c32a84b3 con 1 moduli
2025-06-15T01:13:01.022Z - PUT /api/documents/d493841e-1dda-4a13-a908-d679c32a84b3/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                WITH r, r.id as relationId
                DELETE r
                RETURN relationId
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità d493841e-1dda-4a13-a908-d679c32a84b3
✅ ModuleInstance 932c3ebc-e783-4bca-b53c-93860aeb9b80 rimosso dal documento d493841e-1dda-4a13-a908-d679c32a84b3
2025-06-15T01:13:01.035Z - GET /api/documents/d493841e-1dda-4a13-a908-d679c32a84b3
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: d493841e-1dda-4a13-a908-d679c32a84b3 con 0 moduli
2025-06-15T01:13:01.037Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:01.036Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:01.036Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'd493841e-1dda-4a13-a908-d679c32a84b3',
  targetEntityId: '932c3ebc-e783-4bca-b53c-93860aeb9b80',
  changeType: 'deleted'
}
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:01.037Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:01.036Z"}',
  modifiedAt: '2025-06-15T01:13:01.037Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '7dfa63d9-f16d-4c0b-ad7a-9452a922527f',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 7dfa63d9-f16d-4c0b-ad7a-9452a922527f (tipo: CompositeDocument)
✅ CompositeDocument creato: 7dfa63d9-f16d-4c0b-ad7a-9452a922527f - Test Workspace Document
Nuovo client WebSocket connesso
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '7dfa63d9-f16d-4c0b-ad7a-9452a922527f',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '7dfa63d9-f16d-4c0b-ad7a-9452a922527f',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T01:13:01.547Z - PUT /api/documents/7dfa63d9-f16d-4c0b-ad7a-9452a922527f
🔧 Aggiornamento attributo description per entità 7dfa63d9-f16d-4c0b-ad7a-9452a922527f
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`description` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo description aggiornato per entità 7dfa63d9-f16d-4c0b-ad7a-9452a922527f
✅ Attributo description aggiornato per entità 7dfa63d9-f16d-4c0b-ad7a-9452a922527f
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 7dfa63d9-f16d-4c0b-ad7a-9452a922527f
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:01.037Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:01.036Z"}',
  modifiedAt: '2025-06-15T01:13:01.580Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Descrizione aggiornata via WebSocket test',
  id: '7dfa63d9-f16d-4c0b-ad7a-9452a922527f',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: 7dfa63d9-f16d-4c0b-ad7a-9452a922527f
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '7dfa63d9-f16d-4c0b-ad7a-9452a922527f',
  attributeName: 'description'
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '7dfa63d9-f16d-4c0b-ad7a-9452a922527f',
  attributeName: 'description',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '7dfa63d9-f16d-4c0b-ad7a-9452a922527f',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '7dfa63d9-f16d-4c0b-ad7a-9452a922527f',
  attributeName: undefined,
  changeType: 'updated'
}
Client WebSocket disconnesso
2025-06-15T01:13:06.617Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:06.611Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:06.611Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:06.618Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.611Z"}',
  modifiedAt: '2025-06-15T01:13:06.618Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'd7ab02df-82e1-403b-b32a-414c69f1a111',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: d7ab02df-82e1-403b-b32a-414c69f1a111 (tipo: CompositeDocument)
✅ CompositeDocument creato: d7ab02df-82e1-403b-b32a-414c69f1a111 - Test Workspace Document
2025-06-15T01:13:06.648Z - PUT /api/documents/d7ab02df-82e1-403b-b32a-414c69f1a111
🔧 Aggiornamento attributo layout per entità d7ab02df-82e1-403b-b32a-414c69f1a111
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`layout` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo layout aggiornato per entità d7ab02df-82e1-403b-b32a-414c69f1a111
✅ Attributo layout aggiornato per entità d7ab02df-82e1-403b-b32a-414c69f1a111
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd7ab02df-82e1-403b-b32a-414c69f1a111',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd7ab02df-82e1-403b-b32a-414c69f1a111',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd7ab02df-82e1-403b-b32a-414c69f1a111',
  attributeName: 'layout'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd7ab02df-82e1-403b-b32a-414c69f1a111',
  attributeName: 'layout',
  changeType: 'update'
}
✅ Attributo modifiedAt aggiornato per entità d7ab02df-82e1-403b-b32a-414c69f1a111
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"gridSize":16,"cellHeight":80,"margin":[15,15],"modules":{"test-module-1":{"x":0,"y":0,"w":4,"h":3,"lastModified":1749949986646}}}',
  createdAt: '2025-06-15T01:13:06.618Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.611Z"}',
  modifiedAt: '2025-06-15T01:13:06.666Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'd7ab02df-82e1-403b-b32a-414c69f1a111',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: d7ab02df-82e1-403b-b32a-414c69f1a111
2025-06-15T01:13:06.714Z - GET /api/documents/d7ab02df-82e1-403b-b32a-414c69f1a111
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: d7ab02df-82e1-403b-b32a-414c69f1a111 con 0 moduli
2025-06-15T01:13:06.731Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:06.729Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:06.729Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd7ab02df-82e1-403b-b32a-414c69f1a111',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd7ab02df-82e1-403b-b32a-414c69f1a111',
  attributeName: undefined,
  changeType: 'updated'
}
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:06.731Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.729Z"}',
  modifiedAt: '2025-06-15T01:13:06.731Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '92079b85-728f-4ddb-913b-005ec2fca911',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 92079b85-728f-4ddb-913b-005ec2fca911 (tipo: CompositeDocument)
✅ CompositeDocument creato: 92079b85-728f-4ddb-913b-005ec2fca911 - Test Workspace Document
2025-06-15T01:13:06.748Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T01:13:06.748Z',
  updatedAt: '2025-06-15T01:13:06.748Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T01:13:06.748Z',
  updatedAt: '2025-06-15T01:13:06.748Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T01:13:06.748Z',
  instanceName: 'Contact Card 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T01:13:06.748Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Contact Card 1',
  id: '64be87a2-9e84-4f30-8798-922361b228d3',
  version: 1,
  updatedAt: '2025-06-15T01:13:06.748Z'
}
✅ Entità creata: 64be87a2-9e84-4f30-8798-922361b228d3 (tipo: ModuleInstance)
2025-06-15T01:13:06.765Z - PUT /api/documents/92079b85-728f-4ddb-913b-005ec2fca911/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '92079b85-728f-4ddb-913b-005ec2fca911',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '92079b85-728f-4ddb-913b-005ec2fca911',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '64be87a2-9e84-4f30-8798-922361b228d3',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '64be87a2-9e84-4f30-8798-922361b228d3',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 92079b85-728f-4ddb-913b-005ec2fca911
✅ ModuleInstance 64be87a2-9e84-4f30-8798-922361b228d3 aggiunto al documento 92079b85-728f-4ddb-913b-005ec2fca911 con ordine 1
2025-06-15T01:13:06.801Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T01:13:06.801Z',
  updatedAt: '2025-06-15T01:13:06.801Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T01:13:06.801Z',
  updatedAt: '2025-06-15T01:13:06.801Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'data-table',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T01:13:06.801Z',
  instanceName: 'Data Table 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T01:13:06.801Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Data Table 1',
  id: '67297d82-4a8e-44a9-89e4-eba5e5562002',
  version: 1,
  updatedAt: '2025-06-15T01:13:06.801Z'
}
✅ Entità creata: 67297d82-4a8e-44a9-89e4-eba5e5562002 (tipo: ModuleInstance)
2025-06-15T01:13:06.812Z - PUT /api/documents/92079b85-728f-4ddb-913b-005ec2fca911/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '92079b85-728f-4ddb-913b-005ec2fca911',
  targetEntityId: '64be87a2-9e84-4f30-8798-922361b228d3',
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '67297d82-4a8e-44a9-89e4-eba5e5562002',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '67297d82-4a8e-44a9-89e4-eba5e5562002',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 92079b85-728f-4ddb-913b-005ec2fca911
✅ ModuleInstance 67297d82-4a8e-44a9-89e4-eba5e5562002 aggiunto al documento 92079b85-728f-4ddb-913b-005ec2fca911 con ordine 2
2025-06-15T01:13:06.840Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T01:13:06.841Z',
  updatedAt: '2025-06-15T01:13:06.841Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T01:13:06.841Z',
  updatedAt: '2025-06-15T01:13:06.841Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '92079b85-728f-4ddb-913b-005ec2fca911',
  targetEntityId: '67297d82-4a8e-44a9-89e4-eba5e5562002',
  changeType: 'created'
}
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T01:13:06.841Z',
  instanceName: 'Notes Board 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T01:13:06.841Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Notes Board 1',
  id: '41b5fa4a-2ae3-4888-ab8f-9fa2b180dd8d',
  version: 1,
  updatedAt: '2025-06-15T01:13:06.841Z'
}
✅ Entità creata: 41b5fa4a-2ae3-4888-ab8f-9fa2b180dd8d (tipo: ModuleInstance)
2025-06-15T01:13:06.868Z - PUT /api/documents/92079b85-728f-4ddb-913b-005ec2fca911/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 92079b85-728f-4ddb-913b-005ec2fca911
✅ ModuleInstance 41b5fa4a-2ae3-4888-ab8f-9fa2b180dd8d aggiunto al documento 92079b85-728f-4ddb-913b-005ec2fca911 con ordine 3
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '41b5fa4a-2ae3-4888-ab8f-9fa2b180dd8d',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '41b5fa4a-2ae3-4888-ab8f-9fa2b180dd8d',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '92079b85-728f-4ddb-913b-005ec2fca911',
  targetEntityId: '41b5fa4a-2ae3-4888-ab8f-9fa2b180dd8d',
  changeType: 'created'
}
2025-06-15T01:13:06.906Z - GET /api/documents/92079b85-728f-4ddb-913b-005ec2fca911
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 92079b85-728f-4ddb-913b-005ec2fca911 con 3 moduli
2025-06-15T01:13:06.913Z - GET /api/documents/non-existent-id
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: non-existent-id
❌ Errore recupero CompositeDocument: CompositeDocument non-existent-id non trovato
❌ Errore recupero documento: Error: CompositeDocument non-existent-id non trovato
    at DocumentService.getDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:100:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1851:38
2025-06-15T01:13:06.917Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {}
❌ Errore creazione CompositeDocument: Il nome del documento è obbligatorio
❌ Errore creazione documento: Error: Il nome del documento è obbligatorio
    at DocumentService.createDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:40:23)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1820:64
    at Layer.handleRequest (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/layer.js:152:17)
    at next (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/route.js:157:13)
    at Route.dispatch (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/route.js:117:3)
    at handle (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:435:11)
    at Layer.handleRequest (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/layer.js:152:17)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:295:15
    at processParams (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:582:12)
    at next (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:291:5)
2025-06-15T01:13:06.918Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:06.918Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:06.918Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:06.918Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.918Z"}',
  modifiedAt: '2025-06-15T01:13:06.918Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '2ccd2ccb-e460-427d-bd21-54efa82ef541',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 2ccd2ccb-e460-427d-bd21-54efa82ef541 (tipo: CompositeDocument)
✅ CompositeDocument creato: 2ccd2ccb-e460-427d-bd21-54efa82ef541 - Test Workspace Document
2025-06-15T01:13:06.929Z - PUT /api/documents/2ccd2ccb-e460-427d-bd21-54efa82ef541/modules
2025-06-15T01:13:06.930Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:06.930Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:13:06.930Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:06.930Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.930Z"}',
  modifiedAt: '2025-06-15T01:13:06.930Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 44291af9-722e-46e7-83e7-0e8b31b17c8d (tipo: CompositeDocument)
✅ CompositeDocument creato: 44291af9-722e-46e7-83e7-0e8b31b17c8d - Test Workspace Document
2025-06-15T01:13:06.948Z - PUT /api/documents/44291af9-722e-46e7-83e7-0e8b31b17c8d
🔧 Aggiornamento attributo status per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '2ccd2ccb-e460-427d-bd21-54efa82ef541',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '2ccd2ccb-e460-427d-bd21-54efa82ef541',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined,
  changeType: 'created'
}
✅ Attributo status aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
✅ Attributo status aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:06.930Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.930Z"}',
  modifiedAt: '2025-06-15T01:13:06.963Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: 44291af9-722e-46e7-83e7-0e8b31b17c8d
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: 'status',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined,
  changeType: 'updated'
}
2025-06-15T01:13:06.995Z - GET /api/documents/44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 44291af9-722e-46e7-83e7-0e8b31b17c8d con 0 moduli
2025-06-15T01:13:07.000Z - PUT /api/documents/44291af9-722e-46e7-83e7-0e8b31b17c8d
🔧 Aggiornamento attributo status per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
✅ Attributo status aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:06.930Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.930Z"}',
  modifiedAt: '2025-06-15T01:13:07.009Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  ownerId: 'test-user-123',
  status: 'published'
}
✅ CompositeDocument aggiornato: 44291af9-722e-46e7-83e7-0e8b31b17c8d
2025-06-15T01:13:07.033Z - GET /api/documents/44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 44291af9-722e-46e7-83e7-0e8b31b17c8d con 0 moduli
2025-06-15T01:13:07.037Z - PUT /api/documents/44291af9-722e-46e7-83e7-0e8b31b17c8d
🔧 Aggiornamento attributo status per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: 'status',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined,
  changeType: 'updated'
}
✅ Attributo status aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
✅ Attributo status aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:06.930Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.930Z"}',
  modifiedAt: '2025-06-15T01:13:07.046Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  ownerId: 'test-user-123',
  status: 'archived'
}
✅ CompositeDocument aggiornato: 44291af9-722e-46e7-83e7-0e8b31b17c8d
2025-06-15T01:13:07.072Z - GET /api/documents/44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 44291af9-722e-46e7-83e7-0e8b31b17c8d con 0 moduli
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: 'status',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined,
  changeType: 'updated'
}
2025-06-15T01:13:07.077Z - DELETE /api/documents/44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                DELETE r
            
🗑️ Eliminazione entità: 44291af9-722e-46e7-83e7-0e8b31b17c8d
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:13:06.930Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:13:06.930Z"}',
  modifiedAt: '2025-06-15T01:13:07.046Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  ownerId: 'test-user-123',
  status: 'archived'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            DETACH DELETE e
            RETURN count(e) as deleted
        
✅ Entità 44291af9-722e-46e7-83e7-0e8b31b17c8d eliminata
✅ Entità 44291af9-722e-46e7-83e7-0e8b31b17c8d eliminata
✅ CompositeDocument 44291af9-722e-46e7-83e7-0e8b31b17c8d eliminato con tutte le relazioni
2025-06-15T01:13:07.104Z - DELETE /api/module-instances/932c3ebc-e783-4bca-b53c-93860aeb9b80
🗑️ [ModuleInstance] Eliminando istanza: 932c3ebc-e783-4bca-b53c-93860aeb9b80
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
2025-06-15T01:13:07.129Z - DELETE /api/module-instances/64be87a2-9e84-4f30-8798-922361b228d3
🗑️ [ModuleInstance] Eliminando istanza: 64be87a2-9e84-4f30-8798-922361b228d3
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '44291af9-722e-46e7-83e7-0e8b31b17c8d',
  attributeName: undefined,
  changeType: 'deleted'
}
❌ Errore durante l'esecuzione della query: Cannot delete node<911>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<911>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T01:13:07.136Z - DELETE /api/module-instances/67297d82-4a8e-44a9-89e4-eba5e5562002
🗑️ [ModuleInstance] Eliminando istanza: 67297d82-4a8e-44a9-89e4-eba5e5562002
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<912>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<912>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T01:13:07.141Z - DELETE /api/module-instances/41b5fa4a-2ae3-4888-ab8f-9fa2b180dd8d
🗑️ [ModuleInstance] Eliminando istanza: 41b5fa4a-2ae3-4888-ab8f-9fa2b180dd8d
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<913>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<913>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T01:20:48.042Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T01:20:48.059Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:48.057Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:48.057Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:48.059Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:48.057Z"}',
  modifiedAt: '2025-06-15T01:20:48.059Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '5704adab-bb50-455d-a269-48493239d390',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 5704adab-bb50-455d-a269-48493239d390 (tipo: CompositeDocument)
✅ CompositeDocument creato: 5704adab-bb50-455d-a269-48493239d390 - Test Workspace Document
2025-06-15T01:20:48.083Z - GET /api/documents/5704adab-bb50-455d-a269-48493239d390
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 5704adab-bb50-455d-a269-48493239d390 con 0 moduli
2025-06-15T01:20:48.086Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T01:20:48.086Z',
  updatedAt: '2025-06-15T01:20:48.086Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T01:20:48.086Z',
  updatedAt: '2025-06-15T01:20:48.086Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T01:20:48.086Z',
  instanceName: 'Test Contact Card',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T01:20:48.086Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test per contatti',
  id: '4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8',
  version: 1,
  updatedAt: '2025-06-15T01:20:48.086Z'
}
✅ Entità creata: 4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8 (tipo: ModuleInstance)
2025-06-15T01:20:48.095Z - PUT /api/documents/5704adab-bb50-455d-a269-48493239d390/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '5704adab-bb50-455d-a269-48493239d390',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '5704adab-bb50-455d-a269-48493239d390',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 5704adab-bb50-455d-a269-48493239d390
✅ ModuleInstance 4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8 aggiunto al documento 5704adab-bb50-455d-a269-48493239d390 con ordine 1
2025-06-15T01:20:48.146Z - GET /api/documents/5704adab-bb50-455d-a269-48493239d390
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 5704adab-bb50-455d-a269-48493239d390 con 1 moduli
2025-06-15T01:20:48.149Z - PUT /api/documents/5704adab-bb50-455d-a269-48493239d390/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '5704adab-bb50-455d-a269-48493239d390',
  targetEntityId: '4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8',
  changeType: 'updated'
}
✅ Attributo modifiedAt aggiornato per entità 5704adab-bb50-455d-a269-48493239d390
✅ ModuleInstance 4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8 aggiornato nel documento 5704adab-bb50-455d-a269-48493239d390
2025-06-15T01:20:48.164Z - GET /api/documents/5704adab-bb50-455d-a269-48493239d390
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 5704adab-bb50-455d-a269-48493239d390 con 1 moduli
2025-06-15T01:20:48.167Z - PUT /api/documents/5704adab-bb50-455d-a269-48493239d390/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                WITH r, r.id as relationId
                DELETE r
                RETURN relationId
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 5704adab-bb50-455d-a269-48493239d390
✅ ModuleInstance 4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8 rimosso dal documento 5704adab-bb50-455d-a269-48493239d390
2025-06-15T01:20:48.180Z - GET /api/documents/5704adab-bb50-455d-a269-48493239d390
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 5704adab-bb50-455d-a269-48493239d390 con 0 moduli
2025-06-15T01:20:48.182Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:48.182Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:48.182Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:48.182Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:48.182Z"}',
  modifiedAt: '2025-06-15T01:20:48.182Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'b51dc0f7-fe90-4cbc-8eb2-ba44234768f0',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: b51dc0f7-fe90-4cbc-8eb2-ba44234768f0 (tipo: CompositeDocument)
✅ CompositeDocument creato: b51dc0f7-fe90-4cbc-8eb2-ba44234768f0 - Test Workspace Document
Nuovo client WebSocket connesso
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '5704adab-bb50-455d-a269-48493239d390',
  targetEntityId: '4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8',
  changeType: 'deleted'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'b51dc0f7-fe90-4cbc-8eb2-ba44234768f0',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: 'b51dc0f7-fe90-4cbc-8eb2-ba44234768f0',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T01:20:48.694Z - PUT /api/documents/b51dc0f7-fe90-4cbc-8eb2-ba44234768f0
🔧 Aggiornamento attributo description per entità b51dc0f7-fe90-4cbc-8eb2-ba44234768f0
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`description` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo description aggiornato per entità b51dc0f7-fe90-4cbc-8eb2-ba44234768f0
✅ Attributo description aggiornato per entità b51dc0f7-fe90-4cbc-8eb2-ba44234768f0
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità b51dc0f7-fe90-4cbc-8eb2-ba44234768f0
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:48.182Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:48.182Z"}',
  modifiedAt: '2025-06-15T01:20:48.747Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Descrizione aggiornata via WebSocket test',
  id: 'b51dc0f7-fe90-4cbc-8eb2-ba44234768f0',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: b51dc0f7-fe90-4cbc-8eb2-ba44234768f0
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'b51dc0f7-fe90-4cbc-8eb2-ba44234768f0',
  attributeName: 'description'
}
🔄 Notifica entità propagata a 1 client: {
  entityId: 'b51dc0f7-fe90-4cbc-8eb2-ba44234768f0',
  attributeName: 'description',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'b51dc0f7-fe90-4cbc-8eb2-ba44234768f0',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: 'b51dc0f7-fe90-4cbc-8eb2-ba44234768f0',
  attributeName: undefined,
  changeType: 'updated'
}
Client WebSocket disconnesso
2025-06-15T01:20:53.768Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:53.764Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:53.764Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:53.768Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.764Z"}',
  modifiedAt: '2025-06-15T01:20:53.768Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '359c72fb-cdda-40fc-89f2-248eda01c0bb',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 359c72fb-cdda-40fc-89f2-248eda01c0bb (tipo: CompositeDocument)
✅ CompositeDocument creato: 359c72fb-cdda-40fc-89f2-248eda01c0bb - Test Workspace Document
2025-06-15T01:20:53.791Z - PUT /api/documents/359c72fb-cdda-40fc-89f2-248eda01c0bb
🔧 Aggiornamento attributo layout per entità 359c72fb-cdda-40fc-89f2-248eda01c0bb
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`layout` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '359c72fb-cdda-40fc-89f2-248eda01c0bb',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '359c72fb-cdda-40fc-89f2-248eda01c0bb',
  attributeName: undefined,
  changeType: 'created'
}
✅ Attributo layout aggiornato per entità 359c72fb-cdda-40fc-89f2-248eda01c0bb
✅ Attributo layout aggiornato per entità 359c72fb-cdda-40fc-89f2-248eda01c0bb
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 359c72fb-cdda-40fc-89f2-248eda01c0bb
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"gridSize":16,"cellHeight":80,"margin":[15,15],"modules":{"test-module-1":{"x":0,"y":0,"w":4,"h":3,"lastModified":1749950453790}}}',
  createdAt: '2025-06-15T01:20:53.768Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.764Z"}',
  modifiedAt: '2025-06-15T01:20:53.842Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '359c72fb-cdda-40fc-89f2-248eda01c0bb',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: 359c72fb-cdda-40fc-89f2-248eda01c0bb
2025-06-15T01:20:53.854Z - GET /api/documents/359c72fb-cdda-40fc-89f2-248eda01c0bb
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 359c72fb-cdda-40fc-89f2-248eda01c0bb con 0 moduli
2025-06-15T01:20:53.857Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:53.856Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:53.856Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '359c72fb-cdda-40fc-89f2-248eda01c0bb',
  attributeName: 'layout'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '359c72fb-cdda-40fc-89f2-248eda01c0bb',
  attributeName: 'layout',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '359c72fb-cdda-40fc-89f2-248eda01c0bb',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '359c72fb-cdda-40fc-89f2-248eda01c0bb',
  attributeName: undefined,
  changeType: 'updated'
}
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:53.857Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.856Z"}',
  modifiedAt: '2025-06-15T01:20:53.857Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '2495f8ff-bc5e-4e58-af87-7f03f9a10ea9',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9 (tipo: CompositeDocument)
✅ CompositeDocument creato: 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9 - Test Workspace Document
2025-06-15T01:20:53.877Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T01:20:53.877Z',
  updatedAt: '2025-06-15T01:20:53.877Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T01:20:53.877Z',
  updatedAt: '2025-06-15T01:20:53.877Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T01:20:53.877Z',
  instanceName: 'Contact Card 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T01:20:53.877Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Contact Card 1',
  id: '1f0d19f9-21e4-4b1a-8ae3-99973ab5a174',
  version: 1,
  updatedAt: '2025-06-15T01:20:53.877Z'
}
✅ Entità creata: 1f0d19f9-21e4-4b1a-8ae3-99973ab5a174 (tipo: ModuleInstance)
2025-06-15T01:20:53.888Z - PUT /api/documents/2495f8ff-bc5e-4e58-af87-7f03f9a10ea9/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '2495f8ff-bc5e-4e58-af87-7f03f9a10ea9',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '2495f8ff-bc5e-4e58-af87-7f03f9a10ea9',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '1f0d19f9-21e4-4b1a-8ae3-99973ab5a174',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '1f0d19f9-21e4-4b1a-8ae3-99973ab5a174',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9
✅ ModuleInstance 1f0d19f9-21e4-4b1a-8ae3-99973ab5a174 aggiunto al documento 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9 con ordine 1
2025-06-15T01:20:53.918Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T01:20:53.918Z',
  updatedAt: '2025-06-15T01:20:53.918Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T01:20:53.918Z',
  updatedAt: '2025-06-15T01:20:53.918Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'data-table',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T01:20:53.918Z',
  instanceName: 'Data Table 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T01:20:53.918Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Data Table 1',
  id: '0bf439b6-1c6c-48df-8515-53af65617715',
  version: 1,
  updatedAt: '2025-06-15T01:20:53.918Z'
}
✅ Entità creata: 0bf439b6-1c6c-48df-8515-53af65617715 (tipo: ModuleInstance)
2025-06-15T01:20:53.927Z - PUT /api/documents/2495f8ff-bc5e-4e58-af87-7f03f9a10ea9/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '2495f8ff-bc5e-4e58-af87-7f03f9a10ea9',
  targetEntityId: '0bf439b6-1c6c-48df-8515-53af65617715',
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '0bf439b6-1c6c-48df-8515-53af65617715',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '0bf439b6-1c6c-48df-8515-53af65617715',
  attributeName: undefined,
  changeType: 'create'
}
✅ Attributo modifiedAt aggiornato per entità 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9
✅ ModuleInstance 0bf439b6-1c6c-48df-8515-53af65617715 aggiunto al documento 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9 con ordine 2
2025-06-15T01:20:53.942Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T01:20:53.942Z',
  updatedAt: '2025-06-15T01:20:53.942Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T01:20:53.942Z',
  updatedAt: '2025-06-15T01:20:53.942Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T01:20:53.942Z',
  instanceName: 'Notes Board 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T01:20:53.942Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Notes Board 1',
  id: '65848e0c-986e-4648-a034-fc4f88c1241e',
  version: 1,
  updatedAt: '2025-06-15T01:20:53.942Z'
}
✅ Entità creata: 65848e0c-986e-4648-a034-fc4f88c1241e (tipo: ModuleInstance)
2025-06-15T01:20:53.949Z - PUT /api/documents/2495f8ff-bc5e-4e58-af87-7f03f9a10ea9/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9
✅ ModuleInstance 65848e0c-986e-4648-a034-fc4f88c1241e aggiunto al documento 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9 con ordine 3
2025-06-15T01:20:53.966Z - GET /api/documents/2495f8ff-bc5e-4e58-af87-7f03f9a10ea9
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 2495f8ff-bc5e-4e58-af87-7f03f9a10ea9 con 3 moduli
2025-06-15T01:20:53.970Z - GET /api/documents/non-existent-id
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: non-existent-id
❌ Errore recupero CompositeDocument: CompositeDocument non-existent-id non trovato
❌ Errore recupero documento: Error: CompositeDocument non-existent-id non trovato
    at DocumentService.getDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:100:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1851:38
2025-06-15T01:20:53.972Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {}
❌ Errore creazione CompositeDocument: Il nome del documento è obbligatorio
❌ Errore creazione documento: Error: Il nome del documento è obbligatorio
    at DocumentService.createDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:40:23)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1820:64
    at Layer.handleRequest (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/layer.js:152:17)
    at next (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/route.js:157:13)
    at Route.dispatch (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/route.js:117:3)
    at handle (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:435:11)
    at Layer.handleRequest (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/layer.js:152:17)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:295:15
    at processParams (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:582:12)
    at next (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:291:5)
2025-06-15T01:20:53.972Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:53.972Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:53.972Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:53.972Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.972Z"}',
  modifiedAt: '2025-06-15T01:20:53.972Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '38076d95-71eb-4117-8eaf-66301ffc6ee2',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 38076d95-71eb-4117-8eaf-66301ffc6ee2 (tipo: CompositeDocument)
✅ CompositeDocument creato: 38076d95-71eb-4117-8eaf-66301ffc6ee2 - Test Workspace Document
[AttributeSpace] Processando batch di 3 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '65848e0c-986e-4648-a034-fc4f88c1241e',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '65848e0c-986e-4648-a034-fc4f88c1241e',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '2495f8ff-bc5e-4e58-af87-7f03f9a10ea9',
  targetEntityId: '65848e0c-986e-4648-a034-fc4f88c1241e',
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '38076d95-71eb-4117-8eaf-66301ffc6ee2',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '38076d95-71eb-4117-8eaf-66301ffc6ee2',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T01:20:53.978Z - PUT /api/documents/38076d95-71eb-4117-8eaf-66301ffc6ee2/modules
2025-06-15T01:20:53.979Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:53.979Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T01:20:53.979Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:53.979Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.979Z"}',
  modifiedAt: '2025-06-15T01:20:53.979Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 19b0cdda-988a-4648-ac0c-a9f63962d0df (tipo: CompositeDocument)
✅ CompositeDocument creato: 19b0cdda-988a-4648-ac0c-a9f63962d0df - Test Workspace Document
2025-06-15T01:20:53.992Z - PUT /api/documents/19b0cdda-988a-4648-ac0c-a9f63962d0df
🔧 Aggiornamento attributo status per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
✅ Attributo status aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:53.979Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.979Z"}',
  modifiedAt: '2025-06-15T01:20:54.006Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: 19b0cdda-988a-4648-ac0c-a9f63962d0df
2025-06-15T01:20:54.017Z - GET /api/documents/19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 19b0cdda-988a-4648-ac0c-a9f63962d0df con 0 moduli
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: undefined,
  changeType: 'updated'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: 'status',
  changeType: 'update'
}
2025-06-15T01:20:54.019Z - PUT /api/documents/19b0cdda-988a-4648-ac0c-a9f63962d0df
🔧 Aggiornamento attributo status per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
✅ Attributo status aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:53.979Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.979Z"}',
  modifiedAt: '2025-06-15T01:20:54.025Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  ownerId: 'test-user-123',
  status: 'published'
}
✅ CompositeDocument aggiornato: 19b0cdda-988a-4648-ac0c-a9f63962d0df
2025-06-15T01:20:54.035Z - GET /api/documents/19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 19b0cdda-988a-4648-ac0c-a9f63962d0df con 0 moduli
2025-06-15T01:20:54.038Z - PUT /api/documents/19b0cdda-988a-4648-ac0c-a9f63962d0df
🔧 Aggiornamento attributo status per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
✅ Attributo status aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:53.979Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.979Z"}',
  modifiedAt: '2025-06-15T01:20:54.045Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  ownerId: 'test-user-123',
  status: 'archived'
}
✅ CompositeDocument aggiornato: 19b0cdda-988a-4648-ac0c-a9f63962d0df
2025-06-15T01:20:54.054Z - GET /api/documents/19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: 'status',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: undefined,
  changeType: 'updated'
}
✅ CompositeDocument recuperato: 19b0cdda-988a-4648-ac0c-a9f63962d0df con 0 moduli
2025-06-15T01:20:54.058Z - DELETE /api/documents/19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                DELETE r
            
🗑️ Eliminazione entità: 19b0cdda-988a-4648-ac0c-a9f63962d0df
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:20:53.979Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:20:53.979Z"}',
  modifiedAt: '2025-06-15T01:20:54.045Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  ownerId: 'test-user-123',
  status: 'archived'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            DETACH DELETE e
            RETURN count(e) as deleted
        
✅ Entità 19b0cdda-988a-4648-ac0c-a9f63962d0df eliminata
✅ Entità 19b0cdda-988a-4648-ac0c-a9f63962d0df eliminata
✅ CompositeDocument 19b0cdda-988a-4648-ac0c-a9f63962d0df eliminato con tutte le relazioni
2025-06-15T01:20:54.070Z - DELETE /api/module-instances/4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8
🗑️ [ModuleInstance] Eliminando istanza: 4fa903a4-c588-43ad-a04a-8e9f7cf3d6d8
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
2025-06-15T01:20:54.078Z - DELETE /api/module-instances/1f0d19f9-21e4-4b1a-8ae3-99973ab5a174
🗑️ [ModuleInstance] Eliminando istanza: 1f0d19f9-21e4-4b1a-8ae3-99973ab5a174
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<919>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<919>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T01:20:54.085Z - DELETE /api/module-instances/0bf439b6-1c6c-48df-8515-53af65617715
🗑️ [ModuleInstance] Eliminando istanza: 0bf439b6-1c6c-48df-8515-53af65617715
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<920>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<920>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T01:20:54.087Z - DELETE /api/module-instances/65848e0c-986e-4648-a034-fc4f88c1241e
🗑️ [ModuleInstance] Eliminando istanza: 65848e0c-986e-4648-a034-fc4f88c1241e
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<921>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<921>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '19b0cdda-988a-4648-ac0c-a9f63962d0df',
  attributeName: undefined,
  changeType: 'deleted'
}
2025-06-15T07:05:27.628Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:05:27.733Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:27.732Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:27.732Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:27.734Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:27.732Z"}',
  modifiedAt: '2025-06-15T07:05:27.734Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '421d93d5-f1b4-4326-9a81-b0a50dfe6f5a',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a (tipo: CompositeDocument)
✅ CompositeDocument creato: 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a - Test Workspace Document
2025-06-15T07:05:27.748Z - GET /api/documents/421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '421d93d5-f1b4-4326-9a81-b0a50dfe6f5a',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '421d93d5-f1b4-4326-9a81-b0a50dfe6f5a',
  attributeName: undefined,
  changeType: 'created'
}
✅ CompositeDocument recuperato: 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a con 0 moduli
2025-06-15T07:05:27.779Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T07:05:27.779Z',
  updatedAt: '2025-06-15T07:05:27.779Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T07:05:27.779Z',
  updatedAt: '2025-06-15T07:05:27.779Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:05:27.779Z',
  instanceName: 'Test Contact Card',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:05:27.779Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test per contatti',
  id: '7f7dcd29-2025-4060-b522-81c223d549d5',
  version: 1,
  updatedAt: '2025-06-15T07:05:27.779Z'
}
✅ Entità creata: 7f7dcd29-2025-4060-b522-81c223d549d5 (tipo: ModuleInstance)
2025-06-15T07:05:27.790Z - PUT /api/documents/421d93d5-f1b4-4326-9a81-b0a50dfe6f5a/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '7f7dcd29-2025-4060-b522-81c223d549d5',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '7f7dcd29-2025-4060-b522-81c223d549d5',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
✅ ModuleInstance 7f7dcd29-2025-4060-b522-81c223d549d5 aggiunto al documento 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a con ordine 1
2025-06-15T07:05:27.839Z - GET /api/documents/421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a con 1 moduli
2025-06-15T07:05:27.841Z - PUT /api/documents/421d93d5-f1b4-4326-9a81-b0a50dfe6f5a/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '421d93d5-f1b4-4326-9a81-b0a50dfe6f5a',
  targetEntityId: '7f7dcd29-2025-4060-b522-81c223d549d5',
  changeType: 'created'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
✅ ModuleInstance 7f7dcd29-2025-4060-b522-81c223d549d5 aggiornato nel documento 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
2025-06-15T07:05:27.877Z - GET /api/documents/421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a con 1 moduli
2025-06-15T07:05:27.880Z - PUT /api/documents/421d93d5-f1b4-4326-9a81-b0a50dfe6f5a/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                WITH r, r.id as relationId
                DELETE r
                RETURN relationId
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '421d93d5-f1b4-4326-9a81-b0a50dfe6f5a',
  targetEntityId: '7f7dcd29-2025-4060-b522-81c223d549d5',
  changeType: 'deleted'
}
✅ Attributo modifiedAt aggiornato per entità 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
✅ ModuleInstance 7f7dcd29-2025-4060-b522-81c223d549d5 rimosso dal documento 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
2025-06-15T07:05:27.910Z - GET /api/documents/421d93d5-f1b4-4326-9a81-b0a50dfe6f5a
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 421d93d5-f1b4-4326-9a81-b0a50dfe6f5a con 0 moduli
2025-06-15T07:05:27.914Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:27.913Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:27.913Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:27.914Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:27.913Z"}',
  modifiedAt: '2025-06-15T07:05:27.914Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '0add5807-c056-4b2f-adf7-11770a93ca35',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 0add5807-c056-4b2f-adf7-11770a93ca35 (tipo: CompositeDocument)
✅ CompositeDocument creato: 0add5807-c056-4b2f-adf7-11770a93ca35 - Test Workspace Document
Nuovo client WebSocket connesso
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '0add5807-c056-4b2f-adf7-11770a93ca35',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '0add5807-c056-4b2f-adf7-11770a93ca35',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T07:05:28.425Z - PUT /api/documents/0add5807-c056-4b2f-adf7-11770a93ca35
🔧 Aggiornamento attributo description per entità 0add5807-c056-4b2f-adf7-11770a93ca35
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`description` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo description aggiornato per entità 0add5807-c056-4b2f-adf7-11770a93ca35
✅ Attributo description aggiornato per entità 0add5807-c056-4b2f-adf7-11770a93ca35
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 0add5807-c056-4b2f-adf7-11770a93ca35
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '0add5807-c056-4b2f-adf7-11770a93ca35',
  attributeName: 'description'
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '0add5807-c056-4b2f-adf7-11770a93ca35',
  attributeName: 'description',
  changeType: 'update'
}
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:27.914Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:27.913Z"}',
  modifiedAt: '2025-06-15T07:05:28.447Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Descrizione aggiornata via WebSocket test',
  id: '0add5807-c056-4b2f-adf7-11770a93ca35',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: 0add5807-c056-4b2f-adf7-11770a93ca35
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '0add5807-c056-4b2f-adf7-11770a93ca35',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '0add5807-c056-4b2f-adf7-11770a93ca35',
  attributeName: undefined,
  changeType: 'updated'
}
Client WebSocket disconnesso
2025-06-15T07:05:33.494Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:33.491Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:33.491Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:33.495Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:33.491Z"}',
  modifiedAt: '2025-06-15T07:05:33.495Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '1a1f10c1-f0e9-420c-a09b-b686531d7422',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 1a1f10c1-f0e9-420c-a09b-b686531d7422 (tipo: CompositeDocument)
✅ CompositeDocument creato: 1a1f10c1-f0e9-420c-a09b-b686531d7422 - Test Workspace Document
2025-06-15T07:05:33.516Z - PUT /api/documents/1a1f10c1-f0e9-420c-a09b-b686531d7422
🔧 Aggiornamento attributo layout per entità 1a1f10c1-f0e9-420c-a09b-b686531d7422
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`layout` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo layout aggiornato per entità 1a1f10c1-f0e9-420c-a09b-b686531d7422
✅ Attributo layout aggiornato per entità 1a1f10c1-f0e9-420c-a09b-b686531d7422
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 1a1f10c1-f0e9-420c-a09b-b686531d7422
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '1a1f10c1-f0e9-420c-a09b-b686531d7422',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '1a1f10c1-f0e9-420c-a09b-b686531d7422',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '1a1f10c1-f0e9-420c-a09b-b686531d7422',
  attributeName: 'layout'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '1a1f10c1-f0e9-420c-a09b-b686531d7422',
  attributeName: 'layout',
  changeType: 'update'
}
✅ Entità trovata: {
  layout: '{"gridSize":16,"cellHeight":80,"margin":[15,15],"modules":{"test-module-1":{"x":0,"y":0,"w":4,"h":3,"lastModified":1749971133515}}}',
  createdAt: '2025-06-15T07:05:33.495Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:33.491Z"}',
  modifiedAt: '2025-06-15T07:05:33.530Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '1a1f10c1-f0e9-420c-a09b-b686531d7422',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: 1a1f10c1-f0e9-420c-a09b-b686531d7422
2025-06-15T07:05:33.548Z - GET /api/documents/1a1f10c1-f0e9-420c-a09b-b686531d7422
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 1a1f10c1-f0e9-420c-a09b-b686531d7422 con 0 moduli
2025-06-15T07:05:33.554Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:33.553Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:33.553Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:33.554Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:33.553Z"}',
  modifiedAt: '2025-06-15T07:05:33.554Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '728270a2-58c2-48d2-b65c-d2ea866422e6',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 728270a2-58c2-48d2-b65c-d2ea866422e6 (tipo: CompositeDocument)
✅ CompositeDocument creato: 728270a2-58c2-48d2-b65c-d2ea866422e6 - Test Workspace Document
2025-06-15T07:05:33.563Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T07:05:33.563Z',
  updatedAt: '2025-06-15T07:05:33.563Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T07:05:33.563Z',
  updatedAt: '2025-06-15T07:05:33.563Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:05:33.563Z',
  instanceName: 'Contact Card 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:05:33.563Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Contact Card 1',
  id: '0e3ec5f6-8d52-4894-8a37-2910e0081c2f',
  version: 1,
  updatedAt: '2025-06-15T07:05:33.563Z'
}
✅ Entità creata: 0e3ec5f6-8d52-4894-8a37-2910e0081c2f (tipo: ModuleInstance)
2025-06-15T07:05:33.575Z - PUT /api/documents/728270a2-58c2-48d2-b65c-d2ea866422e6/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
[AttributeSpace] Processando batch di 3 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '1a1f10c1-f0e9-420c-a09b-b686531d7422',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '1a1f10c1-f0e9-420c-a09b-b686531d7422',
  attributeName: undefined,
  changeType: 'updated'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '728270a2-58c2-48d2-b65c-d2ea866422e6',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '728270a2-58c2-48d2-b65c-d2ea866422e6',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '0e3ec5f6-8d52-4894-8a37-2910e0081c2f',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '0e3ec5f6-8d52-4894-8a37-2910e0081c2f',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 728270a2-58c2-48d2-b65c-d2ea866422e6
✅ ModuleInstance 0e3ec5f6-8d52-4894-8a37-2910e0081c2f aggiunto al documento 728270a2-58c2-48d2-b65c-d2ea866422e6 con ordine 1
2025-06-15T07:05:33.601Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T07:05:33.601Z',
  updatedAt: '2025-06-15T07:05:33.601Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T07:05:33.601Z',
  updatedAt: '2025-06-15T07:05:33.601Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'data-table',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:05:33.601Z',
  instanceName: 'Data Table 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:05:33.601Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Data Table 1',
  id: 'e8bf061d-418d-4a60-bd53-220e323f9f40',
  version: 1,
  updatedAt: '2025-06-15T07:05:33.601Z'
}
✅ Entità creata: e8bf061d-418d-4a60-bd53-220e323f9f40 (tipo: ModuleInstance)
2025-06-15T07:05:33.611Z - PUT /api/documents/728270a2-58c2-48d2-b65c-d2ea866422e6/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '728270a2-58c2-48d2-b65c-d2ea866422e6',
  targetEntityId: '0e3ec5f6-8d52-4894-8a37-2910e0081c2f',
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'e8bf061d-418d-4a60-bd53-220e323f9f40',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'e8bf061d-418d-4a60-bd53-220e323f9f40',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 728270a2-58c2-48d2-b65c-d2ea866422e6
✅ ModuleInstance e8bf061d-418d-4a60-bd53-220e323f9f40 aggiunto al documento 728270a2-58c2-48d2-b65c-d2ea866422e6 con ordine 2
2025-06-15T07:05:33.635Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T07:05:33.635Z',
  updatedAt: '2025-06-15T07:05:33.635Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T07:05:33.635Z',
  updatedAt: '2025-06-15T07:05:33.635Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:05:33.635Z',
  instanceName: 'Notes Board 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:05:33.635Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Notes Board 1',
  id: '59af52b3-920a-43d3-9c50-6610f3fa3ef9',
  version: 1,
  updatedAt: '2025-06-15T07:05:33.635Z'
}
✅ Entità creata: 59af52b3-920a-43d3-9c50-6610f3fa3ef9 (tipo: ModuleInstance)
2025-06-15T07:05:33.647Z - PUT /api/documents/728270a2-58c2-48d2-b65c-d2ea866422e6/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '728270a2-58c2-48d2-b65c-d2ea866422e6',
  targetEntityId: 'e8bf061d-418d-4a60-bd53-220e323f9f40',
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '59af52b3-920a-43d3-9c50-6610f3fa3ef9',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '59af52b3-920a-43d3-9c50-6610f3fa3ef9',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 728270a2-58c2-48d2-b65c-d2ea866422e6
✅ ModuleInstance 59af52b3-920a-43d3-9c50-6610f3fa3ef9 aggiunto al documento 728270a2-58c2-48d2-b65c-d2ea866422e6 con ordine 3
2025-06-15T07:05:33.671Z - GET /api/documents/728270a2-58c2-48d2-b65c-d2ea866422e6
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 728270a2-58c2-48d2-b65c-d2ea866422e6 con 3 moduli
2025-06-15T07:05:33.676Z - GET /api/documents/non-existent-id
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: non-existent-id
❌ Errore recupero CompositeDocument: CompositeDocument non-existent-id non trovato
❌ Errore recupero documento: Error: CompositeDocument non-existent-id non trovato
    at DocumentService.getDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:100:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1851:38
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '728270a2-58c2-48d2-b65c-d2ea866422e6',
  targetEntityId: '59af52b3-920a-43d3-9c50-6610f3fa3ef9',
  changeType: 'created'
}
2025-06-15T07:05:56.726Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:05:56.739Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.737Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.737Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:56.739Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:56.737Z"}',
  modifiedAt: '2025-06-15T07:05:56.739Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '8bb1730d-94cc-417b-b6bd-646251b90450',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 8bb1730d-94cc-417b-b6bd-646251b90450 (tipo: CompositeDocument)
✅ CompositeDocument creato: 8bb1730d-94cc-417b-b6bd-646251b90450 - Test Workspace Document
2025-06-15T07:05:56.768Z - GET /api/documents/8bb1730d-94cc-417b-b6bd-646251b90450
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8bb1730d-94cc-417b-b6bd-646251b90450 con 0 moduli
2025-06-15T07:05:56.771Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T07:05:56.771Z',
  updatedAt: '2025-06-15T07:05:56.771Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T07:05:56.771Z',
  updatedAt: '2025-06-15T07:05:56.771Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:05:56.771Z',
  instanceName: 'Test Contact Card',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:05:56.771Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test per contatti',
  id: '95b4d2b3-d2f3-4e9f-9f67-21204ad553c4',
  version: 1,
  updatedAt: '2025-06-15T07:05:56.771Z'
}
✅ Entità creata: 95b4d2b3-d2f3-4e9f-9f67-21204ad553c4 (tipo: ModuleInstance)
2025-06-15T07:05:56.779Z - PUT /api/documents/8bb1730d-94cc-417b-b6bd-646251b90450/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '8bb1730d-94cc-417b-b6bd-646251b90450',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '8bb1730d-94cc-417b-b6bd-646251b90450',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '95b4d2b3-d2f3-4e9f-9f67-21204ad553c4',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '95b4d2b3-d2f3-4e9f-9f67-21204ad553c4',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8bb1730d-94cc-417b-b6bd-646251b90450
✅ ModuleInstance 95b4d2b3-d2f3-4e9f-9f67-21204ad553c4 aggiunto al documento 8bb1730d-94cc-417b-b6bd-646251b90450 con ordine 1
2025-06-15T07:05:56.809Z - GET /api/documents/8bb1730d-94cc-417b-b6bd-646251b90450
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8bb1730d-94cc-417b-b6bd-646251b90450 con 1 moduli
2025-06-15T07:05:56.811Z - PUT /api/documents/8bb1730d-94cc-417b-b6bd-646251b90450/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8bb1730d-94cc-417b-b6bd-646251b90450
✅ ModuleInstance 95b4d2b3-d2f3-4e9f-9f67-21204ad553c4 aggiornato nel documento 8bb1730d-94cc-417b-b6bd-646251b90450
2025-06-15T07:05:56.824Z - GET /api/documents/8bb1730d-94cc-417b-b6bd-646251b90450
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8bb1730d-94cc-417b-b6bd-646251b90450 con 1 moduli
2025-06-15T07:05:56.827Z - PUT /api/documents/8bb1730d-94cc-417b-b6bd-646251b90450/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                WITH r, r.id as relationId
                DELETE r
                RETURN relationId
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8bb1730d-94cc-417b-b6bd-646251b90450',
  targetEntityId: '95b4d2b3-d2f3-4e9f-9f67-21204ad553c4',
  changeType: 'updated'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8bb1730d-94cc-417b-b6bd-646251b90450
✅ ModuleInstance 95b4d2b3-d2f3-4e9f-9f67-21204ad553c4 rimosso dal documento 8bb1730d-94cc-417b-b6bd-646251b90450
2025-06-15T07:05:56.840Z - GET /api/documents/8bb1730d-94cc-417b-b6bd-646251b90450
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8bb1730d-94cc-417b-b6bd-646251b90450 con 0 moduli
2025-06-15T07:05:56.842Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.842Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.842Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:56.842Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:56.842Z"}',
  modifiedAt: '2025-06-15T07:05:56.842Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'a0a66b4c-ac07-45b8-b58b-17de69a7e751',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: a0a66b4c-ac07-45b8-b58b-17de69a7e751 (tipo: CompositeDocument)
✅ CompositeDocument creato: a0a66b4c-ac07-45b8-b58b-17de69a7e751 - Test Workspace Document
Nuovo client WebSocket connesso
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8bb1730d-94cc-417b-b6bd-646251b90450',
  targetEntityId: '95b4d2b3-d2f3-4e9f-9f67-21204ad553c4',
  changeType: 'deleted'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'a0a66b4c-ac07-45b8-b58b-17de69a7e751',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: 'a0a66b4c-ac07-45b8-b58b-17de69a7e751',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T07:05:56.865Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.864Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.864Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
Client WebSocket disconnesso
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:56.865Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:56.864Z"}',
  modifiedAt: '2025-06-15T07:05:56.865Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '5af642f2-bafc-4f59-9551-9504a3d3a22e',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 5af642f2-bafc-4f59-9551-9504a3d3a22e (tipo: CompositeDocument)
✅ CompositeDocument creato: 5af642f2-bafc-4f59-9551-9504a3d3a22e - Test Workspace Document
2025-06-15T07:05:56.873Z - PUT /api/documents/5af642f2-bafc-4f59-9551-9504a3d3a22e
🔧 Aggiornamento attributo layout per entità 5af642f2-bafc-4f59-9551-9504a3d3a22e
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`layout` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo layout aggiornato per entità 5af642f2-bafc-4f59-9551-9504a3d3a22e
✅ Attributo layout aggiornato per entità 5af642f2-bafc-4f59-9551-9504a3d3a22e
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 5af642f2-bafc-4f59-9551-9504a3d3a22e
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"gridSize":16,"cellHeight":80,"margin":[15,15],"modules":{"test-module-1":{"x":0,"y":0,"w":4,"h":3,"lastModified":1749971156872}}}',
  createdAt: '2025-06-15T07:05:56.865Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:56.864Z"}',
  modifiedAt: '2025-06-15T07:05:56.880Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '5af642f2-bafc-4f59-9551-9504a3d3a22e',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: 5af642f2-bafc-4f59-9551-9504a3d3a22e
2025-06-15T07:05:56.889Z - GET /api/documents/5af642f2-bafc-4f59-9551-9504a3d3a22e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 5af642f2-bafc-4f59-9551-9504a3d3a22e con 0 moduli
2025-06-15T07:05:56.891Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.891Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.891Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:56.891Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:56.891Z"}',
  modifiedAt: '2025-06-15T07:05:56.891Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '971ce7ba-d558-4ab2-8685-d78fd15bae72',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 971ce7ba-d558-4ab2-8685-d78fd15bae72 (tipo: CompositeDocument)
✅ CompositeDocument creato: 971ce7ba-d558-4ab2-8685-d78fd15bae72 - Test Workspace Document
2025-06-15T07:05:56.898Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T07:05:56.898Z',
  updatedAt: '2025-06-15T07:05:56.898Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T07:05:56.898Z',
  updatedAt: '2025-06-15T07:05:56.898Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
[AttributeSpace] Processando batch di 3 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '5af642f2-bafc-4f59-9551-9504a3d3a22e',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '5af642f2-bafc-4f59-9551-9504a3d3a22e',
  attributeName: undefined,
  changeType: 'updated'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '5af642f2-bafc-4f59-9551-9504a3d3a22e',
  attributeName: 'layout'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '5af642f2-bafc-4f59-9551-9504a3d3a22e',
  attributeName: 'layout',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '971ce7ba-d558-4ab2-8685-d78fd15bae72',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '971ce7ba-d558-4ab2-8685-d78fd15bae72',
  attributeName: undefined,
  changeType: 'created'
}
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:05:56.898Z',
  instanceName: 'Contact Card 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:05:56.898Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Contact Card 1',
  id: '0906dec2-30ae-48e5-ad93-d8254226b833',
  version: 1,
  updatedAt: '2025-06-15T07:05:56.898Z'
}
✅ Entità creata: 0906dec2-30ae-48e5-ad93-d8254226b833 (tipo: ModuleInstance)
2025-06-15T07:05:56.906Z - PUT /api/documents/971ce7ba-d558-4ab2-8685-d78fd15bae72/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 971ce7ba-d558-4ab2-8685-d78fd15bae72
✅ ModuleInstance 0906dec2-30ae-48e5-ad93-d8254226b833 aggiunto al documento 971ce7ba-d558-4ab2-8685-d78fd15bae72 con ordine 1
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '0906dec2-30ae-48e5-ad93-d8254226b833',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '0906dec2-30ae-48e5-ad93-d8254226b833',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '971ce7ba-d558-4ab2-8685-d78fd15bae72',
  targetEntityId: '0906dec2-30ae-48e5-ad93-d8254226b833',
  changeType: 'created'
}
2025-06-15T07:05:56.937Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T07:05:56.937Z',
  updatedAt: '2025-06-15T07:05:56.937Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T07:05:56.937Z',
  updatedAt: '2025-06-15T07:05:56.937Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'data-table',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:05:56.937Z',
  instanceName: 'Data Table 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:05:56.937Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Data Table 1',
  id: '4e1b8824-2dcd-41df-848b-47377f393631',
  version: 1,
  updatedAt: '2025-06-15T07:05:56.937Z'
}
✅ Entità creata: 4e1b8824-2dcd-41df-848b-47377f393631 (tipo: ModuleInstance)
2025-06-15T07:05:56.943Z - PUT /api/documents/971ce7ba-d558-4ab2-8685-d78fd15bae72/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 971ce7ba-d558-4ab2-8685-d78fd15bae72
✅ ModuleInstance 4e1b8824-2dcd-41df-848b-47377f393631 aggiunto al documento 971ce7ba-d558-4ab2-8685-d78fd15bae72 con ordine 2
2025-06-15T07:05:56.961Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T07:05:56.961Z',
  updatedAt: '2025-06-15T07:05:56.961Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T07:05:56.961Z',
  updatedAt: '2025-06-15T07:05:56.961Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:05:56.961Z',
  instanceName: 'Notes Board 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:05:56.961Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Notes Board 1',
  id: '530eaaa0-ad77-42ae-b165-6c17c88d8dfa',
  version: 1,
  updatedAt: '2025-06-15T07:05:56.961Z'
}
✅ Entità creata: 530eaaa0-ad77-42ae-b165-6c17c88d8dfa (tipo: ModuleInstance)
2025-06-15T07:05:56.969Z - PUT /api/documents/971ce7ba-d558-4ab2-8685-d78fd15bae72/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 3 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '4e1b8824-2dcd-41df-848b-47377f393631',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '4e1b8824-2dcd-41df-848b-47377f393631',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '971ce7ba-d558-4ab2-8685-d78fd15bae72',
  targetEntityId: '4e1b8824-2dcd-41df-848b-47377f393631',
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '530eaaa0-ad77-42ae-b165-6c17c88d8dfa',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '530eaaa0-ad77-42ae-b165-6c17c88d8dfa',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 971ce7ba-d558-4ab2-8685-d78fd15bae72
✅ ModuleInstance 530eaaa0-ad77-42ae-b165-6c17c88d8dfa aggiunto al documento 971ce7ba-d558-4ab2-8685-d78fd15bae72 con ordine 3
2025-06-15T07:05:56.985Z - GET /api/documents/971ce7ba-d558-4ab2-8685-d78fd15bae72
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 971ce7ba-d558-4ab2-8685-d78fd15bae72 con 3 moduli
2025-06-15T07:05:56.988Z - GET /api/documents/non-existent-id
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: non-existent-id
❌ Errore recupero CompositeDocument: CompositeDocument non-existent-id non trovato
❌ Errore recupero documento: Error: CompositeDocument non-existent-id non trovato
    at DocumentService.getDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:100:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1851:38
2025-06-15T07:05:56.990Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {}
❌ Errore creazione CompositeDocument: Il nome del documento è obbligatorio
❌ Errore creazione documento: Error: Il nome del documento è obbligatorio
    at DocumentService.createDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:40:23)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1820:64
    at Layer.handleRequest (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/layer.js:152:17)
    at next (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/route.js:157:13)
    at Route.dispatch (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/route.js:117:3)
    at handle (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:435:11)
    at Layer.handleRequest (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/layer.js:152:17)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:295:15
    at processParams (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:582:12)
    at next (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:291:5)
2025-06-15T07:05:56.991Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.991Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:56.991Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:56.991Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:56.991Z"}',
  modifiedAt: '2025-06-15T07:05:56.991Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '1c7c61ab-8247-4031-ae32-35b9f3245bc1',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 1c7c61ab-8247-4031-ae32-35b9f3245bc1 (tipo: CompositeDocument)
✅ CompositeDocument creato: 1c7c61ab-8247-4031-ae32-35b9f3245bc1 - Test Workspace Document
2025-06-15T07:05:56.999Z - PUT /api/documents/1c7c61ab-8247-4031-ae32-35b9f3245bc1/modules
2025-06-15T07:05:57.000Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:57.000Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:05:57.000Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:57.001Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:57.000Z"}',
  modifiedAt: '2025-06-15T07:05:57.001Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: ae511732-0683-4df0-9ff9-6d90cc739bb8 (tipo: CompositeDocument)
✅ CompositeDocument creato: ae511732-0683-4df0-9ff9-6d90cc739bb8 - Test Workspace Document
[AttributeSpace] Processando batch di 3 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '971ce7ba-d558-4ab2-8685-d78fd15bae72',
  targetEntityId: '530eaaa0-ad77-42ae-b165-6c17c88d8dfa',
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '1c7c61ab-8247-4031-ae32-35b9f3245bc1',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '1c7c61ab-8247-4031-ae32-35b9f3245bc1',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T07:05:57.008Z - PUT /api/documents/ae511732-0683-4df0-9ff9-6d90cc739bb8
🔧 Aggiornamento attributo status per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
✅ Attributo status aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:57.001Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:57.000Z"}',
  modifiedAt: '2025-06-15T07:05:57.014Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: ae511732-0683-4df0-9ff9-6d90cc739bb8
2025-06-15T07:05:57.023Z - GET /api/documents/ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: ae511732-0683-4df0-9ff9-6d90cc739bb8 con 0 moduli
2025-06-15T07:05:57.025Z - PUT /api/documents/ae511732-0683-4df0-9ff9-6d90cc739bb8
🔧 Aggiornamento attributo status per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
✅ Attributo status aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:57.001Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:57.000Z"}',
  modifiedAt: '2025-06-15T07:05:57.032Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  ownerId: 'test-user-123',
  status: 'published'
}
✅ CompositeDocument aggiornato: ae511732-0683-4df0-9ff9-6d90cc739bb8
2025-06-15T07:05:57.043Z - GET /api/documents/ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: 'status',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: undefined,
  changeType: 'updated'
}
✅ CompositeDocument recuperato: ae511732-0683-4df0-9ff9-6d90cc739bb8 con 0 moduli
2025-06-15T07:05:57.046Z - PUT /api/documents/ae511732-0683-4df0-9ff9-6d90cc739bb8
🔧 Aggiornamento attributo status per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
✅ Attributo status aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:57.001Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:57.000Z"}',
  modifiedAt: '2025-06-15T07:05:57.052Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  ownerId: 'test-user-123',
  status: 'archived'
}
✅ CompositeDocument aggiornato: ae511732-0683-4df0-9ff9-6d90cc739bb8
2025-06-15T07:05:57.062Z - GET /api/documents/ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: ae511732-0683-4df0-9ff9-6d90cc739bb8 con 0 moduli
2025-06-15T07:05:57.065Z - DELETE /api/documents/ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                DELETE r
            
🗑️ Eliminazione entità: ae511732-0683-4df0-9ff9-6d90cc739bb8
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:57.001Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:57.000Z"}',
  modifiedAt: '2025-06-15T07:05:57.052Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  ownerId: 'test-user-123',
  status: 'archived'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            DETACH DELETE e
            RETURN count(e) as deleted
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: 'status',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: undefined,
  changeType: 'updated'
}
✅ Entità ae511732-0683-4df0-9ff9-6d90cc739bb8 eliminata
✅ Entità ae511732-0683-4df0-9ff9-6d90cc739bb8 eliminata
✅ CompositeDocument ae511732-0683-4df0-9ff9-6d90cc739bb8 eliminato con tutte le relazioni
2025-06-15T07:05:57.100Z - DELETE /api/module-instances/95b4d2b3-d2f3-4e9f-9f67-21204ad553c4
🗑️ [ModuleInstance] Eliminando istanza: 95b4d2b3-d2f3-4e9f-9f67-21204ad553c4
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
2025-06-15T07:05:57.117Z - DELETE /api/module-instances/0906dec2-30ae-48e5-ad93-d8254226b833
🗑️ [ModuleInstance] Eliminando istanza: 0906dec2-30ae-48e5-ad93-d8254226b833
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<935>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<935>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T07:05:57.120Z - DELETE /api/module-instances/4e1b8824-2dcd-41df-848b-47377f393631
🗑️ [ModuleInstance] Eliminando istanza: 4e1b8824-2dcd-41df-848b-47377f393631
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<936>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<936>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T07:05:57.122Z - DELETE /api/module-instances/530eaaa0-ad77-42ae-b165-6c17c88d8dfa
🗑️ [ModuleInstance] Eliminando istanza: 530eaaa0-ad77-42ae-b165-6c17c88d8dfa
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<937>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<937>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ae511732-0683-4df0-9ff9-6d90cc739bb8',
  attributeName: undefined,
  changeType: 'deleted'
}
2025-06-15T07:05:57.357Z - PUT /api/documents/a0a66b4c-ac07-45b8-b58b-17de69a7e751
🔧 Aggiornamento attributo description per entità a0a66b4c-ac07-45b8-b58b-17de69a7e751
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`description` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo description aggiornato per entità a0a66b4c-ac07-45b8-b58b-17de69a7e751
✅ Attributo description aggiornato per entità a0a66b4c-ac07-45b8-b58b-17de69a7e751
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità a0a66b4c-ac07-45b8-b58b-17de69a7e751
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:05:56.842Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:05:56.842Z"}',
  modifiedAt: '2025-06-15T07:05:57.400Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Descrizione aggiornata via WebSocket test',
  id: 'a0a66b4c-ac07-45b8-b58b-17de69a7e751',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: a0a66b4c-ac07-45b8-b58b-17de69a7e751
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'a0a66b4c-ac07-45b8-b58b-17de69a7e751',
  attributeName: 'description'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'a0a66b4c-ac07-45b8-b58b-17de69a7e751',
  attributeName: 'description',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'a0a66b4c-ac07-45b8-b58b-17de69a7e751',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'a0a66b4c-ac07-45b8-b58b-17de69a7e751',
  attributeName: undefined,
  changeType: 'updated'
}
2025-06-15T07:06:27.520Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:06:27.531Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.530Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.530Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.531Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.530Z"}',
  modifiedAt: '2025-06-15T07:06:27.531Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'ea6ac5f5-4515-492c-a672-c3600f3c73bc',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: ea6ac5f5-4515-492c-a672-c3600f3c73bc (tipo: CompositeDocument)
✅ CompositeDocument creato: ea6ac5f5-4515-492c-a672-c3600f3c73bc - Test Workspace Document
2025-06-15T07:06:27.555Z - GET /api/documents/ea6ac5f5-4515-492c-a672-c3600f3c73bc
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: ea6ac5f5-4515-492c-a672-c3600f3c73bc con 0 moduli
2025-06-15T07:06:27.558Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T07:06:27.558Z',
  updatedAt: '2025-06-15T07:06:27.558Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Test Contact Card',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test per contatti',
  createdAt: '2025-06-15T07:06:27.558Z',
  updatedAt: '2025-06-15T07:06:27.558Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:06:27.558Z',
  instanceName: 'Test Contact Card',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:06:27.558Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test per contatti',
  id: 'c936f8e8-c3a9-4f8b-be7d-5c635143760e',
  version: 1,
  updatedAt: '2025-06-15T07:06:27.558Z'
}
✅ Entità creata: c936f8e8-c3a9-4f8b-be7d-5c635143760e (tipo: ModuleInstance)
2025-06-15T07:06:27.570Z - PUT /api/documents/ea6ac5f5-4515-492c-a672-c3600f3c73bc/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ea6ac5f5-4515-492c-a672-c3600f3c73bc',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ea6ac5f5-4515-492c-a672-c3600f3c73bc',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'c936f8e8-c3a9-4f8b-be7d-5c635143760e',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'c936f8e8-c3a9-4f8b-be7d-5c635143760e',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità ea6ac5f5-4515-492c-a672-c3600f3c73bc
✅ ModuleInstance c936f8e8-c3a9-4f8b-be7d-5c635143760e aggiunto al documento ea6ac5f5-4515-492c-a672-c3600f3c73bc con ordine 1
2025-06-15T07:06:27.602Z - GET /api/documents/ea6ac5f5-4515-492c-a672-c3600f3c73bc
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: ea6ac5f5-4515-492c-a672-c3600f3c73bc con 1 moduli
2025-06-15T07:06:27.606Z - PUT /api/documents/ea6ac5f5-4515-492c-a672-c3600f3c73bc/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'ea6ac5f5-4515-492c-a672-c3600f3c73bc',
  targetEntityId: 'c936f8e8-c3a9-4f8b-be7d-5c635143760e',
  changeType: 'created'
}
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità ea6ac5f5-4515-492c-a672-c3600f3c73bc
✅ ModuleInstance c936f8e8-c3a9-4f8b-be7d-5c635143760e aggiornato nel documento ea6ac5f5-4515-492c-a672-c3600f3c73bc
2025-06-15T07:06:27.635Z - GET /api/documents/ea6ac5f5-4515-492c-a672-c3600f3c73bc
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: ea6ac5f5-4515-492c-a672-c3600f3c73bc con 1 moduli
2025-06-15T07:06:27.638Z - PUT /api/documents/ea6ac5f5-4515-492c-a672-c3600f3c73bc/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                WITH r, r.id as relationId
                DELETE r
                RETURN relationId
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità ea6ac5f5-4515-492c-a672-c3600f3c73bc
✅ ModuleInstance c936f8e8-c3a9-4f8b-be7d-5c635143760e rimosso dal documento ea6ac5f5-4515-492c-a672-c3600f3c73bc
2025-06-15T07:06:27.654Z - GET /api/documents/ea6ac5f5-4515-492c-a672-c3600f3c73bc
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: ea6ac5f5-4515-492c-a672-c3600f3c73bc con 0 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'ea6ac5f5-4515-492c-a672-c3600f3c73bc',
  targetEntityId: 'c936f8e8-c3a9-4f8b-be7d-5c635143760e',
  changeType: 'deleted'
}
2025-06-15T07:06:27.656Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.656Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.656Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.656Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.656Z"}',
  modifiedAt: '2025-06-15T07:06:27.656Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'ae2fb71e-c25b-4caf-b997-2fa71f6e14e2',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: ae2fb71e-c25b-4caf-b997-2fa71f6e14e2 (tipo: CompositeDocument)
✅ CompositeDocument creato: ae2fb71e-c25b-4caf-b997-2fa71f6e14e2 - Test Workspace Document
Nuovo client WebSocket connesso
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae2fb71e-c25b-4caf-b997-2fa71f6e14e2',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: 'ae2fb71e-c25b-4caf-b997-2fa71f6e14e2',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T07:06:27.694Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.694Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.694Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
Client WebSocket disconnesso
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.694Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.694Z"}',
  modifiedAt: '2025-06-15T07:06:27.694Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '2cad23cc-1a22-42f7-8c95-7c16510b147e',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 2cad23cc-1a22-42f7-8c95-7c16510b147e (tipo: CompositeDocument)
✅ CompositeDocument creato: 2cad23cc-1a22-42f7-8c95-7c16510b147e - Test Workspace Document
2025-06-15T07:06:27.766Z - PUT /api/documents/2cad23cc-1a22-42f7-8c95-7c16510b147e
🔧 Aggiornamento attributo layout per entità 2cad23cc-1a22-42f7-8c95-7c16510b147e
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`layout` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '2cad23cc-1a22-42f7-8c95-7c16510b147e',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '2cad23cc-1a22-42f7-8c95-7c16510b147e',
  attributeName: undefined,
  changeType: 'created'
}
✅ Attributo layout aggiornato per entità 2cad23cc-1a22-42f7-8c95-7c16510b147e
✅ Attributo layout aggiornato per entità 2cad23cc-1a22-42f7-8c95-7c16510b147e
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 2cad23cc-1a22-42f7-8c95-7c16510b147e
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"gridSize":16,"cellHeight":80,"margin":[15,15],"modules":{"test-module-1":{"x":0,"y":0,"w":4,"h":3,"lastModified":1749971187765}}}',
  createdAt: '2025-06-15T07:06:27.694Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.694Z"}',
  modifiedAt: '2025-06-15T07:06:27.800Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '2cad23cc-1a22-42f7-8c95-7c16510b147e',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: 2cad23cc-1a22-42f7-8c95-7c16510b147e
2025-06-15T07:06:27.814Z - GET /api/documents/2cad23cc-1a22-42f7-8c95-7c16510b147e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 2cad23cc-1a22-42f7-8c95-7c16510b147e con 0 moduli
2025-06-15T07:06:27.819Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.818Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.818Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.819Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.818Z"}',
  modifiedAt: '2025-06-15T07:06:27.819Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '97c5526f-bcee-46dd-bdb5-7c0b5e64721c',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 97c5526f-bcee-46dd-bdb5-7c0b5e64721c (tipo: CompositeDocument)
✅ CompositeDocument creato: 97c5526f-bcee-46dd-bdb5-7c0b5e64721c - Test Workspace Document
2025-06-15T07:06:27.828Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T07:06:27.828Z',
  updatedAt: '2025-06-15T07:06:27.828Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Contact Card 1',
  templateModuleId: 'contact-card',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Contact Card 1',
  createdAt: '2025-06-15T07:06:27.828Z',
  updatedAt: '2025-06-15T07:06:27.828Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
[AttributeSpace] Processando batch di 3 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '2cad23cc-1a22-42f7-8c95-7c16510b147e',
  attributeName: 'layout'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '2cad23cc-1a22-42f7-8c95-7c16510b147e',
  attributeName: 'layout',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '2cad23cc-1a22-42f7-8c95-7c16510b147e',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '2cad23cc-1a22-42f7-8c95-7c16510b147e',
  attributeName: undefined,
  changeType: 'updated'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '97c5526f-bcee-46dd-bdb5-7c0b5e64721c',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '97c5526f-bcee-46dd-bdb5-7c0b5e64721c',
  attributeName: undefined,
  changeType: 'created'
}
✅ Entità creata: {
  templateModuleId: 'contact-card',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:06:27.828Z',
  instanceName: 'Contact Card 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:06:27.829Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Contact Card 1',
  id: '15f668c5-57be-44e2-8415-dc7a469188cf',
  version: 1,
  updatedAt: '2025-06-15T07:06:27.828Z'
}
✅ Entità creata: 15f668c5-57be-44e2-8415-dc7a469188cf (tipo: ModuleInstance)
2025-06-15T07:06:27.838Z - PUT /api/documents/97c5526f-bcee-46dd-bdb5-7c0b5e64721c/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 97c5526f-bcee-46dd-bdb5-7c0b5e64721c
✅ ModuleInstance 15f668c5-57be-44e2-8415-dc7a469188cf aggiunto al documento 97c5526f-bcee-46dd-bdb5-7c0b5e64721c con ordine 1
2025-06-15T07:06:27.863Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T07:06:27.863Z',
  updatedAt: '2025-06-15T07:06:27.863Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Data Table 1',
  templateModuleId: 'data-table',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Data Table 1',
  createdAt: '2025-06-15T07:06:27.863Z',
  updatedAt: '2025-06-15T07:06:27.863Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '15f668c5-57be-44e2-8415-dc7a469188cf',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '15f668c5-57be-44e2-8415-dc7a469188cf',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '97c5526f-bcee-46dd-bdb5-7c0b5e64721c',
  targetEntityId: '15f668c5-57be-44e2-8415-dc7a469188cf',
  changeType: 'created'
}
✅ Entità creata: {
  templateModuleId: 'data-table',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:06:27.863Z',
  instanceName: 'Data Table 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:06:27.863Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Data Table 1',
  id: '70f76a18-6fb5-4fce-b8ee-3524b3331d7e',
  version: 1,
  updatedAt: '2025-06-15T07:06:27.863Z'
}
✅ Entità creata: 70f76a18-6fb5-4fce-b8ee-3524b3331d7e (tipo: ModuleInstance)
2025-06-15T07:06:27.872Z - PUT /api/documents/97c5526f-bcee-46dd-bdb5-7c0b5e64721c/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 97c5526f-bcee-46dd-bdb5-7c0b5e64721c
✅ ModuleInstance 70f76a18-6fb5-4fce-b8ee-3524b3331d7e aggiunto al documento 97c5526f-bcee-46dd-bdb5-7c0b5e64721c con ordine 2
2025-06-15T07:06:27.893Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T07:06:27.894Z',
  updatedAt: '2025-06-15T07:06:27.894Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Notes Board 1',
  templateModuleId: 'notes-board',
  targetEntityType: 'Contact',
  targetEntityId: 'test-entity-123',
  description: 'Modulo di test Notes Board 1',
  createdAt: '2025-06-15T07:06:27.894Z',
  updatedAt: '2025-06-15T07:06:27.894Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '70f76a18-6fb5-4fce-b8ee-3524b3331d7e',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '70f76a18-6fb5-4fce-b8ee-3524b3331d7e',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '97c5526f-bcee-46dd-bdb5-7c0b5e64721c',
  targetEntityId: '70f76a18-6fb5-4fce-b8ee-3524b3331d7e',
  changeType: 'created'
}
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'test-entity-123',
  createdAt: '2025-06-15T07:06:27.894Z',
  instanceName: 'Notes Board 1',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:06:27.894Z',
  entityType: 'ModuleInstance',
  description: 'Modulo di test Notes Board 1',
  id: '62502194-2321-4501-92eb-4e8e5ace612f',
  version: 1,
  updatedAt: '2025-06-15T07:06:27.894Z'
}
✅ Entità creata: 62502194-2321-4501-92eb-4e8e5ace612f (tipo: ModuleInstance)
2025-06-15T07:06:27.906Z - PUT /api/documents/97c5526f-bcee-46dd-bdb5-7c0b5e64721c/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 97c5526f-bcee-46dd-bdb5-7c0b5e64721c
✅ ModuleInstance 62502194-2321-4501-92eb-4e8e5ace612f aggiunto al documento 97c5526f-bcee-46dd-bdb5-7c0b5e64721c con ordine 3
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '62502194-2321-4501-92eb-4e8e5ace612f',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '62502194-2321-4501-92eb-4e8e5ace612f',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 0 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '97c5526f-bcee-46dd-bdb5-7c0b5e64721c',
  targetEntityId: '62502194-2321-4501-92eb-4e8e5ace612f',
  changeType: 'created'
}
2025-06-15T07:06:27.935Z - GET /api/documents/97c5526f-bcee-46dd-bdb5-7c0b5e64721c
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 97c5526f-bcee-46dd-bdb5-7c0b5e64721c con 3 moduli
2025-06-15T07:06:27.942Z - GET /api/documents/non-existent-id
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: non-existent-id
❌ Errore recupero CompositeDocument: CompositeDocument non-existent-id non trovato
❌ Errore recupero documento: Error: CompositeDocument non-existent-id non trovato
    at DocumentService.getDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:100:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1851:38
2025-06-15T07:06:27.950Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {}
❌ Errore creazione CompositeDocument: Il nome del documento è obbligatorio
❌ Errore creazione documento: Error: Il nome del documento è obbligatorio
    at DocumentService.createDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:40:23)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1820:64
    at Layer.handleRequest (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/layer.js:152:17)
    at next (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/route.js:157:13)
    at Route.dispatch (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/route.js:117:3)
    at handle (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:435:11)
    at Layer.handleRequest (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/lib/layer.js:152:17)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:295:15
    at processParams (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:582:12)
    at next (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/router/index.js:291:5)
2025-06-15T07:06:27.952Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.951Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.951Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.952Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.951Z"}',
  modifiedAt: '2025-06-15T07:06:27.952Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '53dea72a-b899-487a-9c24-6ed396c4d77b',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: 53dea72a-b899-487a-9c24-6ed396c4d77b (tipo: CompositeDocument)
✅ CompositeDocument creato: 53dea72a-b899-487a-9c24-6ed396c4d77b - Test Workspace Document
2025-06-15T07:06:27.963Z - PUT /api/documents/53dea72a-b899-487a-9c24-6ed396c4d77b/modules
2025-06-15T07:06:27.965Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  ownerId: 'test-user-123',
  status: 'draft',
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.964Z' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  projectId: null,
  ownerId: 'test-user-123',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { testRun: true, timestamp: '2025-06-15T07:06:27.964Z' },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.965Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.964Z"}',
  modifiedAt: '2025-06-15T07:06:27.965Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ Entità creata: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a (tipo: CompositeDocument)
✅ CompositeDocument creato: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a - Test Workspace Document
2025-06-15T07:06:27.976Z - PUT /api/documents/d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔧 Aggiornamento attributo status per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '53dea72a-b899-487a-9c24-6ed396c4d77b',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: '53dea72a-b899-487a-9c24-6ed396c4d77b',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined,
  changeType: 'created'
}
✅ Attributo status aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
✅ Attributo status aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.965Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.964Z"}',
  modifiedAt: '2025-06-15T07:06:27.999Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
2025-06-15T07:06:28.011Z - GET /api/documents/d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a con 0 moduli
2025-06-15T07:06:28.015Z - PUT /api/documents/d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔧 Aggiornamento attributo status per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
✅ Attributo status aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: 'status',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined,
  changeType: 'updated'
}
✅ Attributo modifiedAt aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.965Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.964Z"}',
  modifiedAt: '2025-06-15T07:06:28.025Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  ownerId: 'test-user-123',
  status: 'published'
}
✅ CompositeDocument aggiornato: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
2025-06-15T07:06:28.042Z - GET /api/documents/d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a con 0 moduli
2025-06-15T07:06:28.048Z - PUT /api/documents/d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔧 Aggiornamento attributo status per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`status` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo status aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
✅ Attributo status aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined,
  changeType: 'updated'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: 'status'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: 'status',
  changeType: 'update'
}
✅ Attributo modifiedAt aggiornato per entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.965Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.964Z"}',
  modifiedAt: '2025-06-15T07:06:28.060Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  ownerId: 'test-user-123',
  status: 'archived'
}
✅ CompositeDocument aggiornato: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
2025-06-15T07:06:28.078Z - GET /api/documents/d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a con 0 moduli
2025-06-15T07:06:28.085Z - DELETE /api/documents/d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                DELETE r
            
🗑️ Eliminazione entità: d3cce6a2-9955-4ecd-ab35-4ea716b47d1a
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.965Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.964Z"}',
  modifiedAt: '2025-06-15T07:06:28.060Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  ownerId: 'test-user-123',
  status: 'archived'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            DETACH DELETE e
            RETURN count(e) as deleted
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined,
  changeType: 'updated'
}
✅ Entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a eliminata
✅ Entità d3cce6a2-9955-4ecd-ab35-4ea716b47d1a eliminata
✅ CompositeDocument d3cce6a2-9955-4ecd-ab35-4ea716b47d1a eliminato con tutte le relazioni
2025-06-15T07:06:28.116Z - DELETE /api/module-instances/c936f8e8-c3a9-4f8b-be7d-5c635143760e
🗑️ [ModuleInstance] Eliminando istanza: c936f8e8-c3a9-4f8b-be7d-5c635143760e
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
2025-06-15T07:06:28.125Z - DELETE /api/module-instances/15f668c5-57be-44e2-8415-dc7a469188cf
🗑️ [ModuleInstance] Eliminando istanza: 15f668c5-57be-44e2-8415-dc7a469188cf
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<943>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<943>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T07:06:28.130Z - DELETE /api/module-instances/70f76a18-6fb5-4fce-b8ee-3524b3331d7e
🗑️ [ModuleInstance] Eliminando istanza: 70f76a18-6fb5-4fce-b8ee-3524b3331d7e
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<944>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<944>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
2025-06-15T07:06:28.134Z - DELETE /api/module-instances/62502194-2321-4501-92eb-4e8e5ace612f
🗑️ [ModuleInstance] Eliminando istanza: 62502194-2321-4501-92eb-4e8e5ace612f
🔍 Esecuzione query: 
                    MATCH (e:Entity {id: $entityId})
                    DELETE e
                
❌ Errore durante l'esecuzione della query: Cannot delete node<945>, because it still has relationships. To delete this node, you must first delete its relationships.
❌ Errore eliminazione istanza modulo: Neo4jError: Cannot delete node<945>, because it still has relationships. To delete this node, you must first delete its relationships.

    at captureStacktrace (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:624:17)
    at new Result (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/result.js:112:23)
    at Session._run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:224:16)
    at Session.run (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/node_modules/neo4j-driver-core/lib/session.js:188:27)
    at Neo4jConnector.executeQuery (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/neo4j_connector.js:68:42)
    at /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:807:38
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {
  constructor: [Function: Neo4jError] { isRetriable: [Function (anonymous)] },
  cause: undefined,
  gqlStatus: 'G1001',
  gqlStatusDescription: 'error: dependent object error - edges still exist',
  diagnosticRecord: {
    OPERATION: '',
    OPERATION_CODE: '0',
    CURRENT_SCHEMA: '/',
    _classification: 'CLIENT_ERROR'
  },
  classification: 'CLIENT_ERROR',
  rawClassification: 'CLIENT_ERROR',
  code: 'Neo.ClientError.Schema.ConstraintValidationFailed',
  retriable: false
}
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'd3cce6a2-9955-4ecd-ab35-4ea716b47d1a',
  attributeName: undefined,
  changeType: 'deleted'
}
2025-06-15T07:06:28.166Z - PUT /api/documents/ae2fb71e-c25b-4caf-b997-2fa71f6e14e2
🔧 Aggiornamento attributo description per entità ae2fb71e-c25b-4caf-b997-2fa71f6e14e2
🔄 Schema aggiornato in cache per CompositeDocument
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`description` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo description aggiornato per entità ae2fb71e-c25b-4caf-b997-2fa71f6e14e2
✅ Attributo description aggiornato per entità ae2fb71e-c25b-4caf-b997-2fa71f6e14e2
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità ae2fb71e-c25b-4caf-b997-2fa71f6e14e2
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:06:27.656Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T07:06:27.656Z"}',
  modifiedAt: '2025-06-15T07:06:28.176Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Descrizione aggiornata via WebSocket test',
  id: 'ae2fb71e-c25b-4caf-b997-2fa71f6e14e2',
  ownerId: 'test-user-123',
  status: 'draft'
}
✅ CompositeDocument aggiornato: ae2fb71e-c25b-4caf-b997-2fa71f6e14e2
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae2fb71e-c25b-4caf-b997-2fa71f6e14e2',
  attributeName: 'description'
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ae2fb71e-c25b-4caf-b997-2fa71f6e14e2',
  attributeName: 'description',
  changeType: 'update'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ae2fb71e-c25b-4caf-b997-2fa71f6e14e2',
  attributeName: undefined
}
🔄 Notifica entità propagata a 0 client: {
  entityId: 'ae2fb71e-c25b-4caf-b997-2fa71f6e14e2',
  attributeName: undefined,
  changeType: 'updated'
}
Nuovo client WebSocket connesso
2025-06-15T07:17:20.737Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:17:30.836Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[{"moduleId":"128a4fa1-7e1e-4464-ba51-ff999d34f2da","order":1,"position":{"x":2,"y":1},"size":{"width":8,"height":6},"collapsed":true,"config":{"theme":"dark","customProp":"value"}}],"lastModified":"2025-06-14T14:30:24.599Z"}',
  createdAt: '2025-06-14T14:30:24.635Z',
  metadata: '{"category":"updated","priority":"low","newField":"test"}',
  entityType: 'CompositeDocument',
  name: 'Cloned Document',
  description: 'A test composite document',
  id: 'e8e2512b-e745-40c4-a012-55505fbc5dc0',
  ownerId: 'clone-owner',
  projectId: '369a5617-2882-4c6c-abbd-1b09e6b93854',
  updatedAt: '2025-06-14T14:30:24.635Z',
  status: 'published'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 0 moduli
2025-06-15T07:17:32.585Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-14T14:28:54.446Z',
  metadata: '{"category":"test","priority":"high"}',
  entityType: 'CompositeDocument',
  name: 'Cloned Document',
  description: 'A test composite document',
  id: '3797a330-3250-439d-b387-35581f47462b',
  ownerId: 'clone-owner',
  projectId: '6474c87e-3370-479c-8ec5-e11b6f0aaac1',
  updatedAt: '2025-06-14T14:28:54.446Z',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:17:33.228Z - GET /api/documents/7aacec60-0260-40f4-aa93-c6e96aabc352
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[{"moduleId":"905deeeb-8ac1-42bd-a794-02f401bea429","order":1,"position":{"x":2,"y":1},"size":{"width":8,"height":6},"collapsed":true,"config":{"theme":"dark","customProp":"value"}}],"lastModified":"2025-06-14T14:30:32.344Z"}',
  createdAt: '2025-06-14T14:30:32.381Z',
  metadata: '{"category":"updated","priority":"low","newField":"test"}',
  entityType: 'CompositeDocument',
  name: 'Cloned Document',
  description: 'A test composite document',
  id: '7aacec60-0260-40f4-aa93-c6e96aabc352',
  ownerId: 'clone-owner',
  projectId: '0d07db31-b62d-493b-81fc-39e90f7a3e53',
  updatedAt: '2025-06-14T14:30:32.381Z',
  status: 'published'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7aacec60-0260-40f4-aa93-c6e96aabc352 con 0 moduli
2025-06-15T07:17:36.540Z - GET /api/documents/53dea72a-b899-487a-9c24-6ed396c4d77b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 53dea72a-b899-487a-9c24-6ed396c4d77b con 0 moduli
2025-06-15T07:17:45.790Z - GET /api/documents/1c7c61ab-8247-4031-ae32-35b9f3245bc1
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 1c7c61ab-8247-4031-ae32-35b9f3245bc1 con 0 moduli
2025-06-15T07:17:52.280Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  status: 'published',
  projectId: 'demo-project-1749971872273',
  ownerId: 'demo-user',
  metadata: { demoMode: true, location: 'Studio A', date: '2025-06-15' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  projectId: 'demo-project-1749971872273',
  ownerId: 'demo-user',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { demoMode: true, location: 'Studio A', date: '2025-06-15' },
  status: 'published'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:17:52.281Z',
  metadata: '{"demoMode":true,"location":"Studio A","date":"2025-06-15"}',
  modifiedAt: '2025-06-15T07:17:52.281Z',
  entityType: 'CompositeDocument',
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  id: '131943b2-b1f4-4363-aa09-68a60489f106',
  ownerId: 'demo-user',
  projectId: 'demo-project-1749971872273',
  status: 'published'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:17:52.281Z',
  metadata: '{"demoMode":true,"location":"Studio A","date":"2025-06-15"}',
  entityType: 'CompositeDocument',
  modifiedAt: '2025-06-15T07:17:52.281Z',
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  id: '131943b2-b1f4-4363-aa09-68a60489f106',
  ownerId: 'demo-user',
  projectId: 'demo-project-1749971872273',
  status: 'published'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: demo-project-1749971872273
❌ Errore createRelation: Entità target non trovata: demo-project-1749971872273
❌ Errore createEntity: Entità target non trovata: demo-project-1749971872273
❌ Errore creazione CompositeDocument: Entità target non trovata: demo-project-1749971872273
❌ Errore creazione documento: Error: Entità target non trovata: demo-project-1749971872273
    at RelationEngine.createRelation (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/relationEngine.js:36:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async EntityEngine.createReferenceRelations (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/entityEngine_evolved.js:540:17)
    at async EntityEngine.createEntity (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/entityEngine_evolved.js:80:17)
    at async DocumentService.createDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:61:37)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1820:37
Nuovo client WebSocket connesso
2025-06-15T07:17:55.825Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:17:56.801Z - GET /api/documents/1c7c61ab-8247-4031-ae32-35b9f3245bc1
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 1c7c61ab-8247-4031-ae32-35b9f3245bc1 con 0 moduli
2025-06-15T07:18:00.880Z - GET /api/documents/7aacec60-0260-40f4-aa93-c6e96aabc352
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7aacec60-0260-40f4-aa93-c6e96aabc352 con 0 moduli
2025-06-15T07:18:01.062Z - GET /api/documents/7aacec60-0260-40f4-aa93-c6e96aabc352
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7aacec60-0260-40f4-aa93-c6e96aabc352 con 0 moduli
2025-06-15T07:18:02.135Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 0 moduli
2025-06-15T07:18:02.303Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 0 moduli
2025-06-15T07:18:04.002Z - GET /api/documents/1c7c61ab-8247-4031-ae32-35b9f3245bc1
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 1c7c61ab-8247-4031-ae32-35b9f3245bc1 con 0 moduli
2025-06-15T07:18:04.181Z - GET /api/documents/1c7c61ab-8247-4031-ae32-35b9f3245bc1
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 1c7c61ab-8247-4031-ae32-35b9f3245bc1 con 0 moduli
2025-06-15T07:18:06.101Z - GET /api/documents/9d7cb232-3417-41ea-9aa5-6c3585f53607
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"gridSize":16,"cellHeight":80,"margin":[15,15],"modules":{"test-module-1":{"x":0,"y":0,"w":4,"h":3,"lastModified":1749949588783}}}',
  createdAt: '2025-06-15T01:06:28.760Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:06:28.755Z"}',
  modifiedAt: '2025-06-15T01:06:28.802Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '9d7cb232-3417-41ea-9aa5-6c3585f53607',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 9d7cb232-3417-41ea-9aa5-6c3585f53607 con 0 moduli
2025-06-15T07:18:06.347Z - GET /api/documents/9d7cb232-3417-41ea-9aa5-6c3585f53607
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 9d7cb232-3417-41ea-9aa5-6c3585f53607 con 0 moduli
2025-06-15T07:18:06.554Z - GET /api/documents/9d7cb232-3417-41ea-9aa5-6c3585f53607
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 9d7cb232-3417-41ea-9aa5-6c3585f53607 con 0 moduli
2025-06-15T07:18:22.711Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Calsheet day 2',
  description: 'Giancarlo muore',
  status: 'draft',
  projectId: 'progetto-123',
  ownerId: 'demo-user-1749971902707',
  metadata: { createdFrom: 'complete-demo', demoMode: true }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Calsheet day 2',
  description: 'Giancarlo muore',
  projectId: 'progetto-123',
  ownerId: 'demo-user-1749971902707',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { createdFrom: 'complete-demo', demoMode: true },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:18:22.712Z',
  metadata: '{"createdFrom":"complete-demo","demoMode":true}',
  modifiedAt: '2025-06-15T07:18:22.712Z',
  entityType: 'CompositeDocument',
  name: 'Calsheet day 2',
  description: 'Giancarlo muore',
  id: '3f77e690-3f92-46ce-971b-af10e0281af9',
  ownerId: 'demo-user-1749971902707',
  projectId: 'progetto-123',
  status: 'draft'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:18:22.712Z',
  metadata: '{"createdFrom":"complete-demo","demoMode":true}',
  entityType: 'CompositeDocument',
  modifiedAt: '2025-06-15T07:18:22.712Z',
  name: 'Calsheet day 2',
  description: 'Giancarlo muore',
  id: '3f77e690-3f92-46ce-971b-af10e0281af9',
  ownerId: 'demo-user-1749971902707',
  projectId: 'progetto-123',
  status: 'draft'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: progetto-123
❌ Errore createRelation: Entità target non trovata: progetto-123
❌ Errore createEntity: Entità target non trovata: progetto-123
❌ Errore creazione CompositeDocument: Entità target non trovata: progetto-123
❌ Errore creazione documento: Error: Entità target non trovata: progetto-123
    at RelationEngine.createRelation (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/relationEngine.js:36:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async EntityEngine.createReferenceRelations (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/entityEngine_evolved.js:540:17)
    at async EntityEngine.createEntity (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/entityEngine_evolved.js:80:17)
    at async DocumentService.createDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:61:37)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1820:37
2025-06-15T07:18:32.238Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Calsheet day 2',
  description: 'Giancarlo muore',
  status: 'draft',
  projectId: null,
  ownerId: 'demo-user-1749971912234',
  metadata: { createdFrom: 'complete-demo', demoMode: true }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Calsheet day 2',
  description: 'Giancarlo muore',
  projectId: null,
  ownerId: 'demo-user-1749971912234',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { createdFrom: 'complete-demo', demoMode: true },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:18:32.239Z',
  metadata: '{"createdFrom":"complete-demo","demoMode":true}',
  modifiedAt: '2025-06-15T07:18:32.239Z',
  entityType: 'CompositeDocument',
  name: 'Calsheet day 2',
  description: 'Giancarlo muore',
  id: '8a0638ba-64e5-4868-9e81-9480fc7eac8a',
  ownerId: 'demo-user-1749971912234',
  status: 'draft'
}
✅ Entità creata: 8a0638ba-64e5-4868-9e81-9480fc7eac8a (tipo: CompositeDocument)
✅ CompositeDocument creato: 8a0638ba-64e5-4868-9e81-9480fc7eac8a - Calsheet day 2
2025-06-15T07:18:32.264Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '8a0638ba-64e5-4868-9e81-9480fc7eac8a',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: '8a0638ba-64e5-4868-9e81-9480fc7eac8a',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T07:18:34.687Z - GET /api/documents/f5b57682-accd-458b-86e9-1b7b3a8043bd
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:06:28.840Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:06:28.839Z"}',
  modifiedAt: '2025-06-15T01:06:28.932Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'f5b57682-accd-458b-86e9-1b7b3a8043bd',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: f5b57682-accd-458b-86e9-1b7b3a8043bd con 3 moduli
2025-06-15T07:18:35.130Z - GET /api/documents/9d7cb232-3417-41ea-9aa5-6c3585f53607
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 9d7cb232-3417-41ea-9aa5-6c3585f53607 con 0 moduli
2025-06-15T07:18:35.302Z - GET /api/documents/9d7cb232-3417-41ea-9aa5-6c3585f53607
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 9d7cb232-3417-41ea-9aa5-6c3585f53607 con 0 moduli
Client WebSocket disconnesso
2025-06-15T07:18:46.869Z - GET /.well-known/appspecific/com.chrome.devtools.json
Client WebSocket disconnesso
2025-06-15T07:18:47.746Z - GET /.well-known/appspecific/com.chrome.devtools.json
Nuovo client WebSocket connesso
2025-06-15T07:18:47.770Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
Client WebSocket disconnesso
2025-06-15T07:18:53.443Z - GET /.well-known/appspecific/com.chrome.devtools.json
Nuovo client WebSocket connesso
2025-06-15T07:18:53.467Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:19:03.135Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  status: 'published',
  projectId: 'demo-project-1749971943129',
  ownerId: 'demo-user',
  metadata: { demoMode: true, location: 'Studio A', date: '2025-06-15' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  projectId: 'demo-project-1749971943129',
  ownerId: 'demo-user',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { demoMode: true, location: 'Studio A', date: '2025-06-15' },
  status: 'published'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:19:03.137Z',
  metadata: '{"demoMode":true,"location":"Studio A","date":"2025-06-15"}',
  modifiedAt: '2025-06-15T07:19:03.137Z',
  entityType: 'CompositeDocument',
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  id: 'e102bb4b-7c6f-4a58-beb5-8dca035e5aef',
  ownerId: 'demo-user',
  projectId: 'demo-project-1749971943129',
  status: 'published'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:19:03.137Z',
  metadata: '{"demoMode":true,"location":"Studio A","date":"2025-06-15"}',
  entityType: 'CompositeDocument',
  modifiedAt: '2025-06-15T07:19:03.137Z',
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  id: 'e102bb4b-7c6f-4a58-beb5-8dca035e5aef',
  ownerId: 'demo-user',
  projectId: 'demo-project-1749971943129',
  status: 'published'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: demo-project-1749971943129
❌ Errore createRelation: Entità target non trovata: demo-project-1749971943129
❌ Errore createEntity: Entità target non trovata: demo-project-1749971943129
❌ Errore creazione CompositeDocument: Entità target non trovata: demo-project-1749971943129
❌ Errore creazione documento: Error: Entità target non trovata: demo-project-1749971943129
    at RelationEngine.createRelation (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/relationEngine.js:36:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async EntityEngine.createReferenceRelations (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/entityEngine_evolved.js:540:17)
    at async EntityEngine.createEntity (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/entityEngine_evolved.js:80:17)
    at async DocumentService.createDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:61:37)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1820:37
Client WebSocket disconnesso
2025-06-15T07:22:12.868Z - GET /.well-known/appspecific/com.chrome.devtools.json
Nuovo client WebSocket connesso
2025-06-15T07:22:12.892Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:22:26.774Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Simple Test Document',
  description: 'A simple document for testing',
  status: 'draft',
  ownerId: 'test-user-1749972146771'
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Simple Test Document',
  description: 'A simple document for testing',
  projectId: null,
  ownerId: 'test-user-1749972146771',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: {},
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:22:26.775Z',
  metadata: '{}',
  modifiedAt: '2025-06-15T07:22:26.775Z',
  entityType: 'CompositeDocument',
  name: 'Simple Test Document',
  description: 'A simple document for testing',
  id: '61926236-c9a6-46be-8c75-85e3bd29a5a8',
  ownerId: 'test-user-1749972146771',
  status: 'draft'
}
✅ Entità creata: 61926236-c9a6-46be-8c75-85e3bd29a5a8 (tipo: CompositeDocument)
✅ CompositeDocument creato: 61926236-c9a6-46be-8c75-85e3bd29a5a8 - Simple Test Document
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '61926236-c9a6-46be-8c75-85e3bd29a5a8',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '61926236-c9a6-46be-8c75-85e3bd29a5a8',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T07:22:28.651Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:22:30.961Z - GET /api/documents/7b8375d7-1993-4a5e-a186-2e007fc7e2ab
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-14T14:26:55.607Z',
  metadata: '{}',
  entityType: 'CompositeDocument',
  name: 'Another Test Document',
  description: '',
  id: '7b8375d7-1993-4a5e-a186-2e007fc7e2ab',
  ownerId: 'another-user',
  updatedAt: '2025-06-14T14:26:55.607Z',
  status: 'archived'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7b8375d7-1993-4a5e-a186-2e007fc7e2ab con 0 moduli
2025-06-15T07:22:31.954Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:22:32.600Z - GET /api/documents/7aacec60-0260-40f4-aa93-c6e96aabc352
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7aacec60-0260-40f4-aa93-c6e96aabc352 con 0 moduli
2025-06-15T07:22:33.347Z - GET /api/documents/b190d32b-d095-4f92-aedd-b2f08cf1186c
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[{"moduleId":"0884cc1d-501c-4f8c-a107-56289979897f","order":1,"position":{"x":2,"y":1},"size":{"width":8,"height":6},"collapsed":true,"config":{"theme":"dark","customProp":"value"}}],"lastModified":"2025-06-14T14:29:49.914Z"}',
  createdAt: '2025-06-14T14:29:49.967Z',
  metadata: '{"category":"updated","priority":"low","newField":"test"}',
  entityType: 'CompositeDocument',
  name: 'Cloned Document',
  description: 'A test composite document',
  id: 'b190d32b-d095-4f92-aedd-b2f08cf1186c',
  ownerId: 'clone-owner',
  projectId: '2cdf2c60-fd2e-40b8-9c4d-8fa88d677d96',
  updatedAt: '2025-06-14T14:29:49.967Z',
  status: 'published'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: b190d32b-d095-4f92-aedd-b2f08cf1186c con 0 moduli
2025-06-15T07:22:35.778Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  status: 'published',
  ownerId: 'demo-user',
  metadata: { demoMode: true, location: 'Studio A', date: '2025-06-15' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  projectId: null,
  ownerId: 'demo-user',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { demoMode: true, location: 'Studio A', date: '2025-06-15' },
  status: 'published'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:22:35.779Z',
  metadata: '{"demoMode":true,"location":"Studio A","date":"2025-06-15"}',
  modifiedAt: '2025-06-15T07:22:35.779Z',
  entityType: 'CompositeDocument',
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  id: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  ownerId: 'demo-user',
  status: 'published'
}
✅ Entità creata: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 (tipo: CompositeDocument)
✅ CompositeDocument creato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 - Demo Film Production - Day 1
2025-06-15T07:22:35.831Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 0 moduli
2025-06-15T07:22:35.841Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Cast Members',
  templateModuleId: 'contact-list',
  targetEntityType: 'Contact',
  targetEntityId: 'demo-contact-1749972155838',
  description: 'Demo Cast Members',
  createdAt: '2025-06-15T07:22:35.841Z',
  updatedAt: '2025-06-15T07:22:35.841Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Cast Members',
  templateModuleId: 'contact-list',
  targetEntityType: 'Contact',
  targetEntityId: 'demo-contact-1749972155838',
  description: 'Demo Cast Members',
  createdAt: '2025-06-15T07:22:35.841Z',
  updatedAt: '2025-06-15T07:22:35.841Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  attributeName: undefined,
  changeType: 'created'
}
✅ Entità creata: {
  templateModuleId: 'contact-list',
  targetEntityId: 'demo-contact-1749972155838',
  createdAt: '2025-06-15T07:22:35.841Z',
  instanceName: 'Cast Members',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:22:35.841Z',
  entityType: 'ModuleInstance',
  description: 'Demo Cast Members',
  id: '323e41bc-23a4-4b0a-8959-d7f37ff7edb7',
  version: 1,
  updatedAt: '2025-06-15T07:22:35.841Z'
}
✅ Entità creata: 323e41bc-23a4-4b0a-8959-d7f37ff7edb7 (tipo: ModuleInstance)
2025-06-15T07:22:35.861Z - PUT /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
✅ ModuleInstance 323e41bc-23a4-4b0a-8959-d7f37ff7edb7 aggiunto al documento 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con ordine 1
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '323e41bc-23a4-4b0a-8959-d7f37ff7edb7',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '323e41bc-23a4-4b0a-8959-d7f37ff7edb7',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  targetEntityId: '323e41bc-23a4-4b0a-8959-d7f37ff7edb7',
  changeType: 'created'
}
2025-06-15T07:22:36.891Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Production Notes',
  templateModuleId: 'notes-board',
  targetEntityType: 'Note',
  targetEntityId: 'demo-note-1749972156884',
  description: 'Demo Production Notes',
  createdAt: '2025-06-15T07:22:36.891Z',
  updatedAt: '2025-06-15T07:22:36.891Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Production Notes',
  templateModuleId: 'notes-board',
  targetEntityType: 'Note',
  targetEntityId: 'demo-note-1749972156884',
  description: 'Demo Production Notes',
  createdAt: '2025-06-15T07:22:36.891Z',
  updatedAt: '2025-06-15T07:22:36.891Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'demo-note-1749972156884',
  createdAt: '2025-06-15T07:22:36.891Z',
  instanceName: 'Production Notes',
  targetEntityType: 'Note',
  modifiedAt: '2025-06-15T07:22:36.892Z',
  entityType: 'ModuleInstance',
  description: 'Demo Production Notes',
  id: '241385d9-49df-4dbc-bc02-e4ddf520cfd4',
  version: 1,
  updatedAt: '2025-06-15T07:22:36.891Z'
}
✅ Entità creata: 241385d9-49df-4dbc-bc02-e4ddf520cfd4 (tipo: ModuleInstance)
2025-06-15T07:22:36.916Z - PUT /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '241385d9-49df-4dbc-bc02-e4ddf520cfd4',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '241385d9-49df-4dbc-bc02-e4ddf520cfd4',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
✅ ModuleInstance 241385d9-49df-4dbc-bc02-e4ddf520cfd4 aggiunto al documento 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con ordine 2
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  targetEntityId: '241385d9-49df-4dbc-bc02-e4ddf520cfd4',
  changeType: 'created'
}
2025-06-15T07:22:37.972Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Shooting Schedule',
  templateModuleId: 'timeline',
  targetEntityType: 'Event',
  targetEntityId: 'demo-event-1749972157966',
  description: 'Demo Shooting Schedule',
  createdAt: '2025-06-15T07:22:37.973Z',
  updatedAt: '2025-06-15T07:22:37.973Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Shooting Schedule',
  templateModuleId: 'timeline',
  targetEntityType: 'Event',
  targetEntityId: 'demo-event-1749972157966',
  description: 'Demo Shooting Schedule',
  createdAt: '2025-06-15T07:22:37.973Z',
  updatedAt: '2025-06-15T07:22:37.973Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'timeline',
  targetEntityId: 'demo-event-1749972157966',
  createdAt: '2025-06-15T07:22:37.973Z',
  instanceName: 'Shooting Schedule',
  targetEntityType: 'Event',
  modifiedAt: '2025-06-15T07:22:37.973Z',
  entityType: 'ModuleInstance',
  description: 'Demo Shooting Schedule',
  id: 'abfe7c58-e67e-4c9c-89a3-574f5f679ed2',
  version: 1,
  updatedAt: '2025-06-15T07:22:37.973Z'
}
✅ Entità creata: abfe7c58-e67e-4c9c-89a3-574f5f679ed2 (tipo: ModuleInstance)
2025-06-15T07:22:38.015Z - PUT /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'abfe7c58-e67e-4c9c-89a3-574f5f679ed2',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: 'abfe7c58-e67e-4c9c-89a3-574f5f679ed2',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
✅ ModuleInstance abfe7c58-e67e-4c9c-89a3-574f5f679ed2 aggiunto al documento 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con ordine 3
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  targetEntityId: 'abfe7c58-e67e-4c9c-89a3-574f5f679ed2',
  changeType: 'created'
}
2025-06-15T07:22:39.072Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Scene Checklist',
  templateModuleId: 'task-tracker',
  targetEntityType: 'Task',
  targetEntityId: 'demo-task-1749972159066',
  description: 'Demo Scene Checklist',
  createdAt: '2025-06-15T07:22:39.073Z',
  updatedAt: '2025-06-15T07:22:39.073Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Scene Checklist',
  templateModuleId: 'task-tracker',
  targetEntityType: 'Task',
  targetEntityId: 'demo-task-1749972159066',
  description: 'Demo Scene Checklist',
  createdAt: '2025-06-15T07:22:39.073Z',
  updatedAt: '2025-06-15T07:22:39.073Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'task-tracker',
  targetEntityId: 'demo-task-1749972159066',
  createdAt: '2025-06-15T07:22:39.073Z',
  instanceName: 'Scene Checklist',
  targetEntityType: 'Task',
  modifiedAt: '2025-06-15T07:22:39.073Z',
  entityType: 'ModuleInstance',
  description: 'Demo Scene Checklist',
  id: '33db6707-6fa1-41b8-9101-2609aa3e3f65',
  version: 1,
  updatedAt: '2025-06-15T07:22:39.073Z'
}
✅ Entità creata: 33db6707-6fa1-41b8-9101-2609aa3e3f65 (tipo: ModuleInstance)
2025-06-15T07:22:39.099Z - PUT /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '33db6707-6fa1-41b8-9101-2609aa3e3f65',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '33db6707-6fa1-41b8-9101-2609aa3e3f65',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
✅ ModuleInstance 33db6707-6fa1-41b8-9101-2609aa3e3f65 aggiunto al documento 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con ordine 4
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  targetEntityId: '33db6707-6fa1-41b8-9101-2609aa3e3f65',
  changeType: 'created'
}
2025-06-15T07:22:39.621Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
Client WebSocket disconnesso
2025-06-15T07:22:46.031Z - GET /.well-known/appspecific/com.chrome.devtools.json
Nuovo client WebSocket connesso
2025-06-15T07:22:46.056Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:22:46.981Z - GET /api/documents/7b8375d7-1993-4a5e-a186-2e007fc7e2ab
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7b8375d7-1993-4a5e-a186-2e007fc7e2ab con 0 moduli
2025-06-15T07:22:48.714Z - GET /api/documents/b190d32b-d095-4f92-aedd-b2f08cf1186c
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: b190d32b-d095-4f92-aedd-b2f08cf1186c con 0 moduli
2025-06-15T07:22:49.242Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 4 moduli
2025-06-15T07:25:21.272Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:25:59.091Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:26:19.227Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:26:31.658Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 4 moduli
Client WebSocket disconnesso
2025-06-15T07:27:48.140Z - GET /.well-known/appspecific/com.chrome.devtools.json
Nuovo client WebSocket connesso
2025-06-15T07:27:48.168Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:27:50.238Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:27:51.132Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 0 moduli
2025-06-15T07:27:57.330Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Contact List',
  templateModuleId: 'contact-list',
  targetEntityType: 'Contact',
  targetEntityId: 'demo-entity-1749972477326',
  description: 'Module created from complete demo for Contact',
  createdAt: '2025-06-15T07:27:57.330Z',
  updatedAt: '2025-06-15T07:27:57.330Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Contact List',
  templateModuleId: 'contact-list',
  targetEntityType: 'Contact',
  targetEntityId: 'demo-entity-1749972477326',
  description: 'Module created from complete demo for Contact',
  createdAt: '2025-06-15T07:27:57.330Z',
  updatedAt: '2025-06-15T07:27:57.330Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-list',
  targetEntityId: 'demo-entity-1749972477326',
  createdAt: '2025-06-15T07:27:57.330Z',
  instanceName: 'Contact List',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:27:57.331Z',
  entityType: 'ModuleInstance',
  description: 'Module created from complete demo for Contact',
  id: '528e794f-8fdf-4211-a61d-fcd92b6ab80b',
  version: 1,
  updatedAt: '2025-06-15T07:27:57.330Z'
}
✅ Entità creata: 528e794f-8fdf-4211-a61d-fcd92b6ab80b (tipo: ModuleInstance)
2025-06-15T07:27:57.360Z - PUT /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '528e794f-8fdf-4211-a61d-fcd92b6ab80b',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '528e794f-8fdf-4211-a61d-fcd92b6ab80b',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità e8e2512b-e745-40c4-a012-55505fbc5dc0
✅ ModuleInstance 528e794f-8fdf-4211-a61d-fcd92b6ab80b aggiunto al documento e8e2512b-e745-40c4-a012-55505fbc5dc0 con ordine 1
2025-06-15T07:27:57.411Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'e8e2512b-e745-40c4-a012-55505fbc5dc0',
  targetEntityId: '528e794f-8fdf-4211-a61d-fcd92b6ab80b',
  changeType: 'created'
}
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 1 moduli
2025-06-15T07:28:12.467Z - PUT /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità e8e2512b-e745-40c4-a012-55505fbc5dc0
✅ ModuleInstance 528e794f-8fdf-4211-a61d-fcd92b6ab80b aggiornato nel documento e8e2512b-e745-40c4-a012-55505fbc5dc0
2025-06-15T07:28:12.548Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 1 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'e8e2512b-e745-40c4-a012-55505fbc5dc0',
  targetEntityId: '528e794f-8fdf-4211-a61d-fcd92b6ab80b',
  changeType: 'updated'
}
2025-06-15T07:28:19.248Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 1 moduli
2025-06-15T07:28:20.360Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 1 moduli
2025-06-15T07:28:20.634Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 1 moduli
2025-06-15T07:28:21.183Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 1 moduli
2025-06-15T07:28:21.703Z - GET /api/documents/e8e2512b-e745-40c4-a012-55505fbc5dc0
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e8e2512b-e745-40c4-a012-55505fbc5dc0 con 1 moduli
2025-06-15T07:28:22.304Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:28:22.879Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:28:27.176Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Simple Test Document',
  description: 'A simple document for testing',
  status: 'draft',
  ownerId: 'test-user-1749972507172'
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Simple Test Document',
  description: 'A simple document for testing',
  projectId: null,
  ownerId: 'test-user-1749972507172',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: {},
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:28:27.177Z',
  metadata: '{}',
  modifiedAt: '2025-06-15T07:28:27.177Z',
  entityType: 'CompositeDocument',
  name: 'Simple Test Document',
  description: 'A simple document for testing',
  id: 'b85a0571-390d-4263-86e1-87668b41f3d6',
  ownerId: 'test-user-1749972507172',
  status: 'draft'
}
✅ Entità creata: b85a0571-390d-4263-86e1-87668b41f3d6 (tipo: CompositeDocument)
✅ CompositeDocument creato: b85a0571-390d-4263-86e1-87668b41f3d6 - Simple Test Document
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'b85a0571-390d-4263-86e1-87668b41f3d6',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: 'b85a0571-390d-4263-86e1-87668b41f3d6',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T07:28:28.533Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:28:32.282Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:28:32.891Z - GET /api/documents/7b8375d7-1993-4a5e-a186-2e007fc7e2ab
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7b8375d7-1993-4a5e-a186-2e007fc7e2ab con 0 moduli
2025-06-15T07:28:33.460Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:28:34.192Z - GET /api/documents/7b8375d7-1993-4a5e-a186-2e007fc7e2ab
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7b8375d7-1993-4a5e-a186-2e007fc7e2ab con 0 moduli
2025-06-15T07:28:34.867Z - GET /api/documents/3797a330-3250-439d-b387-35581f47462b
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3797a330-3250-439d-b387-35581f47462b con 0 moduli
2025-06-15T07:28:36.828Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 4 moduli
Nuovo client WebSocket connesso
2025-06-15T07:28:43.016Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:28:43.985Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 4 moduli
2025-06-15T07:28:54.358Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Analytics Dashboard',
  templateModuleId: 'analytics',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972534353',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:28:54.358Z',
  updatedAt: '2025-06-15T07:28:54.358Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Analytics Dashboard',
  templateModuleId: 'analytics',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972534353',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:28:54.358Z',
  updatedAt: '2025-06-15T07:28:54.358Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'analytics',
  targetEntityId: 'demo-entity-1749972534353',
  createdAt: '2025-06-15T07:28:54.358Z',
  instanceName: 'Analytics Dashboard',
  targetEntityType: 'Entity',
  modifiedAt: '2025-06-15T07:28:54.359Z',
  entityType: 'ModuleInstance',
  description: 'Module created from complete demo for Entity',
  id: 'f84cdc45-c204-471e-84b8-1b69332f1e59',
  version: 1,
  updatedAt: '2025-06-15T07:28:54.358Z'
}
✅ Entità creata: f84cdc45-c204-471e-84b8-1b69332f1e59 (tipo: ModuleInstance)
2025-06-15T07:28:54.389Z - PUT /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'f84cdc45-c204-471e-84b8-1b69332f1e59',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: 'f84cdc45-c204-471e-84b8-1b69332f1e59',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
✅ ModuleInstance f84cdc45-c204-471e-84b8-1b69332f1e59 aggiunto al documento 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con ordine 5
2025-06-15T07:28:54.442Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 5 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  targetEntityId: 'f84cdc45-c204-471e-84b8-1b69332f1e59',
  changeType: 'created'
}
2025-06-15T07:29:09.208Z - PUT /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
✅ ModuleInstance f84cdc45-c204-471e-84b8-1b69332f1e59 aggiornato nel documento 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
2025-06-15T07:29:09.243Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 5 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  targetEntityId: 'f84cdc45-c204-471e-84b8-1b69332f1e59',
  changeType: 'updated'
}
2025-06-15T07:29:18.942Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Analytics Dashboard',
  templateModuleId: 'analytics',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972558937',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:29:18.942Z',
  updatedAt: '2025-06-15T07:29:18.942Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Analytics Dashboard',
  templateModuleId: 'analytics',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972558937',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:29:18.942Z',
  updatedAt: '2025-06-15T07:29:18.942Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'analytics',
  targetEntityId: 'demo-entity-1749972558937',
  createdAt: '2025-06-15T07:29:18.942Z',
  instanceName: 'Analytics Dashboard',
  targetEntityType: 'Entity',
  modifiedAt: '2025-06-15T07:29:18.943Z',
  entityType: 'ModuleInstance',
  description: 'Module created from complete demo for Entity',
  id: 'f08a547c-b23f-475b-b18d-001c6c8f3645',
  version: 1,
  updatedAt: '2025-06-15T07:29:18.942Z'
}
✅ Entità creata: f08a547c-b23f-475b-b18d-001c6c8f3645 (tipo: ModuleInstance)
2025-06-15T07:29:18.971Z - PUT /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'f08a547c-b23f-475b-b18d-001c6c8f3645',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: 'f08a547c-b23f-475b-b18d-001c6c8f3645',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
✅ ModuleInstance f08a547c-b23f-475b-b18d-001c6c8f3645 aggiunto al documento 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con ordine 6
2025-06-15T07:29:19.021Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 6 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42',
  targetEntityId: 'f08a547c-b23f-475b-b18d-001c6c8f3645',
  changeType: 'created'
}
Client WebSocket disconnesso
Nuovo client WebSocket connesso
2025-06-15T07:29:29.801Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:29:32.870Z - GET /api/documents/8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 8f5ca1c2-9a55-49b5-9eb6-6bedd2763b42 con 6 moduli
2025-06-15T07:29:46.291Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  status: 'published',
  ownerId: 'demo-user',
  metadata: { demoMode: true, location: 'Studio A', date: '2025-06-15' }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  projectId: null,
  ownerId: 'demo-user',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { demoMode: true, location: 'Studio A', date: '2025-06-15' },
  status: 'published'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:29:46.292Z',
  metadata: '{"demoMode":true,"location":"Studio A","date":"2025-06-15"}',
  modifiedAt: '2025-06-15T07:29:46.292Z',
  entityType: 'CompositeDocument',
  name: 'Demo Film Production - Day 1',
  description: 'Automated demo showing all SSOT-4000 features',
  id: 'f1ca2191-7951-4c16-b7b7-4256cdad74c3',
  ownerId: 'demo-user',
  status: 'published'
}
✅ Entità creata: f1ca2191-7951-4c16-b7b7-4256cdad74c3 (tipo: CompositeDocument)
✅ CompositeDocument creato: f1ca2191-7951-4c16-b7b7-4256cdad74c3 - Demo Film Production - Day 1
2025-06-15T07:29:46.323Z - GET /api/documents/f1ca2191-7951-4c16-b7b7-4256cdad74c3
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: f1ca2191-7951-4c16-b7b7-4256cdad74c3 con 0 moduli
2025-06-15T07:29:46.335Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Cast Members',
  templateModuleId: 'contact-list',
  targetEntityType: 'Contact',
  targetEntityId: 'demo-contact-1749972586333',
  description: 'Demo Cast Members',
  createdAt: '2025-06-15T07:29:46.335Z',
  updatedAt: '2025-06-15T07:29:46.335Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Cast Members',
  templateModuleId: 'contact-list',
  targetEntityType: 'Contact',
  targetEntityId: 'demo-contact-1749972586333',
  description: 'Demo Cast Members',
  createdAt: '2025-06-15T07:29:46.335Z',
  updatedAt: '2025-06-15T07:29:46.335Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'contact-list',
  targetEntityId: 'demo-contact-1749972586333',
  createdAt: '2025-06-15T07:29:46.335Z',
  instanceName: 'Cast Members',
  targetEntityType: 'Contact',
  modifiedAt: '2025-06-15T07:29:46.335Z',
  entityType: 'ModuleInstance',
  description: 'Demo Cast Members',
  id: 'ee7df12d-cbda-4770-9f52-aaa9f049e1d4',
  version: 1,
  updatedAt: '2025-06-15T07:29:46.335Z'
}
✅ Entità creata: ee7df12d-cbda-4770-9f52-aaa9f049e1d4 (tipo: ModuleInstance)
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'f1ca2191-7951-4c16-b7b7-4256cdad74c3',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: 'f1ca2191-7951-4c16-b7b7-4256cdad74c3',
  attributeName: undefined,
  changeType: 'created'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'ee7df12d-cbda-4770-9f52-aaa9f049e1d4',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: 'ee7df12d-cbda-4770-9f52-aaa9f049e1d4',
  attributeName: undefined,
  changeType: 'create'
}
2025-06-15T07:29:46.353Z - PUT /api/documents/f1ca2191-7951-4c16-b7b7-4256cdad74c3/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità f1ca2191-7951-4c16-b7b7-4256cdad74c3
✅ ModuleInstance ee7df12d-cbda-4770-9f52-aaa9f049e1d4 aggiunto al documento f1ca2191-7951-4c16-b7b7-4256cdad74c3 con ordine 1
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'f1ca2191-7951-4c16-b7b7-4256cdad74c3',
  targetEntityId: 'ee7df12d-cbda-4770-9f52-aaa9f049e1d4',
  changeType: 'created'
}
2025-06-15T07:29:47.408Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Production Notes',
  templateModuleId: 'notes-board',
  targetEntityType: 'Note',
  targetEntityId: 'demo-note-1749972587405',
  description: 'Demo Production Notes',
  createdAt: '2025-06-15T07:29:47.409Z',
  updatedAt: '2025-06-15T07:29:47.409Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Production Notes',
  templateModuleId: 'notes-board',
  targetEntityType: 'Note',
  targetEntityId: 'demo-note-1749972587405',
  description: 'Demo Production Notes',
  createdAt: '2025-06-15T07:29:47.409Z',
  updatedAt: '2025-06-15T07:29:47.409Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'demo-note-1749972587405',
  createdAt: '2025-06-15T07:29:47.409Z',
  instanceName: 'Production Notes',
  targetEntityType: 'Note',
  modifiedAt: '2025-06-15T07:29:47.410Z',
  entityType: 'ModuleInstance',
  description: 'Demo Production Notes',
  id: '1af6b00b-e5e4-4d96-b3cd-9c7d447060a3',
  version: 1,
  updatedAt: '2025-06-15T07:29:47.409Z'
}
✅ Entità creata: 1af6b00b-e5e4-4d96-b3cd-9c7d447060a3 (tipo: ModuleInstance)
2025-06-15T07:29:47.436Z - PUT /api/documents/f1ca2191-7951-4c16-b7b7-4256cdad74c3/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '1af6b00b-e5e4-4d96-b3cd-9c7d447060a3',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: '1af6b00b-e5e4-4d96-b3cd-9c7d447060a3',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità f1ca2191-7951-4c16-b7b7-4256cdad74c3
✅ ModuleInstance 1af6b00b-e5e4-4d96-b3cd-9c7d447060a3 aggiunto al documento f1ca2191-7951-4c16-b7b7-4256cdad74c3 con ordine 2
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'f1ca2191-7951-4c16-b7b7-4256cdad74c3',
  targetEntityId: '1af6b00b-e5e4-4d96-b3cd-9c7d447060a3',
  changeType: 'created'
}
2025-06-15T07:29:48.487Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Shooting Schedule',
  templateModuleId: 'timeline',
  targetEntityType: 'Event',
  targetEntityId: 'demo-event-1749972588482',
  description: 'Demo Shooting Schedule',
  createdAt: '2025-06-15T07:29:48.487Z',
  updatedAt: '2025-06-15T07:29:48.487Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Shooting Schedule',
  templateModuleId: 'timeline',
  targetEntityType: 'Event',
  targetEntityId: 'demo-event-1749972588482',
  description: 'Demo Shooting Schedule',
  createdAt: '2025-06-15T07:29:48.487Z',
  updatedAt: '2025-06-15T07:29:48.487Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'timeline',
  targetEntityId: 'demo-event-1749972588482',
  createdAt: '2025-06-15T07:29:48.487Z',
  instanceName: 'Shooting Schedule',
  targetEntityType: 'Event',
  modifiedAt: '2025-06-15T07:29:48.488Z',
  entityType: 'ModuleInstance',
  description: 'Demo Shooting Schedule',
  id: 'e58d448a-e2c2-4fd9-bb60-57dc50b879f8',
  version: 1,
  updatedAt: '2025-06-15T07:29:48.487Z'
}
✅ Entità creata: e58d448a-e2c2-4fd9-bb60-57dc50b879f8 (tipo: ModuleInstance)
2025-06-15T07:29:48.513Z - PUT /api/documents/f1ca2191-7951-4c16-b7b7-4256cdad74c3/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'e58d448a-e2c2-4fd9-bb60-57dc50b879f8',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: 'e58d448a-e2c2-4fd9-bb60-57dc50b879f8',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità f1ca2191-7951-4c16-b7b7-4256cdad74c3
✅ ModuleInstance e58d448a-e2c2-4fd9-bb60-57dc50b879f8 aggiunto al documento f1ca2191-7951-4c16-b7b7-4256cdad74c3 con ordine 3
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'f1ca2191-7951-4c16-b7b7-4256cdad74c3',
  targetEntityId: 'e58d448a-e2c2-4fd9-bb60-57dc50b879f8',
  changeType: 'created'
}
2025-06-15T07:29:49.568Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Scene Checklist',
  templateModuleId: 'task-tracker',
  targetEntityType: 'Task',
  targetEntityId: 'demo-task-1749972589561',
  description: 'Demo Scene Checklist',
  createdAt: '2025-06-15T07:29:49.569Z',
  updatedAt: '2025-06-15T07:29:49.569Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Scene Checklist',
  templateModuleId: 'task-tracker',
  targetEntityType: 'Task',
  targetEntityId: 'demo-task-1749972589561',
  description: 'Demo Scene Checklist',
  createdAt: '2025-06-15T07:29:49.569Z',
  updatedAt: '2025-06-15T07:29:49.569Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'task-tracker',
  targetEntityId: 'demo-task-1749972589561',
  createdAt: '2025-06-15T07:29:49.569Z',
  instanceName: 'Scene Checklist',
  targetEntityType: 'Task',
  modifiedAt: '2025-06-15T07:29:49.569Z',
  entityType: 'ModuleInstance',
  description: 'Demo Scene Checklist',
  id: '75ea8151-312a-45dc-8ba1-06acb6c825e1',
  version: 1,
  updatedAt: '2025-06-15T07:29:49.569Z'
}
✅ Entità creata: 75ea8151-312a-45dc-8ba1-06acb6c825e1 (tipo: ModuleInstance)
2025-06-15T07:29:49.596Z - PUT /api/documents/f1ca2191-7951-4c16-b7b7-4256cdad74c3/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '75ea8151-312a-45dc-8ba1-06acb6c825e1',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: '75ea8151-312a-45dc-8ba1-06acb6c825e1',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità f1ca2191-7951-4c16-b7b7-4256cdad74c3
✅ ModuleInstance 75ea8151-312a-45dc-8ba1-06acb6c825e1 aggiunto al documento f1ca2191-7951-4c16-b7b7-4256cdad74c3 con ordine 4
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'f1ca2191-7951-4c16-b7b7-4256cdad74c3',
  targetEntityId: '75ea8151-312a-45dc-8ba1-06acb6c825e1',
  changeType: 'created'
}
2025-06-15T07:29:56.648Z - GET /api/documents/b190d32b-d095-4f92-aedd-b2f08cf1186c
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: b190d32b-d095-4f92-aedd-b2f08cf1186c con 0 moduli
2025-06-15T07:29:59.302Z - GET /api/documents/545540f6-d755-4518-95cf-ff55293b31e0
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:09:19.431Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:09:19.430Z"}',
  modifiedAt: '2025-06-15T01:09:19.957Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Descrizione aggiornata via WebSocket test',
  id: '545540f6-d755-4518-95cf-ff55293b31e0',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 545540f6-d755-4518-95cf-ff55293b31e0 con 0 moduli
2025-06-15T07:29:59.843Z - GET /api/documents/f44579c5-253e-43e0-8032-b7b699dba051
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:09:25.221Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:09:25.221Z"}',
  modifiedAt: '2025-06-15T01:09:25.221Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'f44579c5-253e-43e0-8032-b7b699dba051',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: f44579c5-253e-43e0-8032-b7b699dba051 con 0 moduli
2025-06-15T07:30:00.354Z - GET /api/documents/bc3c6513-7894-4bd0-9021-f6d4130efa25
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:10:41.554Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:10:41.546Z"}',
  modifiedAt: '2025-06-15T01:10:41.688Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'bc3c6513-7894-4bd0-9021-f6d4130efa25',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: bc3c6513-7894-4bd0-9021-f6d4130efa25 con 3 moduli
2025-06-15T07:30:08.528Z - GET /api/documents/f44579c5-253e-43e0-8032-b7b699dba051
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: f44579c5-253e-43e0-8032-b7b699dba051 con 0 moduli
2025-06-15T07:30:09.341Z - GET /api/documents/5ed54fd2-e3c5-4ff9-8572-f3f6c5fbceaf
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"gridSize":16,"cellHeight":80,"margin":[15,15],"modules":{"test-module-1":{"x":0,"y":0,"w":4,"h":3,"lastModified":1749949847291}}}',
  createdAt: '2025-06-15T01:10:47.270Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:10:47.266Z"}',
  modifiedAt: '2025-06-15T01:10:47.311Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '5ed54fd2-e3c5-4ff9-8572-f3f6c5fbceaf',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 5ed54fd2-e3c5-4ff9-8572-f3f6c5fbceaf con 0 moduli
2025-06-15T07:30:10.469Z - GET /api/documents/7da69d50-5097-4554-88c5-790b32534647
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:10:47.343Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:10:47.341Z"}',
  modifiedAt: '2025-06-15T01:10:47.548Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '7da69d50-5097-4554-88c5-790b32534647',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7da69d50-5097-4554-88c5-790b32534647 con 3 moduli
2025-06-15T07:30:18.659Z - GET /api/documents/f740a156-0429-47e6-b46d-c42c7ea844e9
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:09:25.072Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:09:25.070Z"}',
  modifiedAt: '2025-06-15T01:09:25.199Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: 'f740a156-0429-47e6-b46d-c42c7ea844e9',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: f740a156-0429-47e6-b46d-c42c7ea844e9 con 3 moduli
2025-06-15T07:30:24.362Z - PUT /api/documents/f740a156-0429-47e6-b46d-c42c7ea844e9/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità f740a156-0429-47e6-b46d-c42c7ea844e9
✅ ModuleInstance 0c35791a-506e-449a-8b56-0de70c6d9360 aggiornato nel documento f740a156-0429-47e6-b46d-c42c7ea844e9
2025-06-15T07:30:24.409Z - GET /api/documents/f740a156-0429-47e6-b46d-c42c7ea844e9
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'f740a156-0429-47e6-b46d-c42c7ea844e9',
  targetEntityId: '0c35791a-506e-449a-8b56-0de70c6d9360',
  changeType: 'updated'
}
✅ CompositeDocument recuperato: f740a156-0429-47e6-b46d-c42c7ea844e9 con 3 moduli
2025-06-15T07:30:30.006Z - PUT /api/documents/f740a156-0429-47e6-b46d-c42c7ea844e9/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                RETURN r, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance {id: $moduleId})
                SET r.position = $position,
                    r.size = $size,
                    r.collapsed = $collapsed,
                    r.config = $config
                RETURN r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità f740a156-0429-47e6-b46d-c42c7ea844e9
✅ ModuleInstance 952721df-040f-49f3-a23d-833b5feb5428 aggiornato nel documento f740a156-0429-47e6-b46d-c42c7ea844e9
2025-06-15T07:30:30.045Z - GET /api/documents/f740a156-0429-47e6-b46d-c42c7ea844e9
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: f740a156-0429-47e6-b46d-c42c7ea844e9 con 3 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: 'f740a156-0429-47e6-b46d-c42c7ea844e9',
  targetEntityId: '952721df-040f-49f3-a23d-833b5feb5428',
  changeType: 'updated'
}
Client WebSocket disconnesso
2025-06-15T07:30:44.981Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
Nuovo client WebSocket connesso
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:30:45.957Z - GET /api/documents/f740a156-0429-47e6-b46d-c42c7ea844e9
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: f740a156-0429-47e6-b46d-c42c7ea844e9 con 3 moduli
2025-06-15T07:30:48.765Z - GET /api/documents/bc3c6513-7894-4bd0-9021-f6d4130efa25
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: bc3c6513-7894-4bd0-9021-f6d4130efa25 con 3 moduli
2025-06-15T07:30:50.923Z - GET /api/documents/7da69d50-5097-4554-88c5-790b32534647
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7da69d50-5097-4554-88c5-790b32534647 con 3 moduli
Client WebSocket disconnesso
Client WebSocket disconnesso
Nuovo client WebSocket connesso
2025-06-15T07:31:10.888Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:31:13.142Z - GET /api/documents/bc3c6513-7894-4bd0-9021-f6d4130efa25
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: bc3c6513-7894-4bd0-9021-f6d4130efa25 con 3 moduli
2025-06-15T07:31:14.569Z - GET /api/documents/7da69d50-5097-4554-88c5-790b32534647
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7da69d50-5097-4554-88c5-790b32534647 con 3 moduli
2025-06-15T07:31:19.194Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Production Notes',
  templateModuleId: 'notes-board',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972679189',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:31:19.194Z',
  updatedAt: '2025-06-15T07:31:19.194Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Production Notes',
  templateModuleId: 'notes-board',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972679189',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:31:19.194Z',
  updatedAt: '2025-06-15T07:31:19.194Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'demo-entity-1749972679189',
  createdAt: '2025-06-15T07:31:19.194Z',
  instanceName: 'Production Notes',
  targetEntityType: 'Entity',
  modifiedAt: '2025-06-15T07:31:19.194Z',
  entityType: 'ModuleInstance',
  description: 'Module created from complete demo for Entity',
  id: '9138bae8-34d1-461c-9884-ddeba757ef74',
  version: 1,
  updatedAt: '2025-06-15T07:31:19.194Z'
}
✅ Entità creata: 9138bae8-34d1-461c-9884-ddeba757ef74 (tipo: ModuleInstance)
2025-06-15T07:31:19.226Z - PUT /api/documents/7da69d50-5097-4554-88c5-790b32534647/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
[AttributeSpace] Processando batch di 2 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '9138bae8-34d1-461c-9884-ddeba757ef74',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '9138bae8-34d1-461c-9884-ddeba757ef74',
  attributeName: undefined,
  changeType: 'create'
}
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '7da69d50-5097-4554-88c5-790b32534647',
  targetEntityId: '9138bae8-34d1-461c-9884-ddeba757ef74',
  changeType: 'created'
}
✅ Attributo modifiedAt aggiornato per entità 7da69d50-5097-4554-88c5-790b32534647
✅ ModuleInstance 9138bae8-34d1-461c-9884-ddeba757ef74 aggiunto al documento 7da69d50-5097-4554-88c5-790b32534647 con ordine 4
2025-06-15T07:31:19.265Z - GET /api/documents/7da69d50-5097-4554-88c5-790b32534647
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 7da69d50-5097-4554-88c5-790b32534647 con 4 moduli
2025-06-15T07:31:29.495Z - GET /.well-known/appspecific/com.chrome.devtools.json
2025-06-15T07:31:31.069Z - GET /api/documents/961f09e3-dbea-4d67-9a7e-2f45fee59550
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T01:11:10.573Z',
  metadata: '{"testRun":true,"timestamp":"2025-06-15T01:11:10.572Z"}',
  modifiedAt: '2025-06-15T01:11:10.673Z',
  entityType: 'CompositeDocument',
  name: 'Test Workspace Document',
  description: 'Documento di test per workspace Svelte',
  id: '961f09e3-dbea-4d67-9a7e-2f45fee59550',
  ownerId: 'test-user-123',
  status: 'draft'
}
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 961f09e3-dbea-4d67-9a7e-2f45fee59550 con 0 moduli
2025-06-15T07:31:33.938Z - GET /api/documents/971ce7ba-d558-4ab2-8685-d78fd15bae72
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 971ce7ba-d558-4ab2-8685-d78fd15bae72 con 3 moduli
2025-06-15T07:32:10.370Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'prova 1',
  description: '',
  status: 'draft',
  projectId: '123',
  ownerId: 'demo-user-1749972730366',
  metadata: { createdFrom: 'complete-demo', demoMode: true }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'prova 1',
  description: '',
  projectId: '123',
  ownerId: 'demo-user-1749972730366',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { createdFrom: 'complete-demo', demoMode: true },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:32:10.370Z',
  metadata: '{"createdFrom":"complete-demo","demoMode":true}',
  modifiedAt: '2025-06-15T07:32:10.370Z',
  entityType: 'CompositeDocument',
  name: 'prova 1',
  description: '',
  id: 'e9f9701f-8353-4de0-80a0-009959764499',
  ownerId: 'demo-user-1749972730366',
  projectId: '123',
  status: 'draft'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
✅ Entità trovata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:32:10.370Z',
  metadata: '{"createdFrom":"complete-demo","demoMode":true}',
  entityType: 'CompositeDocument',
  modifiedAt: '2025-06-15T07:32:10.370Z',
  name: 'prova 1',
  description: '',
  id: 'e9f9701f-8353-4de0-80a0-009959764499',
  ownerId: 'demo-user-1749972730366',
  projectId: '123',
  status: 'draft'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $id})
            RETURN e
        
ℹ️ Entità non trovata per ID: 123
❌ Errore createRelation: Entità target non trovata: 123
❌ Errore createEntity: Entità target non trovata: 123
❌ Errore creazione CompositeDocument: Entità target non trovata: 123
❌ Errore creazione documento: Error: Entità target non trovata: 123
    at RelationEngine.createRelation (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/relationEngine.js:36:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async EntityEngine.createReferenceRelations (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/entityEngine_evolved.js:540:17)
    at async EntityEngine.createEntity (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/core/entityEngine_evolved.js:80:17)
    at async DocumentService.createDocument (/Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/services/DocumentService.js:61:37)
    at async /Users/hlessio/Desktop/Lavoro/SSOT-3005 claude code/src/backend/server.js:1820:37
2025-06-15T07:32:14.721Z - POST /api/documents
📄 [Document] Creazione nuovo CompositeDocument: {
  name: 'prova 1',
  description: '',
  status: 'draft',
  projectId: null,
  ownerId: 'demo-user-1749972734713',
  metadata: { createdFrom: 'complete-demo', demoMode: true }
}
🔧 Creazione entità tipo CompositeDocument {
  name: 'prova 1',
  description: '',
  projectId: null,
  ownerId: 'demo-user-1749972734713',
  layout: { type: 'grid', columns: 2, modules: [] },
  metadata: { createdFrom: 'complete-demo', demoMode: true },
  status: 'draft'
}
🔄 Schema aggiornato in cache per CompositeDocument
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`CompositeDocument`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`name` = $attr0, e.`description` = $attr1, e.`projectId` = $attr2, e.`ownerId` = $attr3, e.`layout` = $attr4, e.`metadata` = $attr5, e.`status` = $attr6
            RETURN e
        
✅ Entità creata: {
  layout: '{"type":"grid","columns":2,"modules":[]}',
  createdAt: '2025-06-15T07:32:14.725Z',
  metadata: '{"createdFrom":"complete-demo","demoMode":true}',
  modifiedAt: '2025-06-15T07:32:14.725Z',
  entityType: 'CompositeDocument',
  name: 'prova 1',
  description: '',
  id: '3174a4a4-ddd2-4149-8117-6d5b8e357b9e',
  ownerId: 'demo-user-1749972734713',
  status: 'draft'
}
✅ Entità creata: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e (tipo: CompositeDocument)
✅ CompositeDocument creato: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e - prova 1
2025-06-15T07:32:14.792Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '3174a4a4-ddd2-4149-8117-6d5b8e357b9e',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: '3174a4a4-ddd2-4149-8117-6d5b8e357b9e',
  attributeName: undefined,
  changeType: 'created'
}
2025-06-15T07:32:19.165Z - GET /api/documents/b190d32b-d095-4f92-aedd-b2f08cf1186c
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: b190d32b-d095-4f92-aedd-b2f08cf1186c con 0 moduli
2025-06-15T07:32:20.350Z - GET /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con 0 moduli
2025-06-15T07:32:32.087Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Data Table',
  templateModuleId: 'data-table',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972752080',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:32:32.092Z',
  updatedAt: '2025-06-15T07:32:32.092Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Data Table',
  templateModuleId: 'data-table',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972752080',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:32:32.092Z',
  updatedAt: '2025-06-15T07:32:32.092Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'data-table',
  targetEntityId: 'demo-entity-1749972752080',
  createdAt: '2025-06-15T07:32:32.092Z',
  instanceName: 'Data Table',
  targetEntityType: 'Entity',
  modifiedAt: '2025-06-15T07:32:32.096Z',
  entityType: 'ModuleInstance',
  description: 'Module created from complete demo for Entity',
  id: 'a49b7f67-c51a-4638-918c-35d2a23224a7',
  version: 1,
  updatedAt: '2025-06-15T07:32:32.092Z'
}
✅ Entità creata: a49b7f67-c51a-4638-918c-35d2a23224a7 (tipo: ModuleInstance)
2025-06-15T07:32:32.158Z - PUT /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: 'a49b7f67-c51a-4638-918c-35d2a23224a7',
  attributeName: undefined
}
🔄 Notifica entità propagata a 1 client: {
  entityId: 'a49b7f67-c51a-4638-918c-35d2a23224a7',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 3174a4a4-ddd2-4149-8117-6d5b8e357b9e
✅ ModuleInstance a49b7f67-c51a-4638-918c-35d2a23224a7 aggiunto al documento 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con ordine 1
2025-06-15T07:32:32.199Z - GET /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con 1 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 1 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '3174a4a4-ddd2-4149-8117-6d5b8e357b9e',
  targetEntityId: 'a49b7f67-c51a-4638-918c-35d2a23224a7',
  changeType: 'created'
}
Nuovo client WebSocket connesso
2025-06-15T07:32:34.696Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:32:35.666Z - GET /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con 1 moduli
2025-06-15T07:32:37.646Z - GET /api/documents/e9f9701f-8353-4de0-80a0-009959764499
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: e9f9701f-8353-4de0-80a0-009959764499 con 0 moduli
2025-06-15T07:32:38.721Z - GET /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con 1 moduli
2025-06-15T07:32:46.815Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Task Tracker',
  templateModuleId: 'task-tracker',
  targetEntityType: 'Task',
  targetEntityId: 'demo-entity-1749972766812',
  description: 'Module created from complete demo for Task',
  createdAt: '2025-06-15T07:32:46.816Z',
  updatedAt: '2025-06-15T07:32:46.816Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Task Tracker',
  templateModuleId: 'task-tracker',
  targetEntityType: 'Task',
  targetEntityId: 'demo-entity-1749972766812',
  description: 'Module created from complete demo for Task',
  createdAt: '2025-06-15T07:32:46.816Z',
  updatedAt: '2025-06-15T07:32:46.816Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'task-tracker',
  targetEntityId: 'demo-entity-1749972766812',
  createdAt: '2025-06-15T07:32:46.816Z',
  instanceName: 'Task Tracker',
  targetEntityType: 'Task',
  modifiedAt: '2025-06-15T07:32:46.816Z',
  entityType: 'ModuleInstance',
  description: 'Module created from complete demo for Task',
  id: '372e3a17-e0b6-4e0e-93c0-7e560f8737ae',
  version: 1,
  updatedAt: '2025-06-15T07:32:46.816Z'
}
✅ Entità creata: 372e3a17-e0b6-4e0e-93c0-7e560f8737ae (tipo: ModuleInstance)
2025-06-15T07:32:46.854Z - PUT /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '372e3a17-e0b6-4e0e-93c0-7e560f8737ae',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: '372e3a17-e0b6-4e0e-93c0-7e560f8737ae',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 3174a4a4-ddd2-4149-8117-6d5b8e357b9e
✅ ModuleInstance 372e3a17-e0b6-4e0e-93c0-7e560f8737ae aggiunto al documento 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con ordine 2
2025-06-15T07:32:46.912Z - GET /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con 2 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '3174a4a4-ddd2-4149-8117-6d5b8e357b9e',
  targetEntityId: '372e3a17-e0b6-4e0e-93c0-7e560f8737ae',
  changeType: 'created'
}
Client WebSocket disconnesso
2025-06-15T07:32:54.287Z - GET /.well-known/appspecific/com.chrome.devtools.json
Nuovo client WebSocket connesso
2025-06-15T07:32:54.313Z - GET /api/documents
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument)
                OPTIONAL MATCH (d)-[r:CONTAINS_MODULE]->()
                WITH d, COUNT(r) as moduleCount
                RETURN d, moduleCount
                ORDER BY d.modifiedAt DESC
                SKIP 0
                LIMIT 50
            
✅ Trovati 50 documenti con filtri: { projectId: undefined, ownerId: undefined, status: undefined }
2025-06-15T07:32:55.395Z - GET /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con 2 moduli
2025-06-15T07:33:38.909Z - POST /api/module-instances
📝 [ModuleInstance] Creando istanza: {
  instanceName: 'Production Notes',
  templateModuleId: 'notes-board',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972818905',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:33:38.910Z',
  updatedAt: '2025-06-15T07:33:38.910Z',
  version: 1
}
🔧 Creazione entità tipo ModuleInstance {
  instanceName: 'Production Notes',
  templateModuleId: 'notes-board',
  targetEntityType: 'Entity',
  targetEntityId: 'demo-entity-1749972818905',
  description: 'Module created from complete demo for Entity',
  createdAt: '2025-06-15T07:33:38.910Z',
  updatedAt: '2025-06-15T07:33:38.910Z',
  version: 1
}
🔄 Schema aggiornato in cache per ModuleInstance
✅ Applicati 0 valori di default
🔍 Esecuzione query: 
            CREATE (e:Entity:`ModuleInstance`)
            SET e.id = $id, e.entityType = $entityType, e.createdAt = $createdAt, e.modifiedAt = $modifiedAt, e.`instanceName` = $attr0, e.`templateModuleId` = $attr1, e.`targetEntityType` = $attr2, e.`targetEntityId` = $attr3, e.`description` = $attr4, e.`createdAt` = $attr5, e.`updatedAt` = $attr6, e.`version` = $attr7
            RETURN e
        
✅ Entità creata: {
  templateModuleId: 'notes-board',
  targetEntityId: 'demo-entity-1749972818905',
  createdAt: '2025-06-15T07:33:38.910Z',
  instanceName: 'Production Notes',
  targetEntityType: 'Entity',
  modifiedAt: '2025-06-15T07:33:38.910Z',
  entityType: 'ModuleInstance',
  description: 'Module created from complete demo for Entity',
  id: '513afed3-0068-4472-9fc1-b2942ecafead',
  version: 1,
  updatedAt: '2025-06-15T07:33:38.910Z'
}
✅ Entità creata: 513afed3-0068-4472-9fc1-b2942ecafead (tipo: ModuleInstance)
2025-06-15T07:33:38.935Z - PUT /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e/modules
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                RETURN d, m
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->()
                RETURN MAX(r.order) as maxOrder
            
🔍 Esecuzione query: 
                MATCH (d:CompositeDocument {id: $documentId})
                MATCH (m:ModuleInstance {id: $moduleId})
                CREATE (d)-[r:CONTAINS_MODULE {
                    id: $relationId,
                    order: $order,
                    position: $position,
                    size: $size,
                    collapsed: $collapsed,
                    config: $config,
                    addedAt: $addedAt
                }]->(m)
                RETURN d, r, m
            
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: {
  type: 'entity',
  entityId: '513afed3-0068-4472-9fc1-b2942ecafead',
  attributeName: undefined
}
🔄 Notifica entità propagata a 2 client: {
  entityId: '513afed3-0068-4472-9fc1-b2942ecafead',
  attributeName: undefined,
  changeType: 'create'
}
🔍 Esecuzione query: 
            MATCH (e:Entity {id: $entityId})
            SET e.`modifiedAt` = $value, e.modifiedAt = $modifiedAt
            RETURN e
        
✅ Attributo modifiedAt aggiornato per entità 3174a4a4-ddd2-4149-8117-6d5b8e357b9e
✅ ModuleInstance 513afed3-0068-4472-9fc1-b2942ecafead aggiunto al documento 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con ordine 3
2025-06-15T07:33:38.985Z - GET /api/documents/3174a4a4-ddd2-4149-8117-6d5b8e357b9e
🔍 Esecuzione query: 
                    MATCH (d:CompositeDocument {id: $documentId})-[r:CONTAINS_MODULE]->(m:ModuleInstance)
                    RETURN m, r, properties(r) as relationProps
                    ORDER BY r.order ASC
                
✅ CompositeDocument recuperato: 3174a4a4-ddd2-4149-8117-6d5b8e357b9e con 3 moduli
[AttributeSpace] Processando batch di 1 notifiche
[AttributeSpace] Trovate 1 sottoscrizioni corrispondenti per: { type: 'relation', entityId: undefined, attributeName: undefined }
🔗 Notifica relazione propagata a 2 client: {
  relationType: 'CONTAINS_MODULE',
  sourceEntityId: '3174a4a4-ddd2-4149-8117-6d5b8e357b9e',
  targetEntityId: '513afed3-0068-4472-9fc1-b2942ecafead',
  changeType: 'created'
}
Client WebSocket disconnesso
