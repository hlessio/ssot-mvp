{"version":3,"file":"bundle.js","sources":["../../../node_modules/esm-env/false.js","../../../node_modules/svelte/src/internal/shared/utils.js","../../../node_modules/svelte/src/internal/client/constants.js","../../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../../node_modules/svelte/src/internal/flags/index.js","../../../node_modules/svelte/src/constants.js","../../../node_modules/svelte/src/internal/shared/errors.js","../../../node_modules/svelte/src/internal/client/context.js","../../../node_modules/svelte/src/internal/client/proxy.js","../../../node_modules/svelte/src/internal/client/errors.js","../../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../../node_modules/svelte/src/internal/client/runtime.js","../../../node_modules/svelte/src/internal/client/dom/operations.js","../../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../../node_modules/svelte/src/internal/client/dom/task.js","../../../node_modules/svelte/src/internal/client/error-handling.js","../../../node_modules/svelte/src/utils.js","../../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../../node_modules/svelte/src/internal/client/dom/template.js","../../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../../node_modules/svelte/src/internal/client/render.js","../../../node_modules/svelte/src/internal/client/dom/blocks/if.js","../../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../../node_modules/svelte/src/internal/client/dom/hydration.js","../../../node_modules/svelte/src/internal/shared/attributes.js","../../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../../node_modules/svelte/src/internal/client/dom/elements/bindings/this.js","../../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../../../node_modules/svelte/src/internal/client/dom/legacy/misc.js","../../../node_modules/svelte/src/store/shared/index.js","../../../node_modules/svelte/src/internal/client/reactivity/store.js","../../../node_modules/svelte/src/internal/client/reactivity/props.js","../../../node_modules/svelte/src/index-client.js","../../../node_modules/svelte/src/internal/disclose-version.js","../../../node_modules/svelte/src/version.js","../svelte/components/SmartInput.svelte","../svelte/stores/moduleStore.js","../svelte/components/DynamicModuleGrid.svelte","../svelte/components/ModuleHeader.svelte","../svelte/stores/projectStore.js","../svelte/main.js","../svelte/App.svelte"],"sourcesContent":["export default false;\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\nexport var is_extensible = Object.isExtensible;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n\n/**\n * When encountering a situation like `let [a, b, c] = $derived(blah())`,\n * we need to stash an intermediate value that `a`, `b`, and `c` derive\n * from, in case it's an iterable\n * @template T\n * @param {ArrayLike<T> | Iterable<T>} value\n * @param {number} [n]\n * @returns {Array<T>}\n */\nexport function to_array(value, n) {\n\t// return arrays unchanged\n\tif (Array.isArray(value)) {\n\t\treturn value;\n\t}\n\n\t// if value is not iterable, or `n` is unspecified (indicates a rest\n\t// element, which means we're not concerned about unbounded iterables)\n\t// convert to an array with `Array.from`\n\tif (n === undefined || !(Symbol.iterator in value)) {\n\t\treturn Array.from(value);\n\t}\n\n\t// otherwise, populate an array with `n` values\n\n\t/** @type {T[]} */\n\tconst array = [];\n\n\tfor (const element of value) {\n\t\tarray.push(element);\n\t\tif (array.length === n) break;\n\t}\n\n\treturn array;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\nexport const EFFECT_IS_UPDATING = 1 << 21;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\nexport const TEMPLATE_USE_SVG = 1 << 2;\nexport const TEMPLATE_USE_MATHML = 1 << 3;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n\nexport const ATTACHMENT_KEY = '@attach';\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * A snippet function was passed invalid arguments. Snippets should only be instantiated via `{@render ...}`\n * @returns {never}\n */\nexport function invalid_snippet_arguments() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet_arguments\\nA snippet function was passed invalid arguments. Snippets should only be instantiated via \\`{@render ...}\\`\\nhttps://svelte.dev/e/invalid_snippet_arguments`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet_arguments`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * Attempted to render a snippet without a `{@render}` block. This would cause the snippet code to be stringified instead of its content being rendered to the DOM. To fix this, change `{snippet}` to `{@render snippet()}`.\n * @returns {never}\n */\nexport function snippet_without_render_tag() {\n\tif (DEV) {\n\t\tconst error = new Error(`snippet_without_render_tag\\nAttempted to render a snippet without a \\`{@render}\\` block. This would cause the snippet code to be stringified instead of its content being rendered to the DOM. To fix this, change \\`{snippet}\\` to \\`{@render snippet()}\\`.\\nhttps://svelte.dev/e/snippet_without_render_tag`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/snippet_without_render_tag`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from './runtime.js';\nimport { effect, teardown } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tvar ctx = (component_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\td: false,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t});\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tteardown(() => {\n\t\t/** @type {ComponentContext} */ (ctx).d = true;\n\t});\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","/** @import { Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect, active_reaction, set_active_reaction } from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { state as source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL } from '#client/constants';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @returns {T}\n */\nexport function proxy(value) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tvar stack = DEV && tracing_mode_flag ? get_stack('CreatedAt') : null;\n\tvar reaction = active_reaction;\n\n\t/**\n\t * @template T\n\t * @param {() => T} fn\n\t */\n\tvar with_parent = (fn) => {\n\t\tvar previous_reaction = active_reaction;\n\t\tset_active_reaction(reaction);\n\n\t\t/** @type {T} */\n\t\tvar result = fn();\n\n\t\tset_active_reaction(previous_reaction);\n\t\treturn result;\n\t};\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = with_parent(() => source(descriptor.value, stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(descriptor.value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\tprop,\n\t\t\t\t\t\twith_parent(() => source(UNINITIALIZED, stack))\n\t\t\t\t\t);\n\t\t\t\t\tupdate_version(version);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = with_parent(() => source(proxy(exists ? target[prop] : UNINITIALIZED), stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = with_parent(() => source(has ? proxy(target[prop]) : UNINITIALIZED, stack));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = with_parent(() => source(undefined, stack));\n\t\t\t\t\tset(\n\t\t\t\t\t\ts,\n\t\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t\t);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\ttry {\n\t\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\t\treturn value[STATE_SYMBOL];\n\t\t}\n\t} catch {\n\t\t// the above if check can throw an error if the value in question\n\t\t// is the contentWindow of an iframe on another domain, in which\n\t\t// case we want to just return the value (because it's definitely\n\t\t// not a proxied value) so we don't break any JavaScript interacting\n\t\t// with that iframe (such as various payment companies client side\n\t\t// JavaScript libraries interacting with their iframes on the same\n\t\t// domain)\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * Calling `%method%` on a component instance (of %component%) is no longer valid in Svelte 5\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\nCalling \\`${method}\\` on a component instance (of ${component}) is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '#client/constants';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tpush_reaction_value,\n\tis_destroying_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function user_derived(fn) {\n\tconst d = derived(fn);\n\n\tpush_reaction_value(d);\n\n\treturn d;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n\n\t// don't mark derived clean if we're reading it inside a\n\t// cleanup function, or it will cache a stale value\n\tif (is_destroying_effect) return;\n\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n}\n","/** @import { Derived, Effect, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\treaction_sources,\n\tcheck_dirtiness,\n\tuntracking,\n\tis_destroying_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '#client/constants';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\nimport { proxy } from '../proxy.js';\nimport { execute_derived } from './deriveds.js';\n\nexport let inspect_effects = new Set();\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\n// TODO rename this to `state` throughout the codebase\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function state(v, stack) {\n\tconst s = source(v, stack);\n\n\tpush_reaction_value(s);\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @param {boolean} [should_proxy]\n * @returns {V}\n */\nexport function set(source, value, should_proxy = false) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t!reaction_sources?.includes(source)\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tlet new_value = should_proxy ? proxy(value) : value;\n\n\treturn internal_set(source, new_value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tif ((source.f & DERIVED) !== 0) {\n\t\t\t// if we are assigning to a dirty derived we set it to clean/maybe dirty but we also eagerly execute it to track the dependencies\n\t\t\tif ((source.f & DIRTY) !== 0) {\n\t\t\t\texecute_derived(/** @type {Derived} */ (source));\n\t\t\t}\n\t\t\tset_signal_status(source, (source.f & UNOWNED) === 0 ? CLEAN : MAYBE_DIRTY);\n\t\t}\n\n\t\tsource.wv = increment_write_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\n\t\t\tfor (const effect of inspects) {\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t}\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tEFFECT_IS_UPDATING\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set, old_values } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\n\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { handle_error, invoke_error_boundary } from './error-handling.js';\n\nlet is_flushing = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_updating_effect = false;\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a reaction, reading and writing\n * them should not cause a re-run\n * @type {null | Source[]}\n */\nexport let reaction_sources = null;\n\n/** @param {Value} value */\nexport function push_reaction_value(value) {\n\tif (active_reaction !== null && active_reaction.f & EFFECT_IS_UPDATING) {\n\t\tif (reaction_sources === null) {\n\t\t\treaction_sources = [value];\n\t\t} else {\n\t\t\treaction_sources.push(value);\n\t\t}\n\t}\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\n\t\tif (reaction_sources?.includes(signal)) continue;\n\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/** @param {Reaction} reaction */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar previous_reaction_sources = reaction_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\treaction_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\treaction.f |= EFFECT_IS_UPDATING;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null && previous_reaction !== reaction) {\n\t\t\tread_version++;\n\n\t\t\tif (untracked_writes !== null) {\n\t\t\t\tif (previous_untracked_writes === null) {\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\n\t\t\t\t} else {\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t} catch (error) {\n\t\thandle_error(error);\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\treaction_sources = previous_reaction_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\n\t\treaction.f ^= EFFECT_IS_UPDATING;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t}\n\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t// if there's an effect available from when it was last scheduled\n\t\tif (last_scheduled_effect !== null) {\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tinvoke_error_boundary(error, last_scheduled_effect);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinvoke_error_boundary(error, last_scheduled_effect);\n\t\t\t}\n\t\t} else {\n\t\t\tif (DEV) {\n\t\t\t\tlog_effect_stack();\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction flush_queued_root_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tis_updating_effect = true;\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tvar root_effects = queued_root_effects;\n\t\t\tvar length = root_effects.length;\n\n\t\t\tqueued_root_effects = [];\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t\told_values.clear();\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tis_updating_effect = was_updating_effect;\n\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t// immediate effects.\n\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (!is_flushing) {\n\t\tis_flushing = true;\n\t\tqueueMicrotask(flush_queued_root_effects);\n\t}\n\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} root\n * @returns {Effect[]}\n */\nfunction process_effects(root) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\t/** @type {Effect | null} */\n\tvar effect = root;\n\n\twhile (effect !== null) {\n\t\tvar flags = effect.f;\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Effect | null} */\n\t\t\tvar child = effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\teffect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tvar parent = effect.parent;\n\t\teffect = effect.next;\n\n\t\twhile (effect === null && parent !== null) {\n\t\t\teffect = parent.next;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\treturn effects;\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tvar result;\n\n\tif (fn) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\n\t\tis_flushing = true;\n\t\tresult = fn();\n\t}\n\n\twhile (true) {\n\t\tflush_tasks();\n\n\t\tif (queued_root_effects.length === 0) {\n\t\t\treturn /** @type {T} */ (result);\n\t\t}\n\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (!reaction_sources?.includes(signal)) {\n\t\t\tvar deps = active_reaction.deps;\n\t\t\tif (signal.rv < read_version) {\n\t\t\t\tsignal.rv = read_version;\n\t\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\t\tskipped_deps++;\n\t\t\t\t} else if (new_deps === null) {\n\t\t\t\t\tnew_deps = [signal];\n\t\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t\t// we don't have duplicates\n\t\t\t\t\tnew_deps.push(signal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\tif (is_destroying_effect && old_values.has(signal)) {\n\t\treturn old_values.get(signal);\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nfunction capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor, is_extensible } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\tvar text_prototype = Text.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\tif (is_extensible(element_prototype)) {\n\t\t// the following assignments improve perf of lookups on DOM nodes\n\t\t// @ts-expect-error\n\t\telement_prototype.__click = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__className = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__attributes = null;\n\t\t// @ts-expect-error\n\t\telement_prototype.__style = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__e = undefined;\n\t}\n\n\tif (is_extensible(text_prototype)) {\n\t\t// @ts-expect-error\n\t\ttext_prototype.__t = undefined;\n\t}\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n\n/**\n *\n * @param {string} tag\n * @param {string} [namespace]\n * @param {string} [is]\n * @returns\n */\nexport function create_element(tag, namespace, is) {\n\tlet options = is ? { is } : undefined;\n\tif (namespace) {\n\t\treturn document.createElementNS(namespace, tag, options);\n\t}\n\treturn document.createElement(tag, options);\n}\n\nexport function create_fragment() {\n\treturn document.createDocumentFragment();\n}\n\n/**\n * @param {string} data\n * @returns\n */\nexport function create_comment(data = '') {\n\treturn document.createComment(data);\n}\n\n/**\n * @param {Element} element\n * @param {string} key\n * @param {string} value\n * @returns\n */\nexport function set_attribute(element, key, value = '') {\n\tif (key.startsWith('xlink:')) {\n\t\telement.setAttributeNS('http://www.w3.org/1999/xlink', key, value);\n\t\treturn;\n\t}\n\treturn element.setAttribute(key, value);\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '#client/constants';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tif (DEV) {\n\t\t// wrap the effect so that we can decorate stack trace with `in {expression}`\n\t\t// (TODO maybe there's a better approach?)\n\t\treturn render_effect(() => {\n\t\t\tvar outer = /** @type {Effect} */ (active_effect);\n\t\t\tvar inner = () => fn(...deriveds.map(get));\n\n\t\t\tdefine_property(outer.fn, 'name', { value: '{expression}' });\n\t\t\tdefine_property(inner, 'name', { value: '{expression}' });\n\n\t\t\tconst deriveds = thunks.map(d);\n\t\t\tblock(inner);\n\t\t});\n\t}\n\n\tconst deriveds = thunks.map(d);\n\treturn block(() => fn(...deriveds.map(get)));\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif (\n\t\t(remove_dom || (effect.f & HEAD_EFFECT) !== 0) &&\n\t\teffect.nodes_start !== null &&\n\t\teffect.nodes_end !== null\n\t) {\n\t\tremove_effect_dom(effect.nodes_start, /** @type {TemplateNode} */ (effect.nodes_end));\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n *\n * @param {TemplateNode | null} node\n * @param {TemplateNode} end\n */\nexport function remove_effect_dom(node, end) {\n\twhile (node !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\n/** @type {Array<() => void>} */\nlet micro_tasks = [];\n\n/** @type {Array<() => void>} */\nlet idle_tasks = [];\n\nfunction run_micro_tasks() {\n\tvar tasks = micro_tasks;\n\tmicro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction run_idle_tasks() {\n\tvar tasks = idle_tasks;\n\tidle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (micro_tasks.length === 0) {\n\t\tqueueMicrotask(run_micro_tasks);\n\t}\n\n\tmicro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (idle_tasks.length === 0) {\n\t\trequest_idle_callback(run_idle_tasks);\n\t}\n\n\tidle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (micro_tasks.length > 0) {\n\t\trun_micro_tasks();\n\t}\n\n\tif (idle_tasks.length > 0) {\n\t\trun_idle_tasks();\n\t}\n}\n","/** @import { Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../../constants.js';\nimport { is_firefox } from './dom/operations.js';\nimport { BOUNDARY_EFFECT, EFFECT_RAN } from './constants.js';\nimport { define_property } from '../shared/utils.js';\nimport { active_effect } from './runtime.js';\n\n/**\n * @param {unknown} error\n */\nexport function handle_error(error) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\n\tif (DEV && error instanceof Error) {\n\t\tadjust_error(error, effect);\n\t}\n\n\tif ((effect.f & EFFECT_RAN) === 0) {\n\t\t// if the error occurred while creating this subtree, we let it\n\t\t// bubble up until it hits a boundary that can handle it\n\t\tif ((effect.f & BOUNDARY_EFFECT) === 0) {\n\t\t\tthrow error;\n\t\t}\n\n\t\t// @ts-expect-error\n\t\teffect.fn(error);\n\t} else {\n\t\t// otherwise we bubble up the effect tree ourselves\n\t\tinvoke_error_boundary(error, effect);\n\t}\n}\n\n/**\n * @param {unknown} error\n * @param {Effect | null} effect\n */\nexport function invoke_error_boundary(error, effect) {\n\twhile (effect !== null) {\n\t\tif ((effect.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\teffect.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {}\n\t\t}\n\n\t\teffect = effect.parent;\n\t}\n\n\tthrow error;\n}\n\n/** @type {WeakSet<Error>} */\nconst adjusted_errors = new WeakSet();\n\n/**\n * Add useful information to the error message/stack in development\n * @param {Error} error\n * @param {Effect} effect\n */\nfunction adjust_error(error, effect) {\n\tif (adjusted_errors.has(error)) return;\n\tadjusted_errors.add(error);\n\n\tvar indent = is_firefox ? '  ' : '\\t';\n\tvar component_stack = `\\n${indent}in ${effect.fn?.name || '<unknown>'}`;\n\tvar context = effect.ctx;\n\n\twhile (context !== null) {\n\t\tcomponent_stack += `\\n${indent}in ${context.function?.[FILENAME].split('/').pop()}`;\n\t\tcontext = context.p;\n\t}\n\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack}\\n`\n\t});\n\n\tif (error.stack) {\n\t\t// Filter out internal modules\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: error.stack\n\t\t\t\t.split('\\n')\n\t\t\t\t.filter((line) => !line.includes('svelte/src/internal'))\n\t\t\t\t.join('\\n')\n\t\t});\n\t}\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nexport const STATE_CREATION_RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$derived',\n\t'$derived.by'\n]);\n\nconst RUNES = /** @type {const} */ ([\n\t...STATE_CREATION_RUNES,\n\t'$state.snapshot',\n\t'$props',\n\t'$props.id',\n\t'$bindable',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/** @typedef {RUNES[number]} RuneName */\n\n/**\n * @param {string} name\n * @returns {name is RuneName}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RuneName} */ (name));\n}\n\n/** @typedef {STATE_CREATION_RUNES[number]} StateCreationRuneName */\n\n/**\n * @param {string} name\n * @returns {name is StateCreationRuneName}\n */\nexport function is_state_creation_rune(name) {\n\treturn STATE_CREATION_RUNES.includes(/** @type {StateCreationRuneName} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @template {string | undefined} T\n * @param {T} location\n * @returns {T};\n */\nexport function sanitize_location(location) {\n\treturn /** @type {T} */ (location?.replace(/\\//g, '/\\u200b'));\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","import { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tdom.removeAttribute('onload');\n\tdom.removeAttribute('onerror');\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\tif (\n\t\tdom === document.body ||\n\t\t// @ts-ignore\n\t\tdom === window ||\n\t\t// @ts-ignore\n\t\tdom === document ||\n\t\t// Firefox has quirky behavior, it can happen that we still get \"canplay\" events when the element is already removed\n\t\tdom instanceof HTMLMediaElement\n\t) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n","/** @import { Effect, TemplateNode } from '#client' */\n/** @import { TemplateStructure } from './types' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport {\n\tcreate_text,\n\tget_first_child,\n\tis_firefox,\n\tcreate_element,\n\tcreate_fragment,\n\tcreate_comment,\n\tset_attribute\n} from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport {\n\tNAMESPACE_MATHML,\n\tNAMESPACE_SVG,\n\tTEMPLATE_FRAGMENT,\n\tTEMPLATE_USE_IMPORT_NODE,\n\tTEMPLATE_USE_MATHML,\n\tTEMPLATE_USE_SVG\n} from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_html(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction from_namespace(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_svg(content, flags) {\n\treturn from_namespace(content, flags, 'svg');\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_mathml(content, flags) {\n\treturn from_namespace(content, flags, 'math');\n}\n\n/**\n * @param {TemplateStructure[]} structure\n * @param {NAMESPACE_SVG | NAMESPACE_MATHML | undefined} [ns]\n */\nfunction fragment_from_tree(structure, ns) {\n\tvar fragment = create_fragment();\n\n\tfor (var item of structure) {\n\t\tif (typeof item === 'string') {\n\t\t\tfragment.append(create_text(item));\n\t\t\tcontinue;\n\t\t}\n\n\t\t// if `preserveComments === true`, comments are represented as `['// <data>']`\n\t\tif (item === undefined || item[0][0] === '/') {\n\t\t\tfragment.append(create_comment(item ? item[0].slice(3) : ''));\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [name, attributes, ...children] = item;\n\n\t\tconst namespace = name === 'svg' ? NAMESPACE_SVG : name === 'math' ? NAMESPACE_MATHML : ns;\n\n\t\tvar element = create_element(name, namespace, attributes?.is);\n\n\t\tfor (var key in attributes) {\n\t\t\tset_attribute(element, key, attributes[key]);\n\t\t}\n\n\t\tif (children.length > 0) {\n\t\t\tvar target =\n\t\t\t\telement.tagName === 'TEMPLATE'\n\t\t\t\t\t? /** @type {HTMLTemplateElement} */ (element).content\n\t\t\t\t\t: element;\n\n\t\t\ttarget.append(\n\t\t\t\tfragment_from_tree(children, element.tagName === 'foreignObject' ? undefined : namespace)\n\t\t\t);\n\t\t}\n\n\t\tfragment.append(element);\n\t}\n\n\treturn fragment;\n}\n\n/**\n * @param {TemplateStructure[]} structure\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function from_tree(structure, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tconst ns =\n\t\t\t\t(flags & TEMPLATE_USE_SVG) !== 0\n\t\t\t\t\t? NAMESPACE_SVG\n\t\t\t\t\t: (flags & TEMPLATE_USE_MATHML) !== 0\n\t\t\t\t\t\t? NAMESPACE_MATHML\n\t\t\t\t\t\t: undefined;\n\n\t\t\tnode = fragment_from_tree(structure, ns);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {() => Element | DocumentFragment} fn\n */\nexport function with_script(fn) {\n\treturn () => run_scripts(fn());\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html.replaceAll('<!>', '<!---->'); // XHTML compliance\n\treturn elem.content;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '#client/constants';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tread_hydration_instruction,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START, HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node, elseif?: [number,number]) => void, flag?: boolean) => void) => void} fn\n * @param {[number,number]} [elseif]\n * @returns {void}\n */\nexport function if_block(node, fn, [root_index, hydrate_index] = [0, 0]) {\n\tif (hydrating && root_index === 0) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = root_index > 0 ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (\n\t\t/** @type {(anchor: Node, elseif?: [number,number]) => void} */ fn,\n\t\tflag = true\n\t) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node, elseif?: [number,number]) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating && hydrate_index !== -1) {\n\t\t\tif (root_index === 0) {\n\t\t\t\tconst data = read_hydration_instruction(anchor);\n\n\t\t\t\tif (data === HYDRATION_START) {\n\t\t\t\t\thydrate_index = 0;\n\t\t\t\t} else if (data === HYDRATION_START_ELSE) {\n\t\t\t\t\thydrate_index = Infinity;\n\t\t\t\t} else {\n\t\t\t\t\thydrate_index = parseInt(data.substring(1));\n\t\t\t\t\tif (hydrate_index !== hydrate_index) {\n\t\t\t\t\t\t// if hydrate_index is NaN\n\t\t\t\t\t\t// we set an invalid index to force mismatch\n\t\t\t\t\t\thydrate_index = condition ? Infinity : -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst is_else = hydrate_index > root_index;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t\thydrate_index = -1; // ignore hydration in next else if\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor, [root_index + 1, hydrate_index]));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tread_hydration_instruction,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '#client/constants';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = read_hydration_instruction(anchor) === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n\n/**\n *\n * @param {TemplateNode} node\n */\nexport function read_hydration_instruction(node) {\n\tif (!node || node.nodeType !== 8) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn /** @type {Comment} */ (node).data;\n}\n","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","import { to_class } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element} dom\n * @param {boolean | number} is_html\n * @param {string | null} value\n * @param {string} [hash]\n * @param {Record<string, any>} [prev_classes]\n * @param {Record<string, any>} [next_classes]\n * @returns {Record<string, boolean> | undefined}\n */\nexport function set_class(dom, is_html, value, hash, prev_classes, next_classes) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev = dom.__className;\n\n\tif (\n\t\thydrating ||\n\t\tprev !== value ||\n\t\tprev === undefined // for edge case of `class={undefined}`\n\t) {\n\t\tvar next_class_name = to_class(value, hash, next_classes);\n\n\t\tif (!hydrating || next_class_name !== dom.getAttribute('class')) {\n\t\t\t// Removing the attribute when the value is only an empty string causes\n\t\t\t// performance issues vs simply making the className an empty string. So\n\t\t\t// we should only remove the class if the value is nullish\n\t\t\t// and there no hash/directives :\n\t\t\tif (next_class_name == null) {\n\t\t\t\tdom.removeAttribute('class');\n\t\t\t} else if (is_html) {\n\t\t\t\tdom.className = next_class_name;\n\t\t\t} else {\n\t\t\t\tdom.setAttribute('class', next_class_name);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = value;\n\t} else if (next_classes && prev_classes !== next_classes) {\n\t\tfor (var key in next_classes) {\n\t\t\tvar is_present = !!next_classes[key];\n\n\t\t\tif (prev_classes == null || is_present !== !!prev_classes[key]) {\n\t\t\t\tdom.classList.toggle(key, is_present);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn next_classes;\n}\n","/** @import { Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '#client/constants';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tget,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { attach } from './attachments.js';\nimport { clsx } from '../../../shared/attributes.js';\nimport { set_class } from './class.js';\nimport { set_style } from './style.js';\nimport { ATTACHMENT_KEY, NAMESPACE_HTML } from '../../../../constants.js';\nimport { block, branch, destroy_effect } from '../../reactivity/effects.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { init_select, select_option } from './bindings/select.js';\n\nexport const CLASS = Symbol('class');\nexport const STYLE = Symbol('style');\n\nconst IS_CUSTOM_ELEMENT = Symbol('is custom element');\nconst IS_HTML = Symbol('is html');\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\tvar attributes = get_attributes(element);\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\tif (\n\t\t\t// `style` should use `set_attribute` rather than the setter\n\t\t\tprop !== 'style' &&\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\t(setters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object')\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string | symbol, any> | undefined} prev\n * @param {Record<string | symbol, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(element, prev, next, css_hash, skip_warning = false) {\n\tvar attributes = get_attributes(element);\n\n\tvar is_custom_element = attributes[IS_CUSTOM_ELEMENT];\n\tvar preserve_attribute_case = !attributes[IS_HTML];\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t} else if (css_hash || next[CLASS]) {\n\t\tnext.class = null; /* force call to set_class() */\n\t}\n\n\tif (next[STYLE]) {\n\t\tnext.style ??= null; /* force call to set_style() */\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'class') {\n\t\t\tvar is_html = element.namespaceURI === 'http://www.w3.org/1999/xhtml';\n\t\t\tset_class(element, is_html, value, css_hash, prev?.[CLASS], next[CLASS]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[CLASS] = next[CLASS];\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'style') {\n\t\t\tset_style(element, value, prev?.[STYLE], next[STYLE]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[STYLE] = next[STYLE];\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style') {\n\t\t\t// avoid using the setter\n\t\t\tset_attribute(element, key, value);\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value, skip_warning);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} element\n * @param {(...expressions: any) => Record<string | symbol, any>} fn\n * @param {Array<() => any>} thunks\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n */\nexport function attribute_effect(\n\telement,\n\tfn,\n\tthunks = [],\n\tcss_hash,\n\tskip_warning = false,\n\td = derived\n) {\n\tconst deriveds = thunks.map(d);\n\n\t/** @type {Record<string | symbol, any> | undefined} */\n\tvar prev = undefined;\n\n\t/** @type {Record<symbol, Effect>} */\n\tvar effects = {};\n\n\tvar is_select = element.nodeName === 'SELECT';\n\tvar inited = false;\n\n\tblock(() => {\n\t\tvar next = fn(...deriveds.map(get));\n\n\t\tset_attributes(element, prev, next, css_hash, skip_warning);\n\n\t\tif (inited && is_select && 'value' in next) {\n\t\t\tselect_option(/** @type {HTMLSelectElement} */ (element), next.value, false);\n\t\t}\n\n\t\tfor (let symbol of Object.getOwnPropertySymbols(effects)) {\n\t\t\tif (!next[symbol]) destroy_effect(effects[symbol]);\n\t\t}\n\n\t\tfor (let symbol of Object.getOwnPropertySymbols(next)) {\n\t\t\tvar n = next[symbol];\n\n\t\t\tif (symbol.description === ATTACHMENT_KEY && (!prev || n !== prev[symbol])) {\n\t\t\t\tif (effects[symbol]) destroy_effect(effects[symbol]);\n\t\t\t\teffects[symbol] = branch(() => attach(element, () => n));\n\t\t\t}\n\t\t}\n\n\t\tprev = next;\n\t});\n\n\tif (is_select) {\n\t\tinit_select(\n\t\t\t/** @type {HTMLSelectElement} */ (element),\n\t\t\t() => /** @type {Record<string | symbol, any>} */ (prev).value\n\t\t);\n\t}\n\n\tinited = true;\n}\n\n/**\n *\n * @param {Element} element\n */\nfunction get_attributes(element) {\n\treturn /** @type {Record<string | symbol, unknown>} **/ (\n\t\t// @ts-expect-error\n\t\telement.__attributes ??= {\n\t\t\t[IS_CUSTOM_ELEMENT]: element.nodeName.includes('-'),\n\t\t\t[IS_HTML]: element.namespaceURI === NAMESPACE_HTML\n\t\t}\n\t);\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { untrack } from '../../../runtime.js';\nimport { is_runes } from '../../../context.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {any} */\n\t\tvar value = is_reset ? input.defaultValue : input.value;\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\tvar start = input.selectionStart;\n\t\t\tvar end = input.selectionEnd;\n\n\t\t\t// the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\n\t\t\t// Restore selection\n\t\t\tif (end !== null) {\n\t\t\t\tinput.selectionStart = start;\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\t(hydrating && input.defaultValue !== input.value) ||\n\t\t// If defaultValue is set, then value == defaultValue\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\n\t\t(untrack(get) == null && input.value)\n\t) {\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t}\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\n\t\tset(value);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the update value from the input instead.\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\n\t\t// If defaultChecked is set, then checked == defaultChecked\n\t\tuntrack(get) == null\n\t) {\n\t\tset(input.checked);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\thydrating &&\n\t\tinput.files\n\t) {\n\t\tset(input.files);\n\t}\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","import { STATE_SYMBOL } from '#client/constants';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { component_context } from '../../context.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","import { set, source } from '../../reactivity/sources.js';\nimport { get } from '../../runtime.js';\nimport { is_array } from '../../../shared/utils.js';\n\n/**\n * Under some circumstances, imports may be reactive in legacy mode. In that case,\n * they should be using `reactive_import` as part of the transformation\n * @param {() => any} fn\n */\nexport function reactive_import(fn) {\n\tvar s = source(0);\n\n\treturn function () {\n\t\tif (arguments.length === 1) {\n\t\t\tset(s, get(s) + 1);\n\t\t\treturn arguments[0];\n\t\t} else {\n\t\t\tget(s);\n\t\t\treturn fn();\n\t\t}\n\t};\n}\n\n/**\n * @this {any}\n * @param {Record<string, unknown>} $$props\n * @param {Event} event\n * @returns {void}\n */\nexport function bubble_event($$props, event) {\n\tvar events = /** @type {Record<string, Function[] | Function>} */ ($$props.$$events)?.[\n\t\tevent.type\n\t];\n\n\tvar callbacks = is_array(events) ? events.slice() : events == null ? [] : [events];\n\n\tfor (var fn of callbacks) {\n\t\t// Preserve \"this\" context\n\t\tfn.call(this, event);\n\t}\n}\n\n/**\n * Used to simulate `$on` on a component instance when `compatibility.componentApi === 4`\n * @param {Record<string, any>} $$props\n * @param {string} event_name\n * @param {Function} event_callback\n */\nexport function add_legacy_event_listener($$props, event_name, event_callback) {\n\t$$props.$$events ||= {};\n\t$$props.$$events[event_name] ||= [];\n\t$$props.$$events[event_name].push(event_callback);\n}\n\n/**\n * Used to simulate `$set` on a component instance when `compatibility.componentApi === 4`.\n * Needs component accessors so that it can call the setter of the prop. Therefore doesn't\n * work for updating props in `$$props` or `$$restProps`.\n * @this {Record<string, any>}\n * @param {Record<string, any>} $$new_props\n */\nexport function update_legacy_props($$new_props) {\n\tfor (var key in $$new_props) {\n\t\tif (key in this) {\n\t\t\tthis[key] = $$new_props[key];\n\t\t}\n\t}\n}\n","/** @import { Readable, StartStopNotifier, Subscriber, Unsubscriber, Updater, Writable } from '../public.js' */\n/** @import { Stores, StoresValues, SubscribeInvalidateTuple } from '../private.js' */\nimport { noop, run_all } from '../../internal/shared/utils.js';\nimport { safe_not_equal } from '../../internal/client/reactivity/equality.js';\nimport { subscribe_to_store } from '../utils.js';\n\n/**\n * @type {Array<SubscribeInvalidateTuple<any> | any>}\n */\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * @template T\n * @param {T} [value] initial value\n * @param {StartStopNotifier<T>} [start]\n * @returns {Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * @template T\n * @param {T} [value] initial value\n * @param {StartStopNotifier<T>} [start]\n * @returns {Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {Unsubscriber | null} */\n\tlet stop = null;\n\n\t/** @type {Set<SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\n\t/**\n\t * @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(/** @type {T} */ (value)));\n\t}\n\n\t/**\n\t * @param {Subscriber<T>} run\n\t * @param {() => void} [invalidate]\n\t * @returns {Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(/** @type {T} */ (value));\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * @template {Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: StoresValues<S>, set: (value: T) => void, update: (fn: Updater<T>) => void) => Unsubscriber | void} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * @template {Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: StoresValues<S>) => T} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\n/**\n * @template {Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\t/** @type {T[]} */\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = typeof result === 'function' ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe_to_store(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @template T\n * @param {Readable<T>} store  - store to make readonly\n * @returns {Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\t// @ts-expect-error TODO i suspect the bind is unnecessary\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * @template T\n * @param {Readable<T>} store\n * @returns {T}\n */\nexport function get(store) {\n\tlet value;\n\tsubscribe_to_store(store, (_) => (value = _))();\n\t// @ts-expect-error\n\treturn value;\n}\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { get, captured_signals, untrack } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { LEGACY_DERIVED_PROP, LEGACY_PROPS, STATE_SYMBOL } from '#client/constants';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (!p) continue;\n\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\n\t\t\tfor (const key of Object.getOwnPropertySymbols(p)) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @param {Derived} current_value\n * @returns {boolean}\n */\nfunction has_destroyed_component_ctx(current_value) {\n\treturn current_value.ctx?.d ?? false;\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0 && runes) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\t// Ensure we eagerly capture the initial value if it's bindable\n\tif (bindable) {\n\t\tget(current_value);\n\t}\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\n\t\t\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\treturn current_value.v;\n\t\t}\n\n\t\treturn get(current_value);\n\t};\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * `onMount`, like [`$effect`](https://svelte.dev/docs/svelte/$effect), schedules a function to run as soon as the component has been mounted to the DOM.\n * Unlike `$effect`, the provided function only runs once.\n *\n * It must be called during the component's initialisation (but doesn't need to live _inside_ the component;\n * it can be called from an external module). If a function is returned _synchronously_ from `onMount`,\n * it will be called when the component is unmounted.\n *\n * `onMount` functions do not run during [server-side rendering](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: null; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\nexport { flushSync } from './internal/client/runtime.js';\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.33.18';\nexport const PUBLIC_VERSION = '5';\n","<script>\n    import { createEventDispatcher } from 'svelte';\n    import { onMount } from 'svelte';\n    \n    const dispatch = createEventDispatcher();\n    \n    export let cellType = 'content'; // 'header' | 'content'\n    export let value = '';\n    export let placeholder = '';\n    export let moduleContext = null;\n    export let suggestions = [];\n    export let inputType = 'text'; // 'text' | 'currency' | 'date'\n    \n    let inputElement;\n    let showDropdown = false;\n    let filteredSuggestions = [];\n    let searchQuery = '';\n    let selectedIndex = -1;\n    \n    // Reactive statements\n    $: searchQuery = value;\n    $: if (searchQuery && suggestions.length > 0) {\n        filterSuggestions();\n    } else {\n        filteredSuggestions = [];\n        showDropdown = false;\n    }\n    \n    function filterSuggestions() {\n        if (!searchQuery) {\n            filteredSuggestions = suggestions.slice(0, 5);\n        } else {\n            filteredSuggestions = suggestions\n                .filter(item => item.toLowerCase().includes(searchQuery.toLowerCase()))\n                .slice(0, 5);\n        }\n        showDropdown = filteredSuggestions.length > 0;\n        selectedIndex = -1;\n    }\n    \n    function handleInput(event) {\n        value = event.target.value;\n        searchQuery = value;\n        \n        // Format based on input type\n        if (inputType === 'currency' && value) {\n            // Auto-format currency\n            if (!value.startsWith('$')) {\n                value = '$' + value.replace(/[^0-9]/g, '');\n            }\n        }\n        \n        dispatch('change', { value, cellType });\n    }\n    \n    function handleKeydown(event) {\n        if (!showDropdown) return;\n        \n        switch (event.key) {\n            case 'ArrowDown':\n                event.preventDefault();\n                selectedIndex = Math.min(selectedIndex + 1, filteredSuggestions.length - 1);\n                break;\n            case 'ArrowUp':\n                event.preventDefault();\n                selectedIndex = Math.max(selectedIndex - 1, -1);\n                break;\n            case 'Enter':\n                event.preventDefault();\n                if (selectedIndex >= 0) {\n                    selectSuggestion(filteredSuggestions[selectedIndex]);\n                } else if (cellType === 'content' && searchQuery && !suggestions.includes(searchQuery)) {\n                    // \"Create new...\" functionality\n                    createNewEntity();\n                }\n                break;\n            case 'Escape':\n                showDropdown = false;\n                selectedIndex = -1;\n                break;\n        }\n    }\n    \n    function selectSuggestion(suggestion) {\n        value = suggestion;\n        showDropdown = false;\n        selectedIndex = -1;\n        dispatch('change', { value, cellType });\n        dispatch('select', { value, cellType });\n    }\n    \n    function createNewEntity() {\n        console.log('🆕 Crea nuovo:', searchQuery);\n        dispatch('createNew', { value: searchQuery, cellType });\n        showDropdown = false;\n    }\n    \n    function handleFocus() {\n        if (suggestions.length > 0) {\n            filterSuggestions();\n        }\n    }\n    \n    function handleBlur() {\n        // Delay hiding dropdown to allow clicks on suggestions\n        setTimeout(() => {\n            showDropdown = false;\n        }, 150);\n    }\n    \n    onMount(() => {\n        // Auto-focus for new rows or specific contexts\n        if (cellType === 'content' && !value) {\n            // Optional auto-focus logic\n        }\n    });\n</script>\n\n<div class=\"smart-input-container\">\n    <input\n        bind:this={inputElement}\n        bind:value={value}\n        type={inputType === 'date' ? 'date' : 'text'}\n        {placeholder}\n        class=\"smart-input\"\n        class:has-suggestions={suggestions.length > 0}\n        class:currency={inputType === 'currency'}\n        on:input={handleInput}\n        on:keydown={handleKeydown}\n        on:focus={handleFocus}\n        on:blur={handleBlur}\n    />\n    \n    {#if showDropdown && filteredSuggestions.length > 0}\n        <div class=\"suggestions-dropdown\">\n            {#each filteredSuggestions as suggestion, i}\n                <div \n                    class=\"suggestion-item\"\n                    class:selected={i === selectedIndex}\n                    on:click={() => selectSuggestion(suggestion)}\n                    on:keydown\n                >\n                    <span class=\"suggestion-text\">{suggestion}</span>\n                    <span class=\"suggestion-type\">Esistente</span>\n                </div>\n            {/each}\n            \n            {#if cellType === 'content' && searchQuery && !suggestions.includes(searchQuery)}\n                <div \n                    class=\"suggestion-item create-new\"\n                    class:selected={selectedIndex === filteredSuggestions.length}\n                    on:click={createNewEntity}\n                    on:keydown\n                >\n                    <span class=\"suggestion-text\">➕ Crea nuovo: \"{searchQuery}\"</span>\n                    <span class=\"suggestion-type\">Nuovo</span>\n                </div>\n            {/if}\n        </div>\n    {/if}\n</div>\n\n<style>\n    .smart-input-container {\n        position: relative;\n        width: 100%;\n    }\n    \n    .smart-input {\n        width: 100%;\n        padding: 8px 12px;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        font-size: 0.95em;\n        transition: all 0.3s;\n        background: white;\n    }\n    \n    .smart-input:focus {\n        outline: none;\n        border-color: #3498db;\n        box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\n    }\n    \n    .smart-input.has-suggestions {\n        border-bottom-left-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n    \n    .smart-input.currency {\n        font-family: monospace;\n        text-align: right;\n    }\n    \n    .suggestions-dropdown {\n        position: absolute;\n        top: 100%;\n        left: 0;\n        right: 0;\n        background: white;\n        border: 1px solid #ddd;\n        border-top: none;\n        border-radius: 0 0 6px 6px;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n        z-index: 1000;\n        max-height: 200px;\n        overflow-y: auto;\n    }\n    \n    .suggestion-item {\n        padding: 10px 12px;\n        cursor: pointer;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        transition: background 0.2s;\n        border-bottom: 1px solid #f1f1f1;\n    }\n    \n    .suggestion-item:hover,\n    .suggestion-item.selected {\n        background: #f8f9fa;\n    }\n    \n    .suggestion-item.create-new {\n        background: #e8f5e8;\n        border-top: 1px solid #d4edda;\n    }\n    \n    .suggestion-item.create-new:hover,\n    .suggestion-item.create-new.selected {\n        background: #d1ecf1;\n    }\n    \n    .suggestion-text {\n        font-size: 0.95em;\n        color: #333;\n    }\n    \n    .suggestion-type {\n        font-size: 0.8em;\n        color: #666;\n        background: #f1f1f1;\n        padding: 2px 8px;\n        border-radius: 12px;\n    }\n    \n    .create-new .suggestion-type {\n        background: #d4edda;\n        color: #155724;\n    }\n    \n    .suggestion-item:last-child {\n        border-bottom: none;\n    }\n</style>","import { writable } from 'svelte/store';\n\nfunction createModuleStore() {\n    const { subscribe, set, update } = writable(null);\n\n    return {\n        subscribe,\n        \n        // Carica un modulo specifico dal backend\n        async loadModule(moduleId) {\n            try {\n                console.log('📦 Caricamento modulo:', moduleId);\n                \n                // Per ora usiamo dati mock, poi integreremo con API reali\n                const mockModule = {\n                    id: moduleId,\n                    instanceName: 'Crew List - Film Demo',\n                    moduleType: 'CrewList',\n                    createdAt: new Date().toISOString(),\n                    configuration: {\n                        columns: ['Nome', 'Ruolo', 'Fee', 'Data Inizio'],\n                        defaultAttributes: {\n                            entityType: 'Persona'\n                        }\n                    }\n                };\n                \n                set(mockModule);\n                console.log('✅ Modulo caricato:', mockModule);\n                return mockModule;\n                \n            } catch (error) {\n                console.error('❌ Errore caricamento modulo:', error);\n                set(null);\n                throw error;\n            }\n        },\n        \n        // Crea un nuovo modulo\n        async createModule(moduleData) {\n            try {\n                console.log('🆕 Creazione nuovo modulo:', moduleData);\n                \n                // TODO: Implementare chiamata API per creare modulo\n                const response = await fetch('/api/module-instances', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(moduleData)\n                });\n                \n                if (!response.ok) {\n                    throw new Error('Errore creazione modulo');\n                }\n                \n                const result = await response.json();\n                const newModule = result.data;\n                \n                set(newModule);\n                console.log('✅ Nuovo modulo creato:', newModule);\n                return newModule;\n                \n            } catch (error) {\n                console.error('❌ Errore creazione modulo:', error);\n                throw error;\n            }\n        },\n        \n        // Aggiorna la configurazione del modulo\n        async updateConfiguration(moduleId, newConfig) {\n            try {\n                update(currentModule => {\n                    if (currentModule && currentModule.id === moduleId) {\n                        return {\n                            ...currentModule,\n                            configuration: {\n                                ...currentModule.configuration,\n                                ...newConfig\n                            }\n                        };\n                    }\n                    return currentModule;\n                });\n                \n                console.log('✅ Configurazione modulo aggiornata');\n                \n            } catch (error) {\n                console.error('❌ Errore aggiornamento configurazione:', error);\n                throw error;\n            }\n        },\n        \n        // Reset store\n        reset() {\n            set(null);\n        },\n        \n        // Salva modulo corrente\n        async save() {\n            // TODO: Implementare salvataggio su backend\n            console.log('💾 Salvataggio modulo...');\n        }\n    };\n}\n\nexport const moduleStore = createModuleStore();","<script>\n    import { onMount } from 'svelte';\n    import SmartInput from './SmartInput.svelte';\n    import { moduleStore } from '../stores/moduleStore.js';\n    \n    export let module = null;\n    export let project = null;\n    \n    let gridData = [];\n    let columns = ['Nome', 'Ruolo', 'Fee', 'Data Inizio'];\n    let isLoading = false;\n    \n    // Reactive statements\n    $: if (module) {\n        loadModuleMembers();\n    }\n    \n    async function loadModuleMembers() {\n        if (!module?.id) return;\n        \n        isLoading = true;\n        try {\n            const response = await fetch(`/api/modules/${module.id}/members`);\n            const result = await response.json();\n            \n            if (result.success) {\n                gridData = result.data.map(member => ({\n                    id: member.entity.id,\n                    entity: member.entity,\n                    nome: member.entity.name || member.entity.nome || 'N/A',\n                    ruolo: member.relationAttributes.ruolo || 'N/A',\n                    fee: member.relationAttributes.fee || 'N/A',\n                    dataInizio: member.relationAttributes.startDate || 'N/A',\n                    relationAttributes: member.relationAttributes\n                }));\n                console.log('✅ Membri modulo caricati:', gridData.length);\n            } else {\n                console.error('❌ Errore caricamento membri:', result.error);\n                gridData = [];\n            }\n        } catch (error) {\n            console.error('❌ Errore fetch membri:', error);\n            gridData = [];\n        } finally {\n            isLoading = false;\n        }\n    }\n    \n    function addNewRow() {\n        const newRow = {\n            id: `new_${Date.now()}`,\n            entity: { name: '', entityType: 'Persona' },\n            nome: '',\n            ruolo: '',\n            fee: '',\n            dataInizio: '',\n            relationAttributes: {},\n            isNew: true\n        };\n        gridData = [...gridData, newRow];\n    }\n    \n    async function saveRow(rowData) {\n        if (!module?.id) return;\n        \n        try {\n            console.log('💾 Salvando riga:', rowData);\n            \n            // Se è una nuova riga, prima crea l'entità\n            if (rowData.isNew) {\n                // TODO: Creare entità e poi aggiungere al modulo\n                console.log('🆕 Creazione nuova entità...');\n            } else {\n                // Aggiorna attributi relazione esistente\n                const response = await fetch(`/api/modules/${module.id}/members/${rowData.entity.id}/attributes`, {\n                    method: 'PUT',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        attributes: {\n                            ruolo: rowData.ruolo,\n                            fee: rowData.fee,\n                            startDate: rowData.dataInizio\n                        }\n                    })\n                });\n                \n                const result = await response.json();\n                if (result.success) {\n                    console.log('✅ Attributi aggiornati');\n                    await loadModuleMembers(); // Ricarica dati\n                } else {\n                    console.error('❌ Errore aggiornamento:', result.error);\n                }\n            }\n        } catch (error) {\n            console.error('❌ Errore salvataggio riga:', error);\n        }\n    }\n    \n    onMount(() => {\n        console.log('🎯 DynamicModuleGrid montato', { module, project });\n    });\n</script>\n\n<div class=\"dynamic-grid-container\">\n    <div class=\"grid-header\">\n        <h3>📊 Griglia Dinamica - {module?.instanceName || 'Caricamento...'}</h3>\n        \n        <div class=\"grid-actions\">\n            <button class=\"grid-btn primary\" on:click={addNewRow}>\n                ➕ Aggiungi Membro\n            </button>\n            <button class=\"grid-btn secondary\" on:click={loadModuleMembers}>\n                🔄 Ricarica\n            </button>\n        </div>\n    </div>\n    \n    {#if isLoading}\n        <div class=\"loading-state\">\n            <div class=\"spinner\"></div>\n            <p>Caricamento membri modulo...</p>\n        </div>\n    {:else}\n        <div class=\"grid-table\">\n            <table>\n                <thead>\n                    <tr>\n                        {#each columns as column}\n                            <th>{column}</th>\n                        {/each}\n                        <th>Azioni</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {#each gridData as row, i (row.id)}\n                        <tr class=\"grid-row\" class:new-row={row.isNew}>\n                            <td>\n                                <SmartInput \n                                    cellType=\"content\"\n                                    value={row.nome}\n                                    placeholder=\"Nome persona...\"\n                                    moduleContext={module}\n                                    on:change={(e) => {\n                                        row.nome = e.detail.value;\n                                        if (row.entity) row.entity.name = e.detail.value;\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <SmartInput \n                                    cellType=\"content\"\n                                    value={row.ruolo}\n                                    placeholder=\"Ruolo...\"\n                                    moduleContext={module}\n                                    suggestions={['Director', 'Actor', 'Producer', 'Cinematographer', 'Composer']}\n                                    on:change={(e) => row.ruolo = e.detail.value}\n                                />\n                            </td>\n                            <td>\n                                <SmartInput \n                                    cellType=\"content\"\n                                    value={row.fee}\n                                    placeholder=\"$0\"\n                                    moduleContext={module}\n                                    inputType=\"currency\"\n                                    on:change={(e) => row.fee = e.detail.value}\n                                />\n                            </td>\n                            <td>\n                                <SmartInput \n                                    cellType=\"content\"\n                                    value={row.dataInizio}\n                                    placeholder=\"YYYY-MM-DD\"\n                                    moduleContext={module}\n                                    inputType=\"date\"\n                                    on:change={(e) => row.dataInizio = e.detail.value}\n                                />\n                            </td>\n                            <td class=\"actions-cell\">\n                                <button class=\"row-action save\" on:click={() => saveRow(row)}>\n                                    💾\n                                </button>\n                                <button class=\"row-action delete\" on:click={() => {\n                                    gridData = gridData.filter(r => r.id !== row.id);\n                                }}>\n                                    🗑️\n                                </button>\n                            </td>\n                        </tr>\n                    {/each}\n                    \n                    {#if gridData.length === 0}\n                        <tr>\n                            <td colspan={columns.length + 1} class=\"empty-state\">\n                                <div class=\"empty-content\">\n                                    <p>👥 Nessun membro nel modulo</p>\n                                    <button class=\"grid-btn primary\" on:click={addNewRow}>\n                                        ➕ Aggiungi il primo membro\n                                    </button>\n                                </div>\n                            </td>\n                        </tr>\n                    {/if}\n                </tbody>\n            </table>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .dynamic-grid-container {\n        background: white;\n        border: 1px solid #e1e5e9;\n        border-radius: 12px;\n        overflow: hidden;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n    }\n    \n    .grid-header {\n        background: #f8f9fa;\n        padding: 20px;\n        border-bottom: 1px solid #e1e5e9;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        flex-wrap: wrap;\n        gap: 15px;\n    }\n    \n    .grid-header h3 {\n        margin: 0;\n        color: #2c3e50;\n        font-size: 1.3em;\n    }\n    \n    .grid-actions {\n        display: flex;\n        gap: 10px;\n    }\n    \n    .grid-btn {\n        border: none;\n        padding: 8px 16px;\n        border-radius: 6px;\n        font-size: 0.9em;\n        cursor: pointer;\n        transition: all 0.3s;\n        font-weight: 500;\n    }\n    \n    .grid-btn.primary {\n        background: #27ae60;\n        color: white;\n    }\n    \n    .grid-btn.primary:hover {\n        background: #229954;\n        transform: translateY(-1px);\n    }\n    \n    .grid-btn.secondary {\n        background: #ecf0f1;\n        color: #34495e;\n        border: 1px solid #bdc3c7;\n    }\n    \n    .grid-btn.secondary:hover {\n        background: #d5dbdb;\n    }\n    \n    .loading-state {\n        padding: 40px;\n        text-align: center;\n        color: #666;\n    }\n    \n    .spinner {\n        width: 30px;\n        height: 30px;\n        border: 3px solid #f3f3f3;\n        border-top: 3px solid #3498db;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n        margin: 0 auto 15px;\n    }\n    \n    @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n    }\n    \n    .grid-table {\n        overflow-x: auto;\n    }\n    \n    table {\n        width: 100%;\n        border-collapse: collapse;\n        font-size: 0.95em;\n    }\n    \n    th {\n        background: #34495e;\n        color: white;\n        padding: 12px 15px;\n        text-align: left;\n        font-weight: 600;\n        border-bottom: 2px solid #2c3e50;\n    }\n    \n    td {\n        padding: 10px 15px;\n        border-bottom: 1px solid #ecf0f1;\n        vertical-align: middle;\n    }\n    \n    .grid-row {\n        transition: background-color 0.3s;\n    }\n    \n    .grid-row:hover {\n        background: #f8f9fa;\n    }\n    \n    .grid-row.new-row {\n        background: #e8f5e8;\n    }\n    \n    .actions-cell {\n        width: 100px;\n        text-align: center;\n    }\n    \n    .row-action {\n        background: none;\n        border: none;\n        font-size: 1.1em;\n        cursor: pointer;\n        padding: 5px;\n        margin: 0 2px;\n        border-radius: 4px;\n        transition: background 0.3s;\n    }\n    \n    .row-action:hover {\n        background: rgba(0,0,0,0.1);\n    }\n    \n    .empty-state {\n        text-align: center;\n        padding: 40px;\n    }\n    \n    .empty-content p {\n        color: #666;\n        margin-bottom: 20px;\n        font-size: 1.1em;\n    }\n</style>","<script>\n    export let project = null;\n    export let module = null;\n    \n    $: breadcrumb = project && module ? \n        `${project.name} → ${module.instanceName}` : \n        'Nessun modulo selezionato';\n</script>\n\n<div class=\"module-header\">\n    <div class=\"breadcrumb\">\n        <span class=\"breadcrumb-text\">{breadcrumb}</span>\n    </div>\n    \n    {#if module}\n        <div class=\"module-info\">\n            <h2 class=\"module-title\">{module.instanceName}</h2>\n            {#if project}\n                <p class=\"project-context\">Progetto: <strong>{project.name}</strong></p>\n            {/if}\n            <p class=\"module-type\">Tipo: {module.moduleType || 'Standard'}</p>\n        </div>\n        \n        <div class=\"module-actions\">\n            <button class=\"action-btn primary\">\n                💾 Salva Modulo\n            </button>\n            <button class=\"action-btn secondary\">\n                📊 Visualizza Aggregati\n            </button>\n            <button class=\"action-btn secondary\">\n                🔗 Gestisci Collegamenti\n            </button>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .module-header {\n        background: white;\n        border: 1px solid #e1e5e9;\n        border-radius: 12px;\n        padding: 20px;\n        margin-bottom: 20px;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n    }\n    \n    .breadcrumb {\n        margin-bottom: 15px;\n    }\n    \n    .breadcrumb-text {\n        font-size: 0.9em;\n        color: #666;\n        background: #f8f9fa;\n        padding: 6px 12px;\n        border-radius: 20px;\n        font-family: monospace;\n    }\n    \n    .module-info {\n        margin-bottom: 20px;\n    }\n    \n    .module-title {\n        margin: 0 0 10px 0;\n        font-size: 1.8em;\n        color: #2c3e50;\n        font-weight: 600;\n    }\n    \n    .project-context, .module-type {\n        margin: 5px 0;\n        color: #555;\n        font-size: 1em;\n    }\n    \n    .module-actions {\n        display: flex;\n        gap: 12px;\n        flex-wrap: wrap;\n    }\n    \n    .action-btn {\n        border: none;\n        padding: 10px 20px;\n        border-radius: 8px;\n        font-size: 0.95em;\n        cursor: pointer;\n        transition: all 0.3s;\n        font-weight: 500;\n    }\n    \n    .action-btn.primary {\n        background: #3498db;\n        color: white;\n    }\n    \n    .action-btn.primary:hover {\n        background: #2980b9;\n        transform: translateY(-1px);\n    }\n    \n    .action-btn.secondary {\n        background: #ecf0f1;\n        color: #34495e;\n        border: 1px solid #bdc3c7;\n    }\n    \n    .action-btn.secondary:hover {\n        background: #d5dbdb;\n        transform: translateY(-1px);\n    }\n</style>","import { writable } from 'svelte/store';\n\nfunction createProjectStore() {\n    const { subscribe, set, update } = writable(null);\n\n    return {\n        subscribe,\n        \n        // Carica un progetto specifico dal backend\n        async loadProject(projectId) {\n            try {\n                console.log('🎬 Caricamento progetto:', projectId);\n                \n                // Per ora usiamo dati mock, poi integreremo con API reali\n                const mockProject = {\n                    id: projectId,\n                    name: 'Film: Inception Demo',\n                    type: 'Film',\n                    description: 'Un thriller fantascientifico diretto da Christopher Nolan',\n                    status: 'In Produzione',\n                    createdAt: new Date().toISOString(),\n                    budget: 160000000,\n                    currency: 'USD'\n                };\n                \n                set(mockProject);\n                console.log('✅ Progetto caricato:', mockProject);\n                return mockProject;\n                \n            } catch (error) {\n                console.error('❌ Errore caricamento progetto:', error);\n                set(null);\n                throw error;\n            }\n        },\n        \n        // Crea un nuovo progetto\n        async createProject(projectData) {\n            try {\n                console.log('🆕 Creazione nuovo progetto:', projectData);\n                \n                // TODO: Implementare chiamata API per creare progetto\n                const response = await fetch('/api/projects', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(projectData)\n                });\n                \n                if (!response.ok) {\n                    throw new Error('Errore creazione progetto');\n                }\n                \n                const result = await response.json();\n                const newProject = result.data;\n                \n                set(newProject);\n                console.log('✅ Nuovo progetto creato:', newProject);\n                return newProject;\n                \n            } catch (error) {\n                console.error('❌ Errore creazione progetto:', error);\n                throw error;\n            }\n        },\n        \n        // Recupera tutti i moduli del progetto\n        async getProjectModules(projectId) {\n            try {\n                // TODO: Implementare API per recuperare moduli del progetto\n                console.log('📦 Caricamento moduli per progetto:', projectId);\n                \n                // Mock data per ora\n                const mockModules = [\n                    {\n                        id: 'module_1',\n                        instanceName: 'Crew List - Inception',\n                        moduleType: 'CrewList',\n                        memberCount: 12\n                    },\n                    {\n                        id: 'module_2', \n                        instanceName: 'Location List - Inception',\n                        moduleType: 'LocationList',\n                        memberCount: 8\n                    }\n                ];\n                \n                return mockModules;\n                \n            } catch (error) {\n                console.error('❌ Errore caricamento moduli progetto:', error);\n                return [];\n            }\n        },\n        \n        // Aggiorna dati progetto\n        async updateProject(projectId, updates) {\n            try {\n                update(currentProject => {\n                    if (currentProject && currentProject.id === projectId) {\n                        return {\n                            ...currentProject,\n                            ...updates,\n                            updatedAt: new Date().toISOString()\n                        };\n                    }\n                    return currentProject;\n                });\n                \n                console.log('✅ Progetto aggiornato');\n                \n            } catch (error) {\n                console.error('❌ Errore aggiornamento progetto:', error);\n                throw error;\n            }\n        },\n        \n        // Reset store\n        reset() {\n            set(null);\n        }\n    };\n}\n\nexport const projectStore = createProjectStore();","import { mount } from 'svelte';\nimport App from './App.svelte';\n\nconst app = mount(App, {\n    target: document.body\n});\n\nexport default app;","<script>\n    import { onMount, onDestroy } from 'svelte';\n    import DynamicModuleGrid from './components/DynamicModuleGrid.svelte';\n    import ModuleHeader from './components/ModuleHeader.svelte';\n    import { moduleStore } from './stores/moduleStore.js';\n    import { projectStore } from './stores/projectStore.js';\n    \n    let currentModule = null;\n    let currentProject = null;\n    let moduleUnsubscribe;\n    let projectUnsubscribe;\n    \n    onMount(() => {\n        console.log('🎯 Svelte App UI Dinamica inizializzata');\n        \n        // Subscribe ai stores nel onMount\n        moduleUnsubscribe = moduleStore.subscribe(value => {\n            currentModule = value;\n        });\n        \n        projectUnsubscribe = projectStore.subscribe(value => {\n            currentProject = value;\n        });\n        \n        // Inizializza con dati di test o recupera da URL params\n        const urlParams = new URLSearchParams(window.location.search);\n        const moduleId = urlParams.get('moduleId');\n        const projectId = urlParams.get('projectId');\n        \n        if (moduleId && projectId) {\n            // Carica modulo specifico\n            moduleStore.loadModule(moduleId);\n            projectStore.loadProject(projectId);\n        } else {\n            // Modalità demo/test\n            console.log('🧪 Modalità demo - usando dati di test');\n        }\n    });\n    \n    onDestroy(() => {\n        // Cleanup subscriptions\n        if (moduleUnsubscribe) moduleUnsubscribe();\n        if (projectUnsubscribe) projectUnsubscribe();\n    });\n</script>\n\n<main class=\"dynamic-ui-container\">\n    <header class=\"app-header\">\n        <h1>🎯 SSOT UI Dinamica - Svelte</h1>\n        <p>Sistema di modellazione dati intelligente con griglia dinamica</p>\n    </header>\n    \n    {#if currentProject}\n        <ModuleHeader project={currentProject} module={currentModule} />\n    {/if}\n    \n    <section class=\"main-content\">\n        {#if currentModule}\n            <DynamicModuleGrid \n                module={currentModule} \n                project={currentProject}\n            />\n        {:else}\n            <div class=\"welcome-screen\">\n                <h2>👋 Benvenuto nel Sistema UI Dinamica</h2>\n                <p>Modello gerarchico: <strong>Progetto → ModuleInstance → Entità</strong></p>\n                \n                <div class=\"demo-actions\">\n                    <button class=\"demo-btn\" on:click={() => {\n                        // Demo: Crea nuovo progetto crew list\n                        console.log('🎬 Demo: Creazione Crew List');\n                    }}>\n                        🎬 Demo: Crew List Film\n                    </button>\n                    \n                    <button class=\"demo-btn\" on:click={() => {\n                        // Demo: Carica progetto esistente\n                        console.log('📂 Demo: Carica Progetto');\n                    }}>\n                        📂 Carica Progetto Esistente\n                    </button>\n                </div>\n                \n                <div class=\"architecture-info\">\n                    <h3>🏗️ Architettura Implementata</h3>\n                    <ul>\n                        <li>✅ <strong>ModuleRelationService</strong> - Backend completo</li>\n                        <li>✅ <strong>API REST</strong> - 8 endpoints per CRUD moduli</li>\n                        <li>✅ <strong>Attributi Relazionali</strong> - Fee, ruoli, date su relazioni</li>\n                        <li>🚧 <strong>Svelte UI</strong> - Smart Input con autocomplete</li>\n                        <li>🚧 <strong>Griglia Dinamica</strong> - Modeling interface</li>\n                    </ul>\n                </div>\n            </div>\n        {/if}\n    </section>\n</main>\n\n<style>\n    .dynamic-ui-container {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 20px;\n    }\n    \n    .app-header {\n        text-align: center;\n        margin-bottom: 30px;\n        padding: 20px;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        border-radius: 12px;\n    }\n    \n    .app-header h1 {\n        margin: 0 0 10px 0;\n        font-size: 2.5em;\n        font-weight: 300;\n    }\n    \n    .app-header p {\n        margin: 0;\n        opacity: 0.9;\n        font-size: 1.1em;\n    }\n    \n    .main-content {\n        min-height: 400px;\n    }\n    \n    .welcome-screen {\n        text-align: center;\n        padding: 40px 20px;\n    }\n    \n    .welcome-screen h2 {\n        color: #333;\n        margin-bottom: 20px;\n    }\n    \n    .demo-actions {\n        margin: 30px 0;\n        display: flex;\n        gap: 20px;\n        justify-content: center;\n        flex-wrap: wrap;\n    }\n    \n    .demo-btn {\n        background: #4CAF50;\n        color: white;\n        border: none;\n        padding: 15px 30px;\n        border-radius: 8px;\n        font-size: 1.1em;\n        cursor: pointer;\n        transition: background 0.3s;\n    }\n    \n    .demo-btn:hover {\n        background: #45a049;\n        transform: translateY(-2px);\n    }\n    \n    .architecture-info {\n        background: #f8f9fa;\n        border-radius: 12px;\n        padding: 30px;\n        margin-top: 40px;\n        text-align: left;\n        max-width: 600px;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    \n    .architecture-info h3 {\n        margin-top: 0;\n        color: #333;\n    }\n    \n    .architecture-info ul {\n        list-style: none;\n        padding: 0;\n    }\n    \n    .architecture-info li {\n        padding: 8px 0;\n        font-size: 1.05em;\n    }\n    \n    .architecture-info li strong {\n        color: #2c3e50;\n    }\n</style>"],"names":["DEV","is_array","Array","isArray","index_of","prototype","indexOf","array_from","from","define_property","Object","defineProperty","get_descriptor","getOwnPropertyDescriptor","get_descriptors","getOwnPropertyDescriptors","object_prototype","array_prototype","get_prototype_of","getPrototypeOf","is_extensible","isExtensible","noop","run","fn","run_all","arr","i","length","BRANCH_EFFECT","ROOT_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_TRANSPARENT","LEGACY_DERIVED_PROP","EFFECT_HAS_DERIVED","EFFECT_IS_UPDATING","STATE_SYMBOL","Symbol","LEGACY_PROPS","LOADING_ATTR_SYMBOL","equals","value","this","v","safe_not_equal","a","b","safe_equals","legacy_mode_flag","UNINITIALIZED","NAMESPACE_HTML","lifecycle_outside_component","name","Error","component_context","set_component_context","context","push","props","runes","ctx","p","c","d","e","m","s","x","l","u","r1","r2","source","teardown","pop","component","context_stack_item","component_effects","previous_effect","active_effect","previous_reaction","active_reaction","component_effect","set_active_effect","effect","set_active_reaction","reaction","is_runes","proxy","sources","Map","is_proxied_array","version","with_parent","result","set","Proxy","_","prop","descriptor","configurable","enumerable","writable","e.state_descriptors_fixed","get","undefined","deleteProperty","target","update_version","ls","n","Number","isInteger","receiver","exists","Reflect","has","other_s","call","ownKeys","own_keys","filter","key","setPrototypeOf","e.state_prototype_fixed","signal","derived","flags","DERIVED","parent_derived","f","deps","effects","reactions","rv","wv","parent","derived_safe_equal","destroy_derived_effects","destroy_effect","execute_derived","prev_active_effect","get_derived_parent_effect","update_reaction","update_derived","increment_write_version","is_destroying_effect","set_signal_status","skip_reaction","old_values","stack","state","reaction_sources","mutable_source","initial_value","immutable","should_proxy","untracking","includes","e.state_unsafe_mutation","internal_set","old_value","mark_reactions","untracked_writes","set_untracked_writes","status","schedule_effect","$window","is_firefox","first_child_getter","next_sibling_getter","create_text","document","createTextNode","get_first_child","node","get_next_sibling","child","is_text","sibling","count","next_sibling","validate_effect","rune","e.effect_orphan","e.effect_in_unowned_derived","e.effect_in_teardown","create_effect","type","sync","nodes_start","nodes_end","first","last","next","prev","transitions","update_effect","parent_effect","parent_last","push_effect","user_effect","legacy_pre_effect","token","ran","render_effect","untrack","legacy_pre_effect_reset","check_dirtiness","template_effect","thunks","deriveds","map","block","RENDER_EFFECT","branch","execute_effect_teardown","previously_destroying_effect","set_is_destroying_effect","destroy_effect_children","remove_dom","removed","end","remove","remove_effect_dom","remove_reactions","transition","stop","unlink_effect","pause_effect","callback","pause_children","run_out_transitions","remaining","check","out","local","is_global","resume_effect","resume_children","in","micro_tasks","run_micro_tasks","tasks","queue_micro_task","queueMicrotask","invoke_error_boundary","error","is_flushing","last_scheduled_effect","is_updating_effect","queued_root_effects","new_deps","skipped_deps","write_version","read_version","captured_signals","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","schedule_possible_effect_self_invalidation","root","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","previous_reaction_sources","previous_component_context","previous_untracking","handle_error","remove_reaction","index","new_length","start_index","was_updating_effect","destroy_block_effect_children","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","flush_count","root_effects","flush_queued_effects","process_effects","clear","is_branch","is_derived","add","invalidate_inner_signals","captured","previous_captured_signals","Set","capture_signals","dep","STATUS_MASK","deep_read_state","EventTarget","deep_read","visited","Date","getTime","proto","descriptors","PASSIVE_EVENTS","is_passive_event","listening_to_form_reset","without_reactive_context","listen_to_event_and_reset_event","element","event","handler","on_reset","addEventListener","__on_r","evt","Promise","resolve","then","defaultPrevented","elements","capture","all_registered_events","root_event_handles","event_name","dom","passive","options","target_handler","handle_event_propagation","cancelBubble","startsWith","create_event","body","window","HTMLMediaElement","removeEventListener","handler_element","owner_document","ownerDocument","path","composedPath","current_target","path_idx","handled_at","__root","at_idx","handler_idx","throw_error","other_errors","parent_element","assignedSlot","parentNode","host","delegated","data","apply","currentTarget","assign_nodes","start","from_html","content","is_fragment","use_import_node","has_start","html","elem","createElement","innerHTML","replaceAll","clone","importNode","cloneNode","append","anchor","before","set_text","text","str","__t","nodeValue","document_listeners","mounted_components","WeakMap","if_block","root_index","hydrate_index","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","new_condition","each","get_collection","get_key","render_fn","fallback_fn","items","appendChild","fallback","was_empty","each_array","collection","array","seen","to_animate","item","is_animated","should_update","current","matched","stashed","measure","update_item","unfix","delete","j","move","link","k","create_item","to_destroy","destroy_length","controlled_anchor","fix","items_map","is_controlled","parent_node","textContent","pause_effects","reconcile","dest","next_node","whitespace","set_class","is_html","hash","prev_classes","next_classes","__className","next_class_name","directives","classname","len","substring","to_class","removeAttribute","className","is_present","classList","toggle","IS_CUSTOM_ELEMENT","IS_HTML","set_attribute","attribute","skip_warning","attributes","__attributes","nodeName","namespaceURI","get_attributes","setters","setters_cache","element_proto","Element","get_setters","setAttribute","is_numberlike_input","input","to_number","is_bound_this","bound_value","element_or_component","init","callbacks","changed","observe_all","fns","bubble_event","$$props","events","slice","subscriber_queue","subscribers","new_value","run_queue","subscriber","update","subscribe","invalidate","size","is_store_binding","has_destroyed_component_ctx","current_value","prop_value","bindable","lazy","is_store_sub","previous_is_store_binding","capture_store_binding","getter","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","derived_getter","legacy_parent","$$legacy","mutation","arguments","from_child","was_from_child","inner_current_value","parent_value","child_value","onMount","cleanup","createEventDispatcher","active_component_context","detail","bubbles","cancelable","CustomEvent","create_custom_event","__svelte","dispatch","cellType","placeholder","suggestions","$.prop","inputType","inputElement","$.mutable_source","showDropdown","filteredSuggestions","searchQuery","selectedIndex","filterSuggestions","$.get","toLowerCase","$.set","selectSuggestion","suggestion","createNewEntity","console","log","get_value","old_parts","parts","$.bind_this","$$value","$.each","node_1","selected","$.event","div_2","$$render","consequent","consequent_1","$.set_attribute","currency","is_reset","defaultValue","selectionStart","selectionEnd","Math","min","replace","preventDefault","max","setTimeout","moduleStore","loadModule","moduleId","mockModule","id","instanceName","moduleType","createdAt","toISOString","configuration","columns","defaultAttributes","entityType","createModule","moduleData","response","fetch","method","headers","JSON","stringify","ok","newModule","json","updateConfiguration","newConfig","currentModule","reset","save","createModuleStore","module","project","gridData","isLoading","async","loadModuleMembers","success","member","entity","nome","ruolo","relationAttributes","fee","dataInizio","startDate","addNewRow","newRow","now","isNew","column","node_2","row","change","$.template_effect","$0","classes","$.set_class","tr_1","$.derived_safe_equal","button_2","rowData","saveRow","r","alternate","breadcrumb","fragment","Comment","$.set_text","text_2","text_1","projectStore","loadProject","projectId","mockProject","description","budget","createProject","projectData","newProject","getProjectModules","memberCount","updateProject","updates","currentProject","updatedAt","createProjectStore","app","moduleUnsubscribe","projectUnsubscribe","urlParams","URLSearchParams","location","search","Component","intro","test","navigator","userAgent","element_prototype","node_prototype","Node","text_prototype","Text","__click","__style","__e","init_operations","registered_events","event_handle","unmount","fulfil","outro","component_root","anchor_node","$$events","removeChild","_mount"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39]}